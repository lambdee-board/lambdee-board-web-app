# This workflow uses actions that are not certified by GitHub.  They are
# provided by a third-party and are governed by separate terms of service,
# privacy policy, and support documentation.
#
# This workflow will install a prebuilt Ruby version, install dependencies, and
# run tests and linters.
name: "CI"
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:11-alpine
        ports:
          - "5432:5432"
        env:
          POSTGRES_DB: rails_test
          POSTGRES_USER: rails
          POSTGRES_PASSWORD: password
    env:
      CI: true
      RAILS_ENV: test
      DATABASE_URL: "postgres://rails:password@localhost:5432/rails_test"
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      # Add or replace dependency steps here
      - name: Install Ruby and gems
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: ./node_modules
          key: modules-${{ hashFiles('package-lock.json') }}
      - name: Install node modules
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Run the setup script
        run: ./bin/bundle_install
      # Add or replace database setup steps here
      - name: Set up the database
        run: bin/rails db:schema:load
      # Add or replace test runners here
      - name: Run backend tests
        run: bin/rake
      - name: Build the frontend
        run: |
          BUILD=true bin/rails runner bin/.build/preprocess_react.rb
          bin/build
      - name: Run cypress tests
        run: bin/cypress run
      - name: Archive test artifacts
        uses: actions/upload-artifact@v3
        if: ${{ !success() }}
        with:
          name: cypress_screenshots
          path: tmp/cypress_screenshots
  lint:
    runs-on: ubuntu-latest
    env:
      CI: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install Ruby and gems
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: ./node_modules
          key: modules-${{ hashFiles('package-lock.json') }}
      - name: Install node modules
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Run the setup script
        run: ./bin/bundle_install
      # Add or replace any other lints here
      - name: Security audit dependencies
        run: bundle exec bundle audit --update
      - name: Security audit application code
        run: bundle exec brakeman -q -w2
      - name: Lint Ruby files
        run: bundle exec rubocop --parallel
      - name: Lint JS files
        run: npm run lint
