# This workflow uses actions that are not certified by GitHub.  They are
# provided by a third-party and are governed by separate terms of service,
# privacy policy, and support documentation.
#
# This workflow will install a prebuilt Ruby version, install dependencies, and
# run tests and linters.
name: "CI"
on:
  push:
    branches: [ main ]
  pull_request:
    types: [ opened ]
    branches: [ main ]
permissions:
  actions: read
  checks: write
  contents: read
  pull-requests: write
  statuses: read
jobs:
  tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:11-alpine
        ports:
          - "5432:5432"
        env:
          POSTGRES_DB: rails_test
          POSTGRES_USER: rails
          POSTGRES_PASSWORD: password
    env:
      CI: true
      RAILS_ENV: test
      DATABASE_URL: "postgres://rails:password@localhost:5432/rails_test"
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      # Add or replace dependency steps here
      - name: Install Ruby and gems
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: ./node_modules
          key: node_modules-${{ hashFiles('package-lock.json') }}
      - name: Cache cypress
        uses: actions/cache@v2
        with:
          path: ~/.cache/Cypress
          key: cypress-${{ hashFiles('package-lock.json') }}
      - name: Run the setup script
        run: ./bin/bundle_install
      # Add or replace database setup steps here
      - name: Set up the database
        run: bin/rails db:schema:load
      # Add or replace test runners here
      - name: Backend unit tests
        run: COVERAGE=true bin/rails test
      - name: Backend spec tests
        run: COVERAGE=true bundle exec rspec
      - name: Build the frontend
        run: |
          BUILD=true bin/rails runner bin/.build/preprocess_react.rb
          bin/build
      - name: Run cypress tests
        run: bin/cypress run
      - name: Backend Code Coverage report
        uses: 5monkeys/cobertura-action@master
        with:
          path: coverage/coverage.xml
          minimum_coverage: 75
          repo_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Prepare data for a Code Coverage badge
        run: |
          echo "COVERAGE=$(./bin/code_coverage)" >> $GITHUB_ENV
          REF=${{ github.ref }}
          echo "github.ref: $REF"
          IFS='/' read -ra PATHS <<< "$REF"
          BRANCH_NAME="${PATHS[1]}_${PATHS[2]}"
          echo $BRANCH_NAME
          echo "BRANCH=$(echo ${BRANCH_NAME})" >> $GITHUB_ENV
      - name: Create the Coverage Badge
        uses: schneegans/dynamic-badges-action@v1.4.0
        with:
          auth: ${{ secrets.GIST_SECRET }}
          gistID: 9a8c8388655c06d65286da59107df2d2
          filename: lambdee_board_web_app__${{ env.BRANCH }}.json
          style: flat
          label: Backend Code Coverage
          message: ${{ env.COVERAGE }}%
          logoColor: EB222F
          namedLogo: ruby
          valColorRange: ${{ env.COVERAGE }}
          maxColorRange: 100
          minColorRange: 0
      - name: Archive code coverage artifacts
        uses: actions/upload-artifact@v3
        with:
          name: code_coverage
          path: coverage
      - name: Archive test artifacts
        uses: actions/upload-artifact@v3
        if: ${{ !success() }}
        with:
          name: cypress_screenshots
          path: tmp/cypress_screenshots

  lint:
    runs-on: ubuntu-latest
    env:
      CI: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install Ruby and gems
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: ./node_modules
          key: node_modules-${{ hashFiles('package-lock.json') }}
      - name: Cache cypress
        uses: actions/cache@v2
        with:
          path: ~/.cache/Cypress
          key: cypress-${{ hashFiles('package-lock.json') }}
      - name: Run the setup script
        run: ./bin/bundle_install
      # Add or replace any other lints here
      - name: Security audit dependencies
        run: bundle exec bundle audit --update
      - name: Security audit application code
        run: bundle exec brakeman -q -w2
      - name: Lint Ruby files
        run: bundle exec rubocop --parallel
      - name: Lint JS files
        run: npm run lint
