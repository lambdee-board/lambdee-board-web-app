---
openapi: 3.0.1
info:
  title: Lambdee API V1
  version: v1
paths:
  "/api/boards":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: list boards
      tags:
      - Boards
      parameters:
      - name: limit
        in: query
        required: false
        description: Decides how many entities should be returned
        example: 3
        schema:
          type: integer
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - id: 1
                    name: Bismuth
                    colour: "#d9d9ba"
                    workspace_id: 1
                    created_at: '2023-01-12T14:50:44.700Z'
                    updated_at: '2023-01-12T14:50:44.700Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/boards/1
                    workspace_url: http://www.example.com/api/workspaces/1
                  - id: 2
                    name: Europium
                    colour: "#732b2b"
                    workspace_id: 2
                    created_at: '2023-01-12T14:50:44.703Z'
                    updated_at: '2023-01-12T14:50:44.703Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/boards/2
                    workspace_url: http://www.example.com/api/workspaces/2
                  - id: 3
                    name: Promethium
                    colour: "#f2e9f2"
                    workspace_id: 3
                    created_at: '2023-01-12T14:50:44.704Z'
                    updated_at: '2023-01-12T14:50:44.704Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/boards/3
                    workspace_url: http://www.example.com/api/workspaces/3
                  - id: 4
                    name: Oganesson
                    colour: "#f5f5b3"
                    workspace_id: 4
                    created_at: '2023-01-12T14:50:44.706Z'
                    updated_at: '2023-01-12T14:50:44.706Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/boards/4
                    workspace_url: http://www.example.com/api/workspaces/4
                  - id: 5
                    name: Germanium
                    colour: "#0b0b23"
                    workspace_id: 5
                    created_at: '2023-01-12T14:50:44.708Z'
                    updated_at: '2023-01-12T14:50:44.708Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/boards/5
                    workspace_url: http://www.example.com/api/workspaces/5
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/board_response"
    post:
      summary: create board
      tags:
      - Boards
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 6
                    name: New Board
                    colour:
                    workspace_id: 6
                    created_at: '2023-01-12T14:50:44.771Z'
                    updated_at: '2023-01-12T14:50:44.771Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/boards/6
                    workspace_url: http://www.example.com/api/workspaces/6
              schema:
                "$ref": "#/components/schemas/board_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/board_request"
  "/api/boards/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show board
      tags:
      - Boards
      parameters:
      - name: tasks
        in: query
        type: string
        schema:
          "$ref": "#/components/schemas/include_associated_enum"
        required: false
      - name: lists
        in: query
        type: string
        schema:
          "$ref": "#/components/schemas/include_associated_enum"
        required: false
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful with `lists=all`:
                  summary: successful with `lists=all`
                  value:
                    id: 7
                    name: Zinc
                    colour: "#2c2c3a"
                    workspace_id: 7
                    created_at: '2023-01-12T14:50:44.783Z'
                    updated_at: '2023-01-12T14:50:44.783Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/boards/7
                    workspace_url: http://www.example.com/api/workspaces/7
                    lists:
                    - id: 1
                      name: harlequin
                      pos: 65536.0
                      visible: false
                      deleted_at: '2023-01-12T14:50:44.805Z'
                      board_id: 7
                      created_at: '2023-01-12T14:50:44.796Z'
                      updated_at: '2023-01-12T14:50:44.799Z'
                      custom_data: {}
                      url: http://www.example.com/api/lists/1
                      board_url: http://www.example.com/api/boards/7
                    - id: 2
                      name: magenta
                      pos: 65536.0
                      visible: false
                      deleted_at:
                      board_id: 7
                      created_at: '2023-01-12T14:50:44.809Z'
                      updated_at: '2023-01-12T14:50:44.811Z'
                      custom_data: {}
                      url: http://www.example.com/api/lists/2
                      board_url: http://www.example.com/api/boards/7
                successful with `lists=visible`:
                  summary: successful with `lists=visible`
                  value:
                    id: 10
                    name: Tennessine
                    colour: "#8c5454"
                    workspace_id: 10
                    created_at: '2023-01-12T14:50:44.839Z'
                    updated_at: '2023-01-12T14:50:44.839Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/boards/10
                    workspace_url: http://www.example.com/api/workspaces/10
                    lists: []
                successful with `lists=archived`:
                  summary: successful with `lists=archived`
                  value:
                    id: 12
                    name: Sodium
                    colour: "#fafaa3"
                    workspace_id: 12
                    created_at: '2023-01-12T14:50:44.870Z'
                    updated_at: '2023-01-12T14:50:44.870Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/boards/12
                    workspace_url: http://www.example.com/api/workspaces/12
                    lists:
                    - id: 4
                      name: emerald
                      pos: 65536.0
                      visible: false
                      deleted_at: '2023-01-12T14:50:44.877Z'
                      board_id: 12
                      created_at: '2023-01-12T14:50:44.874Z'
                      updated_at: '2023-01-12T14:50:44.875Z'
                      custom_data: {}
                      url: http://www.example.com/api/lists/4
                      board_url: http://www.example.com/api/boards/12
                    - id: 5
                      name: indigo
                      pos: 65536.0
                      visible: false
                      deleted_at: '2023-01-12T14:50:44.884Z'
                      board_id: 12
                      created_at: '2023-01-12T14:50:44.881Z'
                      updated_at: '2023-01-12T14:50:44.883Z'
                      custom_data: {}
                      url: http://www.example.com/api/lists/5
                      board_url: http://www.example.com/api/boards/12
                successful:
                  summary: successful
                  value:
                    id: 15
                    name: Fermium
                    colour: "#f0e0e0"
                    workspace_id: 15
                    created_at: '2023-01-12T14:50:44.912Z'
                    updated_at: '2023-01-12T14:50:44.912Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/boards/15
                    workspace_url: http://www.example.com/api/workspaces/15
              schema:
                "$ref": "#/components/schemas/board_response"
    put:
      summary: update board
      tags:
      - Boards
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 16
                    name: New Name
                    colour: "#2d162d"
                    workspace_id: 16
                    created_at: '2023-01-12T14:50:44.936Z'
                    updated_at: '2023-01-12T14:50:44.950Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/boards/16
                    workspace_url: http://www.example.com/api/workspaces/16
              schema:
                "$ref": "#/components/schemas/board_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/board_request"
    delete:
      summary: delete board
      tags:
      - Boards
      responses:
        '204':
          description: successful
  "/api/boards/{id}/user_tasks":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: list current user tasks including board, lists, tags, users and author
      tags:
      - Boards
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 18
                    name: Iron
                    colour: "#e0b3b3"
                    workspace_id: 18
                    created_at: '2023-01-12T14:50:44.985Z'
                    updated_at: '2023-01-12T14:50:44.985Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/boards/18
                    workspace_url: http://www.example.com/api/workspaces/18
                    lists: []
              schema:
                "$ref": "#/components/schemas/board_response"
  "/api/boards/recently_viewed":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: list current user recently viewed boards (max 6)
      tags:
      - Boards
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value: []
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/board_response"
  "/api/tasks/{id}/comments":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Task id
      required: true
      schema:
        type: string
    get:
      summary: List task's comments
      tags:
      - Comments
      parameters:
      - name: with_author
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful with `with_author=true`:
                  summary: successful with `with_author=true`
                  value:
                  - id: 5
                    body: |-
                      ###### Illum
                      Et aperiam quidem.
                      ut | sapiente | consequatur
                      ---- | ---- | ----
                      quae | quia | repudiandae
                      id | atque | nesciunt
                    deleted_at:
                    author_id: 22
                    task_id: 2
                    created_at: '2023-01-12T14:50:45.151Z'
                    updated_at: '2023-01-12T14:50:45.151Z'
                    url: http://www.example.com/api/comments/5
                    author:
                      id: 22
                      name: Emmitt Walker
                      avatar_url: https://www.gravatar.com/avatar/5a7a362925b90fd2d8dd663a09edd597
                      role: developer
                      url: http://www.example.com/api/users/22
                      email: emmitt_walker.1673535045@example.com
                      created_at: '2023-01-12T14:50:45.131Z'
                      updated_at: '2023-01-12T14:50:45.131Z'
                      custom_data: {}
                  - id: 4
                    body: |-
                      ###### Vel
                      Quia voluptas aut.
                      Ducimus voluptatem dolores. Molestias _possimus_ adipisci. Non aut aut.
                    deleted_at:
                    author_id: 22
                    task_id: 2
                    created_at: '2023-01-12T14:50:45.149Z'
                    updated_at: '2023-01-12T14:50:45.149Z'
                    url: http://www.example.com/api/comments/4
                    author:
                      id: 22
                      name: Emmitt Walker
                      avatar_url: https://www.gravatar.com/avatar/5a7a362925b90fd2d8dd663a09edd597
                      role: developer
                      url: http://www.example.com/api/users/22
                      email: emmitt_walker.1673535045@example.com
                      created_at: '2023-01-12T14:50:45.131Z'
                      updated_at: '2023-01-12T14:50:45.131Z'
                      custom_data: {}
                  - id: 3
                    body: "### Est\nOfficiis possimus reprehenderit. Est inventore
                      unde. Ut porro nesciunt.\n0. Libero. \n1. Iure. \n2. Rerum.
                      \n3. Doloremque. \n4. Quis. \n5. Illo. \n6. Sunt. \n"
                    deleted_at:
                    author_id: 22
                    task_id: 2
                    created_at: '2023-01-12T14:50:45.147Z'
                    updated_at: '2023-01-12T14:50:45.147Z'
                    url: http://www.example.com/api/comments/3
                    author:
                      id: 22
                      name: Emmitt Walker
                      avatar_url: https://www.gravatar.com/avatar/5a7a362925b90fd2d8dd663a09edd597
                      role: developer
                      url: http://www.example.com/api/users/22
                      email: emmitt_walker.1673535045@example.com
                      created_at: '2023-01-12T14:50:45.131Z'
                      updated_at: '2023-01-12T14:50:45.131Z'
                      custom_data: {}
                  - id: 2
                    body: "#### Suscipit\nVero incidunt fugit. Aspernatur autem consequatur.
                      Neque cum quo.\n#### Fugiat\nAliquam qui eos. Et facere sed.
                      Numquam dolor placeat.\n* Eaque. \n* Ut. \n* Rerum. \n* Facere.
                      \n* Officiis. \n"
                    deleted_at:
                    author_id: 22
                    task_id: 2
                    created_at: '2023-01-12T14:50:45.145Z'
                    updated_at: '2023-01-12T14:50:45.145Z'
                    url: http://www.example.com/api/comments/2
                    author:
                      id: 22
                      name: Emmitt Walker
                      avatar_url: https://www.gravatar.com/avatar/5a7a362925b90fd2d8dd663a09edd597
                      role: developer
                      url: http://www.example.com/api/users/22
                      email: emmitt_walker.1673535045@example.com
                      created_at: '2023-01-12T14:50:45.131Z'
                      updated_at: '2023-01-12T14:50:45.131Z'
                      custom_data: {}
                  - id: 1
                    body: "##### Natus\nVitae ut quos. Nihil quis beatae. Distinctio
                      est autem.\n0. Tenetur. \n1. Dolores. \n2. Perferendis. \n3.
                      Quasi. \n"
                    deleted_at:
                    author_id: 22
                    task_id: 2
                    created_at: '2023-01-12T14:50:45.141Z'
                    updated_at: '2023-01-12T14:50:45.141Z'
                    url: http://www.example.com/api/comments/1
                    author:
                      id: 22
                      name: Emmitt Walker
                      avatar_url: https://www.gravatar.com/avatar/5a7a362925b90fd2d8dd663a09edd597
                      role: developer
                      url: http://www.example.com/api/users/22
                      email: emmitt_walker.1673535045@example.com
                      created_at: '2023-01-12T14:50:45.131Z'
                      updated_at: '2023-01-12T14:50:45.131Z'
                      custom_data: {}
                successful:
                  summary: successful
                  value:
                  - id: 10
                    body: |-
                      ## Voluptas
                      Facere dignissimos ut.
                      `Rerum.`
                    deleted_at:
                    author_id: 25
                    task_id: 3
                    created_at: '2023-01-12T14:50:45.195Z'
                    updated_at: '2023-01-12T14:50:45.195Z'
                    url: http://www.example.com/api/comments/10
                  - id: 9
                    body: "#### Voluptas\nEt mollitia tenetur.\n0. Nostrum. \n1. Ut.
                      \n2. Ipsa. \n3. Libero. \n4. Tempora. \n5. Minima. \n6. Et.
                      \n7. Tempora. \n8. Aut. \n"
                    deleted_at:
                    author_id: 25
                    task_id: 3
                    created_at: '2023-01-12T14:50:45.194Z'
                    updated_at: '2023-01-12T14:50:45.194Z'
                    url: http://www.example.com/api/comments/9
                  - id: 8
                    body: |-
                      ## Ut
                      Enim dolores architecto. Nobis dignissimos dolores. Eius perferendis optio.
                      illum | libero | atque
                      ---- | ---- | ----
                      possimus | rem | rerum
                      occaecati | ut | et
                    deleted_at:
                    author_id: 25
                    task_id: 3
                    created_at: '2023-01-12T14:50:45.192Z'
                    updated_at: '2023-01-12T14:50:45.192Z'
                    url: http://www.example.com/api/comments/8
                  - id: 7
                    body: "### Eaque\nEa laborum minima. Vel consequatur magnam.\n*
                      Dolor. \n* Amet. \n* Ut. \n* Possimus. \n* Perspiciatis. \n"
                    deleted_at:
                    author_id: 25
                    task_id: 3
                    created_at: '2023-01-12T14:50:45.190Z'
                    updated_at: '2023-01-12T14:50:45.190Z'
                    url: http://www.example.com/api/comments/7
                  - id: 6
                    body: |-
                      ###### Molestiae
                      Vero cumque laboriosam. Culpa consectetur eos. Qui consequatur odio.
                      necessitatibus | voluptatem | optio
                      ---- | ---- | ----
                      quae | molestiae | sed
                      laborum | quidem | accusantium
                    deleted_at:
                    author_id: 25
                    task_id: 3
                    created_at: '2023-01-12T14:50:45.188Z'
                    updated_at: '2023-01-12T14:50:45.188Z'
                    url: http://www.example.com/api/comments/6
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/comment_response"
  "/api/lists":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: List lists
      tags:
      - Lists
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - id: 9
                    name: orchid
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 28
                    created_at: '2023-01-12T14:50:45.216Z'
                    updated_at: '2023-01-12T14:50:45.216Z'
                    custom_data: {}
                    url: http://www.example.com/api/lists/9
                    board_url: http://www.example.com/api/boards/28
                  - id: 10
                    name: magenta
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 29
                    created_at: '2023-01-12T14:50:45.220Z'
                    updated_at: '2023-01-12T14:50:45.220Z'
                    custom_data: {}
                    url: http://www.example.com/api/lists/10
                    board_url: http://www.example.com/api/boards/29
                  - id: 11
                    name: taupe
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 30
                    created_at: '2023-01-12T14:50:45.224Z'
                    updated_at: '2023-01-12T14:50:45.224Z'
                    custom_data: {}
                    url: http://www.example.com/api/lists/11
                    board_url: http://www.example.com/api/boards/30
                  - id: 12
                    name: cerise
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 31
                    created_at: '2023-01-12T14:50:45.228Z'
                    updated_at: '2023-01-12T14:50:45.228Z'
                    custom_data: {}
                    url: http://www.example.com/api/lists/12
                    board_url: http://www.example.com/api/boards/31
                  - id: 13
                    name: puce
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 32
                    created_at: '2023-01-12T14:50:45.232Z'
                    updated_at: '2023-01-12T14:50:45.232Z'
                    custom_data: {}
                    url: http://www.example.com/api/lists/13
                    board_url: http://www.example.com/api/boards/32
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/list_response"
    post:
      summary: Create List
      tags:
      - Lists
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 14
                    name: New List
                    pos: 1212.0
                    visible: false
                    deleted_at:
                    board_id: 33
                    created_at: '2023-01-12T14:50:45.270Z'
                    updated_at: '2023-01-12T14:50:45.270Z'
                    custom_data: {}
                    url: http://www.example.com/api/lists/14
                    board_url: http://www.example.com/api/boards/33
              schema:
                "$ref": "#/components/schemas/list_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/list_request"
  "/api/lists/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show List
      tags:
      - Lists
      parameters:
      - name: tasks
        in: query
        type: string
        schema:
          "$ref": "#/components/schemas/include_associated_enum"
        required: false
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful with `tasks=all`:
                  summary: successful with `tasks=all`
                  value:
                    id: 15
                    name: crimson
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 34
                    created_at: '2023-01-12T14:50:45.277Z'
                    updated_at: '2023-01-12T14:50:45.277Z'
                    custom_data: {}
                    url: http://www.example.com/api/lists/15
                    board_url: http://www.example.com/api/boards/34
                    tasks:
                    - id: 4
                      name: '25'
                      pos: 65536.0
                      priority: medium
                      spent_time: 0
                      points: 3
                      due_time: '2023-01-19T14:50:45.279Z'
                      list_id: 15
                      deleted_at:
                      url: http://www.example.com/api/tasks/4
                      list_url: http://www.example.com/api/lists/15
                      users:
                      - id: 30
                        name: Maudie Pfeffer
                        avatar_url: https://www.gravatar.com/avatar/99cb8697954615457e0d7b33d802453a
                        role: developer
                        url: http://www.example.com/api/users/30
                      - id: 31
                        name: Pres. Gerry Kovacek
                        avatar_url: https://www.gravatar.com/avatar/bbbaa1e49b26f4283ca560ef27abfe8b
                        role: manager
                        url: http://www.example.com/api/users/31
                      tags:
                      - id: 2
                        name: Sales
                        colour: "#cece5a"
                        url: http://www.example.com/api/tags/2
                      - id: 3
                        name: Design
                        colour: "#444409"
                        url: http://www.example.com/api/tags/3
                    - id: 5
                      name: Bridge over Troubled Water
                      pos: 65536.0
                      priority: very_low
                      spent_time: 0
                      points: 5
                      due_time: '2023-01-19T14:50:45.311Z'
                      list_id: 15
                      deleted_at: '2023-01-12T14:50:45.323Z'
                      url: http://www.example.com/api/tasks/5
                      list_url: http://www.example.com/api/lists/15
                      users: []
                      tags: []
                successful with `tasks=visible`:
                  summary: successful with `tasks=visible`
                  value:
                    id: 18
                    name: cyan
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 39
                    created_at: '2023-01-12T14:50:45.352Z'
                    updated_at: '2023-01-12T14:50:45.352Z'
                    custom_data: {}
                    url: http://www.example.com/api/lists/18
                    board_url: http://www.example.com/api/boards/39
                    tasks:
                    - id: 6
                      name: Dangerous
                      pos: 65536.0
                      priority: low
                      spent_time: 0
                      points: 3
                      due_time: '2023-01-19T14:50:45.354Z'
                      list_id: 18
                      deleted_at:
                      url: http://www.example.com/api/tasks/6
                      list_url: http://www.example.com/api/lists/18
                      users:
                      - id: 35
                        name: The Hon. Chae Goldner
                        avatar_url: https://www.gravatar.com/avatar/390504991428ffa14b248d012d993608
                        role: guest
                        url: http://www.example.com/api/users/35
                      - id: 36
                        name: Virgil Boyle
                        avatar_url: https://www.gravatar.com/avatar/1dca8acb120581a7ba4ddd3de5ba1c35
                        role: guest
                        url: http://www.example.com/api/users/36
                      tags:
                      - id: 4
                        name: Real-Estate
                        colour: "#f4b4f4"
                        url: http://www.example.com/api/tags/4
                    - id: 7
                      name: Tracy Chapman
                      pos: 65536.0
                      priority: medium
                      spent_time: 0
                      points: 2
                      due_time: '2023-01-19T14:50:45.385Z'
                      list_id: 18
                      deleted_at:
                      url: http://www.example.com/api/tasks/7
                      list_url: http://www.example.com/api/lists/18
                      users: []
                      tags: []
                successful with `tasks=archived`:
                  summary: successful with `tasks=archived`
                  value:
                    id: 21
                    name: sapphire
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 43
                    created_at: '2023-01-12T14:50:45.459Z'
                    updated_at: '2023-01-12T14:50:45.459Z'
                    custom_data: {}
                    url: http://www.example.com/api/lists/21
                    board_url: http://www.example.com/api/boards/43
                    tasks:
                    - id: 8
                      name: Cross Road
                      pos: 65536.0
                      priority: very_high
                      spent_time: 0
                      points: 5
                      due_time: '2023-01-19T14:50:45.462Z'
                      list_id: 21
                      deleted_at: '2023-01-12T14:50:45.501Z'
                      url: http://www.example.com/api/tasks/8
                      list_url: http://www.example.com/api/lists/21
                      users: []
                      tags: []
                    - id: 9
                      name: Boston
                      pos: 65536.0
                      priority: very_low
                      spent_time: 0
                      points: 3
                      due_time: '2023-01-19T14:50:45.502Z'
                      list_id: 21
                      deleted_at: '2023-01-12T14:50:45.514Z'
                      url: http://www.example.com/api/tasks/9
                      list_url: http://www.example.com/api/lists/21
                      users:
                      - id: 41
                        name: Mr. Francesco Grant
                        avatar_url: https://www.gravatar.com/avatar/8b8d126a99b3f28473a42756820f9ab4
                        role: regular
                        url: http://www.example.com/api/users/41
                      tags:
                      - id: 5
                        name: Banking
                        colour: "#b206b2"
                        url: http://www.example.com/api/tags/5
                successful:
                  summary: successful
                  value:
                    id: 24
                    name: yellow
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 47
                    created_at: '2023-01-12T14:50:45.552Z'
                    updated_at: '2023-01-12T14:50:45.552Z'
                    custom_data: {}
                    url: http://www.example.com/api/lists/24
                    board_url: http://www.example.com/api/boards/47
              schema:
                "$ref": "#/components/schemas/list_response"
    put:
      summary: Update list
      tags:
      - Lists
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 25
                    name: New Name
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 48
                    created_at: '2023-01-12T14:50:45.573Z'
                    updated_at: '2023-01-12T14:50:45.587Z'
                    custom_data: {}
                    url: http://www.example.com/api/lists/25
                    board_url: http://www.example.com/api/boards/48
              schema:
                "$ref": "#/components/schemas/list_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/list_request"
    delete:
      summary: Delete list
      tags:
      - Lists
      responses:
        '204':
          description: successful
  "/api/script_runs":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: List script runs
      tags:
      - ScriptRuns
      parameters:
      - name: limit
        in: query
        required: false
        description: Decides how many entities should be returned
        example: 3
        schema:
          type: integer
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    runs:
                    - id: 3
                      script_id: 3
                      input: puts 'Hello world'
                      output: Hello world
                      initiator_id: 52
                      state: running
                      triggered_at: '2023-01-12T14:50:45.649Z'
                      delay: 60
                      executed_at: '2023-01-12T14:51:45.649Z'
                      script_name: My first Lambdee Script
                      url: http://www.example.com/api/script_runs/3
                    - id: 2
                      script_id: 2
                      input: puts 'Hello world'
                      output: Hello world
                      initiator_id: 50
                      state: running
                      triggered_at: '2023-01-12T14:50:45.641Z'
                      delay: 60
                      executed_at: '2023-01-12T14:51:45.641Z'
                      script_name: My first Lambdee Script
                      url: http://www.example.com/api/script_runs/2
                    - id: 1
                      script_id: 1
                      input: puts 'Hello world'
                      output: Hello world
                      initiator_id: 48
                      state: running
                      triggered_at: '2023-01-12T14:50:45.624Z'
                      delay: 60
                      executed_at: '2023-01-12T14:51:45.624Z'
                      script_name: My first Lambdee Script
                      url: http://www.example.com/api/script_runs/1
              schema:
                "$ref": "#/components/schemas/script_run_pages_response"
  "/api/scripts/{id}/script_runs":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Script id
      required: true
      schema:
        type: string
    - name: limit
      in: query
      required: false
      description: Decides how many entities should be returned
      example: 3
      schema:
        type: integer
    get:
      summary: List script's script runs
      tags:
      - ScriptRuns
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    runs:
                    - id: 4
                      script_id: 4
                      input: puts 'Hello world'
                      output: Hello world
                      initiator_id: 56
                      state: running
                      triggered_at: '2023-01-12T14:50:45.684Z'
                      delay: 60
                      executed_at: '2023-01-12T14:51:45.684Z'
                      script_name: My first Lambdee Script
                      url: http://www.example.com/api/script_runs/4
              schema:
                "$ref": "#/components/schemas/script_run_pages_response"
  "/api/script_runs/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show script run
      tags:
      - ScriptRuns
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 5
                    script_id: 5
                    input: puts 'Hello world'
                    output: Hello world
                    initiator_id: 60
                    state: running
                    triggered_at: '2023-01-12T14:50:45.708Z'
                    delay: 60
                    executed_at: '2023-01-12T14:51:45.708Z'
                    script_name: My first Lambdee Script
                    url: http://www.example.com/api/script_runs/5
              schema:
                "$ref": "#/components/schemas/script_run_response"
    put:
      summary: Update script run
      tags:
      - ScriptRuns
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 6
                    script_id: 6
                    input: puts 'Hello world'
                    output: example output
                    initiator_id: 64
                    state: executed
                    triggered_at: '2023-01-12T14:50:45.736Z'
                    delay: 60
                    executed_at: '2023-01-12T14:51:45.736Z'
                    script_name: My first Lambdee Script
                    url: http://www.example.com/api/script_runs/6
              schema:
                "$ref": "#/components/schemas/script_run_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/script_run_request"
  "/api/script_triggers":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    post:
      summary: Create script trigger
      tags:
      - Script triggers
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 1
                    script_id: 7
                    subject_type: DB::Task
                    subject_id: 10
                    action: destroy
                    delay: 60
                    url: http://www.example.com/api/script_triggers/1
              schema:
                "$ref": "#/components/schemas/script_trigger_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/script_trigger_request"
  "/api/script_triggers/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show script trigger
      tags:
      - Script triggers
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 2
                    script_id: 8
                    subject_type:
                    subject_id:
                    action: create
                    delay: 60
                    url: http://www.example.com/api/script_triggers/2
              schema:
                "$ref": "#/components/schemas/script_trigger_response"
    put:
      summary: Update script trigger
      tags:
      - Script triggers
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 3
                    script_id: 9
                    subject_type:
                    subject_id:
                    action: destroy
                    delay: 60
                    url: http://www.example.com/api/script_triggers/3
              schema:
                "$ref": "#/components/schemas/script_trigger_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/script_trigger_request"
    delete:
      summary: Delete script_trigger
      tags:
      - Script triggers
      responses:
        '204':
          description: successful
  "/api/scripts":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: List scripts
      tags:
      - Scripts
      parameters:
      - name: limit
        in: query
        required: false
        description: Decides how many entities should be returned
        example: 3
        schema:
          type: integer
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - id: 11
                    content: puts 'hello world'
                    name: My first Lambdee Script
                    description: Description of the script
                    author_id: 80
                    url: http://www.example.com/api/scripts/11
                  - id: 12
                    content: puts 'hello world'
                    name: My first Lambdee Script
                    description: Description of the script
                    author_id: 81
                    url: http://www.example.com/api/scripts/12
                  - id: 13
                    content: puts 'hello world'
                    name: My first Lambdee Script
                    description: Description of the script
                    author_id: 82
                    url: http://www.example.com/api/scripts/13
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/script_response"
    post:
      summary: Create Script
      tags:
      - Scripts
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 14
                    content: puts 'Hello world!'
                    name: New Script
                    description: What script does
                    author_id: 85
                    url: http://www.example.com/api/scripts/14
                    script_triggers:
                    - id: 5
                      script_id: 14
                      subject_type:
                      subject_id:
                      action: create
                      delay: 60
                      url: http://www.example.com/api/script_triggers/5
                    - id: 6
                      script_id: 14
                      subject_type: DB::Task
                      subject_id:
                      action: update
                      delay: 60
                      url: http://www.example.com/api/script_triggers/6
                    - id: 7
                      script_id: 14
                      subject_type: DB::Task
                      subject_id: 11
                      action: destroy
                      delay: 60
                      url: http://www.example.com/api/script_triggers/7
              schema:
                "$ref": "#/components/schemas/script_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/script_request"
  "/api/scripts/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show Script
      tags:
      - Scripts
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 15
                    content: puts 'hello world'
                    name: My first Lambdee Script
                    description: Description of the script
                    author_id: 88
                    url: http://www.example.com/api/scripts/15
                    script_triggers:
                    - id: 8
                      script_id: 15
                      subject_type:
                      subject_id:
                      action: create
                      delay: 60
                      url: http://www.example.com/api/script_triggers/8
                    - id: 1
                      script_id: 15
                      subject_type:
                      subject_id:
                      scope_type:
                      scope_id:
                      author_id: 89
                      delay:
                      private:
                      colour: "#ffffff"
                      text: Send a message
                      url: http://www.example.com/api/ui_script_triggers/1
              schema:
                "$ref": "#/components/schemas/script_response"
    put:
      summary: Update Script
      tags:
      - Scripts
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 16
                    content: puts 'hello world'
                    name: New Name
                    description: Description of the script
                    author_id: 92
                    url: http://www.example.com/api/scripts/16
                    script_triggers:
                    - id: 10
                      script_id: 16
                      subject_type:
                      subject_id:
                      action: create
                      delay: 60
                      url: http://www.example.com/api/script_triggers/10
              schema:
                "$ref": "#/components/schemas/script_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/script_request"
    delete:
      summary: Delete script
      tags:
      - Scripts
      responses:
        '204':
          description: successful
  "/api/boards/{id}/sprints":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Board id
      required: true
      schema:
        type: string
    get:
      summary: List board's sprints
      tags:
      - Sprints
      parameters:
      - name: page
        in: query
        required: false
        description: Decides which result page should be returned.
        example: 2
        schema:
          type: integer
      - name: per
        in: query
        required: false
        description: Decides how many entities should be returned per one page. **Works
          only, when `page` param is given.**
        example: 2
        schema:
          type: integer
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    sprints:
                    - id: 1
                      board_id: 52
                      name: "Wagga\tWagga"
                      description: Nostrum et corporis. Beatae sed quia. Est consequuntur
                        ut.
                      started_at: '2023-01-12T14:50:46.057Z'
                      expected_end_at: '2023-01-19T14:50:46.057Z'
                      ended_at:
                      final_list_name: Done
                      custom_data: {}
                      url: http://www.example.com/api/sprints/1
                    - id: 2
                      board_id: 52
                      name: Launceston
                      description: Sit rerum aperiam. Rem iure eveniet. Voluptatem
                        sunt corporis.
                      started_at: '2023-01-12T14:50:46.061Z'
                      expected_end_at: '2023-01-19T14:50:46.061Z'
                      ended_at:
                      final_list_name: Done
                      custom_data: {}
                      url: http://www.example.com/api/sprints/2
                    - id: 3
                      board_id: 52
                      name: Orange
                      description: Optio molestiae enim. Repellendus quia vel. Fugiat
                        aut a.
                      started_at: '2023-01-12T14:50:46.064Z'
                      expected_end_at: '2023-01-19T14:50:46.064Z'
                      ended_at:
                      final_list_name: Done
                      custom_data: {}
                      url: http://www.example.com/api/sprints/3
              schema:
                "$ref": "#/components/schemas/sprint_pages_response"
  "/api/sprints":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: List sprints
      tags:
      - Sprints
      parameters:
      - name: page
        in: query
        required: false
        description: Decides which result page should be returned.
        example: 2
        schema:
          type: integer
      - name: per
        in: query
        required: false
        description: Decides how many entities should be returned per one page. **Works
          only, when `page` param is given.**
        example: 2
        schema:
          type: integer
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    sprints: []
              schema:
                "$ref": "#/components/schemas/sprint_pages_response"
    post:
      summary: Create sprint
      tags:
      - Sprints
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 4
                    board_id: 53
                    name: New Sprint
                    description: Example description of new sprint
                    started_at: '2023-01-12T14:50:46.125Z'
                    expected_end_at: '2025-12-11T23:00:00.000Z'
                    ended_at:
                    final_list_name: Done
                    custom_data: {}
                    url: http://www.example.com/api/sprints/4
              schema:
                "$ref": "#/components/schemas/sprint_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/sprint_request"
  "/api/sprints/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    - name: tasks
      in: query
      example: all
      required: false
      schema:
        type: string
    get:
      summary: Show Sprint
      tags:
      - Sprints
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful with `tasks=all`:
                  summary: successful with `tasks=all`
                  value:
                    id: 5
                    board_id: 54
                    name: Hervey Bay
                    description: Reiciendis autem ut. Sed autem nemo. Ullam facere
                      voluptate.
                    started_at: '2023-01-12T14:50:46.134Z'
                    expected_end_at: '2023-01-19T14:50:46.134Z'
                    ended_at:
                    final_list_name: Done
                    custom_data: {}
                    url: http://www.example.com/api/sprints/5
                    tasks:
                    - id: 12
                      name: Their Greatest Hits (1971–1975)
                      priority: very_low
                      spent_time: 0
                      points: 4
                      added_at: '2023-01-12T14:50:46.160Z'
                      completed_at:
                      start_state: To Do
                      state: Doing
                successful:
                  summary: successful
                  value:
                    id: 6
                    board_id: 56
                    name: Hervey Bay
                    description: Delectus laborum maxime. Doloribus fuga ea. In rem
                      cum.
                    started_at: '2023-01-12T14:50:46.185Z'
                    expected_end_at: '2023-01-19T14:50:46.185Z'
                    ended_at:
                    final_list_name: Done
                    custom_data: {}
                    url: http://www.example.com/api/sprints/6
              schema:
                "$ref": "#/components/schemas/sprint_response"
    put:
      summary: Update Sprint
      tags:
      - Sprints
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 7
                    board_id: 57
                    name: New Name
                    description: Harum ullam itaque. Tempora distinctio explicabo.
                      Saepe ea voluptatem.
                    started_at: '2023-01-12T14:50:46.214Z'
                    expected_end_at: '2023-01-19T14:50:46.214Z'
                    ended_at:
                    final_list_name: Done
                    custom_data: {}
                    url: http://www.example.com/api/sprints/7
              schema:
                "$ref": "#/components/schemas/sprint_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/sprint_request"
    delete:
      summary: Delete sprint
      tags:
      - Sprints
      responses:
        '204':
          description: successful
  "/api/sprints/{id}/end":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    put:
      summary: End sprint
      tags:
      - Sprints
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 9
                    board_id: 59
                    name: Geraldton
                    description: Perferendis pariatur deserunt. Asperiores qui occaecati.
                      Ut et dolorem.
                    started_at: '2023-01-12T14:50:46.267Z'
                    expected_end_at: '2023-01-19T14:50:46.267Z'
                    ended_at: '2023-01-12T14:50:46.286Z'
                    final_list_name: Done
                    custom_data: {}
                    url: http://www.example.com/api/sprints/9
              schema:
                "$ref": "#/components/schemas/sprint_response"
  "/api/boards/{id}/active_sprint":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show active sprint
      tags:
      - Sprints
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 10
                    board_id: 60
                    name: Darwin
                    description: Dignissimos minima possimus. Autem provident occaecati.
                      Voluptas asperiores deserunt.
                    started_at: '2023-01-12T14:50:46.294Z'
                    expected_end_at: '2023-01-19T14:50:46.294Z'
                    ended_at:
                    final_list_name: Done
                    custom_data: {}
                    url: http://www.example.com/api/sprints/10
              schema:
                "$ref": "#/components/schemas/sprint_response"
  "/api/sprints/{id}/burn_up_chart":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show data for burn up chart
      tags:
      - Sprints
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - name: Work Scope
                    data:
                      '2023-01-12': 0
                      '2023-01-19': 0
                  - name: Completed Work
                    data:
                      '2023-01-12': 0
                      '2023-01-19':
  "/api/boards/{id}/tags":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Board id
      required: true
      schema:
        type: string
    get:
      summary: List board's tags
      tags:
      - Tags
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - id: 6
                    name: Construction
                    colour: "#e2e2f8"
                    url: http://www.example.com/api/tags/6
                    board_id: 62
                    created_at: '2023-01-12T14:50:46.346Z'
                    updated_at: '2023-01-12T14:50:46.346Z'
                    custom_data: {}
                  - id: 7
                    name: Hospitality
                    colour: "#f1f3f1"
                    url: http://www.example.com/api/tags/7
                    board_id: 62
                    created_at: '2023-01-12T14:50:46.347Z'
                    updated_at: '2023-01-12T14:50:46.347Z'
                    custom_data: {}
                  - id: 8
                    name: Design
                    colour: "#bf12bf"
                    url: http://www.example.com/api/tags/8
                    board_id: 62
                    created_at: '2023-01-12T14:50:46.348Z'
                    updated_at: '2023-01-12T14:50:46.348Z'
                    custom_data: {}
                  - id: 9
                    name: Administration
                    colour: "#8989d2"
                    url: http://www.example.com/api/tags/9
                    board_id: 62
                    created_at: '2023-01-12T14:50:46.349Z'
                    updated_at: '2023-01-12T14:50:46.349Z'
                    custom_data: {}
                  - id: 10
                    name: Sales
                    colour: "#a1a130"
                    url: http://www.example.com/api/tags/10
                    board_id: 62
                    created_at: '2023-01-12T14:50:46.350Z'
                    updated_at: '2023-01-12T14:50:46.350Z'
                    custom_data: {}
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/tag_response"
    post:
      summary: Create tag
      tags:
      - Tags
      parameters:
      - name: id
        in: path
        description: Board id
        required: true
        schema:
          type: string
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 11
                    name: New Tag
                    colour: "#fff000"
                    url: http://www.example.com/api/tags/11
                    board_id: 63
                    created_at: '2023-01-12T14:50:46.388Z'
                    updated_at: '2023-01-12T14:50:46.388Z'
                    custom_data: {}
              schema:
                "$ref": "#/components/schemas/tag_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/tag_request"
  "/api/tags":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    post:
      summary: Create tag
      tags:
      - Tags
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 12
                    name: New Tag
                    colour: "#fff000"
                    url: http://www.example.com/api/tags/12
                    board_id: 64
                    created_at: '2023-01-12T14:50:46.422Z'
                    updated_at: '2023-01-12T14:50:46.422Z'
                    custom_data: {}
              schema:
                "$ref": "#/components/schemas/tag_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/tag_request"
  "/api/tasks/{id}/tags":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Task id
      required: true
      schema:
        type: string
    get:
      summary: List task's tags
      tags:
      - Tags
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - id: 13
                    name: Construction
                    colour: "#ae0a0a"
                    url: http://www.example.com/api/tags/13
                    board_id: 65
                    created_at: '2023-01-12T14:50:46.440Z'
                    updated_at: '2023-01-12T14:50:46.440Z'
                    custom_data: {}
                  - id: 14
                    name: Legal
                    colour: "#631263"
                    url: http://www.example.com/api/tags/14
                    board_id: 65
                    created_at: '2023-01-12T14:50:46.443Z'
                    updated_at: '2023-01-12T14:50:46.443Z'
                    custom_data: {}
                  - id: 15
                    name: Retail
                    colour: "#02023b"
                    url: http://www.example.com/api/tags/15
                    board_id: 65
                    created_at: '2023-01-12T14:50:46.445Z'
                    updated_at: '2023-01-12T14:50:46.445Z'
                    custom_data: {}
                  - id: 16
                    name: Healthcare
                    colour: "#e41be4"
                    url: http://www.example.com/api/tags/16
                    board_id: 65
                    created_at: '2023-01-12T14:50:46.448Z'
                    updated_at: '2023-01-12T14:50:46.448Z'
                    custom_data: {}
                  - id: 17
                    name: Community-Services
                    colour: "#06063c"
                    url: http://www.example.com/api/tags/17
                    board_id: 65
                    created_at: '2023-01-12T14:50:46.450Z'
                    updated_at: '2023-01-12T14:50:46.450Z'
                    custom_data: {}
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/tag_response"
    post:
      summary: Create tag (associated with given task and task's board)
      tags:
      - Tags
      parameters:
      - name: id
        in: path
        description: Task id
        required: true
        schema:
          type: string
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 18
                    name: New Tag
                    colour: "#fff000"
                    url: http://www.example.com/api/tags/18
                    board_id: 66
                    created_at: '2023-01-12T14:50:46.497Z'
                    updated_at: '2023-01-12T14:50:46.497Z'
                    custom_data: {}
              schema:
                "$ref": "#/components/schemas/tag_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/tag_request"
  "/api/tags/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show Tags
      tags:
      - Tags
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 19
                    name: Technology
                    colour: "#7e1515"
                    url: http://www.example.com/api/tags/19
                    board_id: 67
                    created_at: '2023-01-12T14:50:46.508Z'
                    updated_at: '2023-01-12T14:50:46.508Z'
                    custom_data: {}
              schema:
                "$ref": "#/components/schemas/tag_response"
    put:
      summary: Update Tag
      tags:
      - Tags
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 20
                    name: New Name
                    colour: "#fdfdf7"
                    url: http://www.example.com/api/tags/20
                    board_id: 68
                    created_at: '2023-01-12T14:50:46.534Z'
                    updated_at: '2023-01-12T14:50:46.548Z'
                    custom_data: {}
              schema:
                "$ref": "#/components/schemas/tag_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/tag_request"
    delete:
      summary: Delete tag
      tags:
      - Tags
      responses:
        '204':
          description: successful
  "/api/tasks":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: List tasks
      tags:
      - Tasks
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - id: 16
                    name: Whitney Houston
                    pos: 65536.0
                    priority: very_high
                    spent_time: 0
                    points: 4
                    due_time: '2023-01-19T14:50:46.576Z'
                    list_id: 33
                    deleted_at:
                    url: http://www.example.com/api/tasks/16
                    list_url: http://www.example.com/api/lists/33
                    description: "#### Corporis\nRerum rerum eius. Ipsum fugiat dolores.
                      Commodi enim rerum. Ab qui maxime. Qui ducimus aut.\n0. At.
                      \n1. Eum. \n2. Qui. \n3. Eos. \n"
                    created_at: '2023-01-12T14:50:46.584Z'
                    updated_at: '2023-01-12T14:50:46.584Z'
                  - id: 17
                    name: Thriller
                    pos: 65536.0
                    priority: very_low
                    spent_time: 0
                    points: 5
                    due_time: '2023-01-19T14:50:46.586Z'
                    list_id: 34
                    deleted_at:
                    url: http://www.example.com/api/tasks/17
                    list_url: http://www.example.com/api/lists/34
                    description: |-
                      ###### Et
                      Sit voluptatum cumque. Molestiae quo vero. Tempore sint esse. Eveniet dolorem nulla. Perspiciatis rerum animi. Est sed ut.
                      `Ex.`
                    created_at: '2023-01-12T14:50:46.594Z'
                    updated_at: '2023-01-12T14:50:46.594Z'
                  - id: 18
                    name: Sgt. Pepper's Lonely Hearts Club Band
                    pos: 65536.0
                    priority: low
                    spent_time: 0
                    points: 1
                    due_time: '2023-01-19T14:50:46.596Z'
                    list_id: 35
                    deleted_at:
                    url: http://www.example.com/api/tasks/18
                    list_url: http://www.example.com/api/lists/35
                    description: "### Qui\nPlaceat ullam et. Odit et eius. Sequi et
                      et. Et accusamus qui. Est quasi dolorem.\n* Magnam. \n"
                    created_at: '2023-01-12T14:50:46.603Z'
                    updated_at: '2023-01-12T14:50:46.603Z'
                  - id: 19
                    name: Dangerous
                    pos: 65536.0
                    priority: very_low
                    spent_time: 0
                    points: 3
                    due_time: '2023-01-19T14:50:46.605Z'
                    list_id: 36
                    deleted_at:
                    url: http://www.example.com/api/tasks/19
                    list_url: http://www.example.com/api/lists/36
                    description: |-
                      ## Nostrum
                      Error velit aut. Harum repellendus qui. Est voluptatum hic. Repellat dignissimos voluptatibus.
                      ## Omnis
                    created_at: '2023-01-12T14:50:46.613Z'
                    updated_at: '2023-01-12T14:50:46.613Z'
                  - id: 20
                    name: Dangerous
                    pos: 65536.0
                    priority: very_low
                    spent_time: 0
                    points: 4
                    due_time: '2023-01-19T14:50:46.615Z'
                    list_id: 37
                    deleted_at:
                    url: http://www.example.com/api/tasks/20
                    list_url: http://www.example.com/api/lists/37
                    description: |-
                      ##### Doloremque
                      Ut aut aliquam. Est dolorum inventore. Quia exercitationem qui. Quidem nisi quaerat. Molestias nobis earum. Et dolorum libero.
                      #### Eveniet
                    created_at: '2023-01-12T14:50:46.623Z'
                    updated_at: '2023-01-12T14:50:46.623Z'
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/task_response"
    post:
      summary: Create Task
      tags:
      - Tasks
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 21
                    name: New Task
                    pos: 65536.0
                    priority:
                    spent_time: 0
                    points:
                    due_time:
                    list_id: 38
                    deleted_at:
                    url: http://www.example.com/api/tasks/21
                    list_url: http://www.example.com/api/lists/38
                    description:
                    created_at: '2023-01-12T14:50:46.667Z'
                    updated_at: '2023-01-12T14:50:46.667Z'
              schema:
                "$ref": "#/components/schemas/task_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/task_request"
  "/api/tasks/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Task id
      required: true
      schema:
        type: string
    get:
      summary: Show Taks
      parameters:
      - name: include_associations
        in: query
        required: false
        description: If true, extended object with all associations is returned.
        schema:
          type: string
      tags:
      - Tasks
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful with `include_associations=true`:
                  summary: successful with `include_associations=true`
                  value:
                    id: 22
                    name: No Jacket Required
                    pos: 65536.0
                    priority: high
                    spent_time: 0
                    points: 3
                    due_time: '2023-01-19T14:50:46.673Z'
                    list_id: 39
                    deleted_at:
                    url: http://www.example.com/api/tasks/22
                    list_url: http://www.example.com/api/lists/39
                    description: |-
                      ##### Occaecati
                      Molestiae nobis voluptatem. Iure est non. Ullam eum possimus.
                      Vel dolor in. Unde excepturi id. Est aut *nulla.*
                    created_at: '2023-01-12T14:50:46.681Z'
                    updated_at: '2023-01-12T14:50:46.681Z'
                    list:
                      id: 39
                      name: rose
                      pos: 65536.0
                      visible: false
                      deleted_at:
                      board_id: 76
                      created_at: '2023-01-12T14:50:46.676Z'
                      updated_at: '2023-01-12T14:50:46.676Z'
                      custom_data: {}
                      url: http://www.example.com/api/lists/39
                      board_url: http://www.example.com/api/boards/76
                    author:
                      id: 145
                      name: Levi Sporer Sr.
                      avatar_url: https://www.gravatar.com/avatar/a7324aac24213b30358d7e3a15058735
                      role: guest
                      url: http://www.example.com/api/users/145
                      email: levi_sporer_sr.1673535046@example.com
                      created_at: '2023-01-12T14:50:46.680Z'
                      updated_at: '2023-01-12T14:50:46.680Z'
                      custom_data: {}
                    users:
                    - id: 146
                      name: The Hon. Jacinto Tromp
                      avatar_url: https://www.gravatar.com/avatar/bb09985539033a0ac3123a11439f50da
                      role: regular
                      url: http://www.example.com/api/users/146
                      email: the_hon_jacinto_tromp.1673535046@example.com
                      created_at: '2023-01-12T14:50:46.685Z'
                      updated_at: '2023-01-12T14:50:46.685Z'
                      custom_data: {}
                    - id: 147
                      name: Albert Parker
                      avatar_url: https://www.gravatar.com/avatar/e10239248e55c5f76efdcda91a4ef748
                      role: guest
                      url: http://www.example.com/api/users/147
                      email: albert_parker.1673535046@example.com
                      created_at: '2023-01-12T14:50:46.690Z'
                      updated_at: '2023-01-12T14:50:46.690Z'
                      custom_data: {}
                    tags:
                    - id: 22
                      name: Technology
                      colour: "#a3f0a3"
                      url: http://www.example.com/api/tags/22
                      board_id: 77
                      created_at: '2023-01-12T14:50:46.695Z'
                      updated_at: '2023-01-12T14:50:46.695Z'
                      custom_data: {}
                    - id: 23
                      name: Mining
                      colour: "#646264"
                      url: http://www.example.com/api/tags/23
                      board_id: 78
                      created_at: '2023-01-12T14:50:46.699Z'
                      updated_at: '2023-01-12T14:50:46.699Z'
                      custom_data: {}
                    - id: 24
                      name: Community-Services
                      colour: "#3e0f3e"
                      url: http://www.example.com/api/tags/24
                      board_id: 79
                      created_at: '2023-01-12T14:50:46.704Z'
                      updated_at: '2023-01-12T14:50:46.704Z'
                      custom_data: {}
                successful:
                  summary: successful
                  value:
                    id: 23
                    name: Viva la Vida or Death and All His Friends
                    pos: 65536.0
                    priority: low
                    spent_time: 0
                    points: 3
                    due_time: '2023-01-19T14:50:46.728Z'
                    list_id: 40
                    deleted_at:
                    url: http://www.example.com/api/tasks/23
                    list_url: http://www.example.com/api/lists/40
                    description: "# At\nEveniet molestias occaecati. Ratione sunt
                      magni. Esse perspiciatis velit. Cupiditate nemo rem. Ut est
                      minima.\n0. Praesentium. \n1. Iusto. \n2. Ea. \n3. Est. \n"
                    created_at: '2023-01-12T14:50:46.736Z'
                    updated_at: '2023-01-12T14:50:46.736Z'
              schema:
                "$ref": "#/components/schemas/task_response"
    put:
      summary: Update Task
      tags:
      - Tasks
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 24
                    name: New Name
                    pos: 65536.0
                    priority: low
                    spent_time: 0
                    points: 3
                    due_time: '2023-01-19T14:50:46.754Z'
                    list_id: 41
                    deleted_at:
                    url: http://www.example.com/api/tasks/24
                    list_url: http://www.example.com/api/lists/41
                    description: |-
                      ### Sed
                      Voluptas voluptatibus cum. Ea vitae nam. Cupiditate eum laboriosam. Ullam in deserunt. Repudiandae dolore repellat.
                      accusantium | et | repellat
                      ---- | ---- | ----
                      aut | quia | inventore
                      ex | qui | alias
                    created_at: '2023-01-12T14:50:46.763Z'
                    updated_at: '2023-01-12T14:50:46.778Z'
              schema:
                "$ref": "#/components/schemas/task_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/task_request"
    delete:
      summary: Delete Task
      tags:
      - Tasks
      responses:
        '204':
          description: successful
  "/api/tasks/{id}/add_time":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Task id
      required: true
      schema:
        type: string
    put:
      summary: Add time
      tags:
      - Tasks
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 26
                    name: 'Gold: Greatest Hits'
                    pos: 65536.0
                    priority: very_low
                    spent_time: 1200
                    points: 4
                    due_time: '2023-01-19T14:50:46.810Z'
                    list_id: 43
                    deleted_at:
                    url: http://www.example.com/api/tasks/26
                    list_url: http://www.example.com/api/lists/43
                    description: |-
                      ## Quia
                      Ex officiis et. Magni sit voluptate. In ex natus.
                      `Quas.`
                    created_at: '2023-01-12T14:50:46.818Z'
                    updated_at: '2023-01-12T14:50:46.837Z'
        '422':
          description: non integer time
          content:
            application/json:
              examples:
                incorrect unit:
                  summary: incorrect unit
                  value:
                    unit:
                    - is not included in the list
                negative time:
                  summary: negative time
                  value:
                    time:
                    - must be greater than 0
                non integer time:
                  summary: non integer time
                  value:
                    time:
                    - must be greater than 0
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                time:
                  type: integer
                unit:
                  type: string
                  enum: "#<Set: {:day, :hour, :minute, :second}>"
  "/api/tasks/{id}/attach_tag":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Task id
      required: true
      schema:
        type: string
    post:
      summary: Attach Tag
      tags:
      - Tasks
      parameters: []
      responses:
        '204':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                tag_id:
                  type: integer
  "/api/tasks/{id}/detach_tag":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Task id
      required: true
      schema:
        type: string
    post:
      summary: Detach Tag
      tags:
      - Tasks
      parameters: []
      responses:
        '204':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                tag_id:
                  type: integer
  "/api/tasks/{id}/assign_user":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Task id
      required: true
      schema:
        type: string
    post:
      summary: Assign User
      tags:
      - Tasks
      parameters: []
      responses:
        '204':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
  "/api/tasks/{id}/unassign_user":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Task id
      required: true
      schema:
        type: string
    post:
      summary: Unassign User
      tags:
      - Tasks
      parameters: []
      responses:
        '204':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
  "/api/ui_script_triggers":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    post:
      summary: Create ui script trigger
      tags:
      - UI Script triggers
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 2
                    script_id: 18
                    subject_type: DB::Task
                    subject_id: 34
                    scope_type:
                    scope_id:
                    author_id: 176
                    delay: 1
                    private: false
                    colour: "#ffffff"
                    text: click me
                    url: http://www.example.com/api/ui_script_triggers/2
              schema:
                "$ref": "#/components/schemas/ui_script_trigger_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ui_script_trigger_request"
  "/api/ui_script_triggers/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show ui script trigger
      tags:
      - UI Script triggers
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 3
                    script_id: 19
                    subject_type:
                    subject_id:
                    scope_type:
                    scope_id:
                    author_id: 180
                    delay:
                    private:
                    colour: "#ffffff"
                    text: Send a message
                    url: http://www.example.com/api/ui_script_triggers/3
              schema:
                "$ref": "#/components/schemas/ui_script_trigger_response"
    put:
      summary: Update ui script trigger
      tags:
      - UI Script triggers
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 4
                    script_id: 20
                    subject_type:
                    subject_id:
                    scope_type:
                    scope_id:
                    author_id: 184
                    delay:
                    private:
                    colour: "#ffffff"
                    text: Send a message
                    url: http://www.example.com/api/ui_script_triggers/4
              schema:
                "$ref": "#/components/schemas/ui_script_trigger_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ui_script_trigger_request"
    delete:
      summary: Delete ui_script_trigger
      tags:
      - UI Script triggers
      responses:
        '204':
          description: successful
  "/api/ui_script_triggers/{id}/executions":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    post:
      summary: Execute script connected with ui script trigger
      tags:
      - UI Script triggers
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: string
      responses:
        '201':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ui_script_trigger_execution_request"
  "/api/tasks/{id}/ui_script_triggers":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: List ui script triggers of a single task
      tags:
      - UI Script triggers
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ui_script_trigger_response"
  "/api/boards/{id}/ui_script_triggers":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: List ui script triggers of a single board
      tags:
      - UI Script triggers
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ui_script_trigger_response"
  "/api/workspaces/{id}/ui_script_triggers":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: List ui script triggers of a single workspace
      tags:
      - UI Script triggers
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ui_script_trigger_response"
  "/api/users/current/ui_script_triggers":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: List global ui script triggers of the current user
      tags:
      - UI Script triggers
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ui_script_trigger_response"
  "/api/workspaces/{id}/users":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: List users of workspace
      tags:
      - Users
      parameters:
      - name: id
        in: path
        description: Workspace id
        required: true
        schema:
          type: string
      - name: page
        in: query
        required: false
        description: Decides which result page should be returned.
        example: 2
        schema:
          type: integer
      - name: role
        in: query
        required: false
        schema:
          "$ref": "#/components/schemas/user_request/properties/role"
        example: admin
      - name: created_at_from
        in: query
        required: false
        description: Date with format YYYY.MM.DD
        example: 2010.01.25
        schema:
          type: string
      - name: created_at_to
        in: query
        required: false
        description: Date with format YYYY.MM.DD
        example: 2010.01.25
        schema:
          type: string
      - name: search
        in: query
        required: false
        description: Searches for users by name and e-mail.
        example: michael
        schema:
          type: string
      - name: per
        in: query
        required: false
        description: Decides how many entities should be returned per one page. **Works
          only, when `page` param is given.**
        example: 2
        schema:
          type: integer
      - name: limit
        in: query
        required: false
        description: Decides how many entities should be returned.
        example: 3
        schema:
          type: integer
      responses:
        '200':
          description: successful with pages
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    users:
                    - id: 209
                      name: Gilbert Zemlak
                      avatar_url: https://www.gravatar.com/avatar/6729d395330f9c2016eb7385c85daef9
                      role: developer
                      url: http://www.example.com/api/users/209
                      email: gilbert_zemlak.1673535047@example.com
                      created_at: '2023-01-12T14:50:47.331Z'
                      updated_at: '2023-01-12T14:50:47.331Z'
                      custom_data: {}
                    - id: 210
                      name: Joel Botsford
                      avatar_url: https://www.gravatar.com/avatar/54fed48b386f266483cc3296618a9f56
                      role: regular
                      url: http://www.example.com/api/users/210
                      email: joel_botsford.1673535047@example.com
                      created_at: '2023-01-12T14:50:47.342Z'
                      updated_at: '2023-01-12T14:50:47.342Z'
                      custom_data: {}
                    - id: 211
                      name: Lashunda Hettinger
                      avatar_url: https://www.gravatar.com/avatar/bc6406d892ddf640eb2f7d0fd77166b9
                      role: manager
                      url: http://www.example.com/api/users/211
                      email: lashunda_hettinger.1673535047@example.com
                      created_at: '2023-01-12T14:50:47.346Z'
                      updated_at: '2023-01-12T14:50:47.346Z'
                      custom_data: {}
                successful with pages:
                  summary: successful with pages
                  value:
                    users:
                    - id: 213
                      name: Louie Beier DC
                      avatar_url: https://www.gravatar.com/avatar/6ba6be2fe53618724fa45feae25cb41a
                      role: regular
                      url: http://www.example.com/api/users/213
                      email: louie_beier_dc.1673535047@example.com
                      created_at: '2023-01-12T14:50:47.370Z'
                      updated_at: '2023-01-12T14:50:47.370Z'
                      custom_data: {}
                    - id: 214
                      name: Woodrow Funk
                      avatar_url: https://www.gravatar.com/avatar/4e81d604a62cc15d62b7b80b2728e5e5
                      role: manager
                      url: http://www.example.com/api/users/214
                      email: woodrow_funk.1673535047@example.com
                      created_at: '2023-01-12T14:50:47.375Z'
                      updated_at: '2023-01-12T14:50:47.375Z'
                      custom_data: {}
                    - id: 215
                      name: Victoria Metz
                      avatar_url: https://www.gravatar.com/avatar/8532ccaf05e7cf5dfa4721064e5812ef
                      role: developer
                      url: http://www.example.com/api/users/215
                      email: victoria_metz.1673535047@example.com
                      created_at: '2023-01-12T14:50:47.380Z'
                      updated_at: '2023-01-12T14:50:47.380Z'
                      custom_data: {}
                    total_pages: 1
              schema:
                "$ref": "#/components/schemas/user_pages_response"
  "/api/users":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: List users
      tags:
      - Users
      parameters:
      - name: role_collection
        in: query
        schema:
          type: array
          items:
            "$ref": "#/components/schemas/user_request/properties/role"
        example:
        - admin
      - name: role
        in: query
        required: false
        schema:
          "$ref": "#/components/schemas/user_request/properties/role"
        example: admin
      - name: created_at_from
        in: query
        required: false
        description: Date with format YYYY.MM.DD
        example: 2010.01.25
        schema:
          type: string
      - name: created_at_to
        in: query
        required: false
        description: Date with format YYYY.MM.DD
        example: 2010.01.25
        schema:
          type: string
      - name: workspace_id
        in: query
        required: false
        example: 1
        schema:
          type: integer
      - name: search
        in: query
        required: false
        description: Searches for users by name and e-mail.
        example: michael
        schema:
          type: string
      - name: page
        in: query
        required: false
        description: Decides which result page should be returned.
        example: 2
        schema:
          type: integer
      - name: per
        in: query
        required: false
        description: Decides how many entities should be returned per one page. **Works
          only, when `page` param is given.**
        example: 2
        schema:
          type: integer
      - name: limit
        in: query
        required: false
        description: Decides how many entities should be returned.
        example: 3
        schema:
          type: integer
      responses:
        '200':
          description: successful with pages
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    users:
                    - id: 217
                      name: Cyril Armstrong
                      avatar_url: https://www.gravatar.com/avatar/06528f8a753ec56212abc1ec95b8724d
                      role: regular
                      url: http://www.example.com/api/users/217
                      email: cyril_armstrong.1673535047@example.com
                      created_at: '2023-01-12T14:50:47.401Z'
                      updated_at: '2023-01-12T14:50:47.401Z'
                      custom_data: {}
                    - id: 218
                      name: Claris Grimes DVM
                      avatar_url: https://www.gravatar.com/avatar/0512d0e13a7923ab4507becc0aa37330
                      role: manager
                      url: http://www.example.com/api/users/218
                      email: claris_grimes_dvm.1673535047@example.com
                      created_at: '2023-01-12T14:50:47.404Z'
                      updated_at: '2023-01-12T14:50:47.404Z'
                      custom_data: {}
                    - id: 219
                      name: Salena Cronin
                      avatar_url: https://www.gravatar.com/avatar/8019951339092725a33d5aed7b7cb2d3
                      role: manager
                      url: http://www.example.com/api/users/219
                      email: salena_cronin.1673535047@example.com
                      created_at: '2023-01-12T14:50:47.407Z'
                      updated_at: '2023-01-12T14:50:47.407Z'
                      custom_data: {}
                    - id: 220
                      name: Calvin Heidenreich
                      avatar_url: https://www.gravatar.com/avatar/c725e102cb99085b60b4d07ef8041643
                      role: manager
                      url: http://www.example.com/api/users/220
                      email: calvin_heidenreich.1673535047@example.com
                      created_at: '2023-01-12T14:50:47.411Z'
                      updated_at: '2023-01-12T14:50:47.411Z'
                      custom_data: {}
                    - id: 221
                      name: Terrance Johns IV
                      avatar_url: https://www.gravatar.com/avatar/0d630b257d5cc656742aa3fc05d6952c
                      role: regular
                      url: http://www.example.com/api/users/221
                      email: terrance_johns_iv.1673535047@example.com
                      created_at: '2023-01-12T14:50:47.414Z'
                      updated_at: '2023-01-12T14:50:47.414Z'
                      custom_data: {}
                    - id: 222
                      name: Maxima Mitchell
                      avatar_url: https://www.gravatar.com/avatar/18a8e6e7a0ae8e581df4e04c48d4d4dd
                      role: admin
                      url: http://www.example.com/api/users/222
                      email: maxima_mitchell.1673535047@example.com
                      created_at: '2023-01-12T14:50:47.417Z'
                      updated_at: '2023-01-12T14:50:47.417Z'
                      custom_data: {}
                successful with pages:
                  summary: successful with pages
                  value:
                    users:
                    - id: 223
                      name: Joane Towne
                      avatar_url: https://www.gravatar.com/avatar/ccbe71906505716b26a3826bac372a88
                      role: regular
                      url: http://www.example.com/api/users/223
                      email: joane_towne.1673535047@example.com
                      created_at: '2023-01-12T14:50:47.433Z'
                      updated_at: '2023-01-12T14:50:47.433Z'
                      custom_data: {}
                    - id: 224
                      name: Rep. Florinda Skiles
                      avatar_url: https://www.gravatar.com/avatar/a28a6095d51027ccaef71e3b4e214416
                      role: developer
                      url: http://www.example.com/api/users/224
                      email: rep_florinda_skiles.1673535047@example.com
                      created_at: '2023-01-12T14:50:47.436Z'
                      updated_at: '2023-01-12T14:50:47.436Z'
                      custom_data: {}
                    - id: 225
                      name: Kiersten Murazik
                      avatar_url: https://www.gravatar.com/avatar/77777dc4cc53439e86bbeaccf6dbd740
                      role: manager
                      url: http://www.example.com/api/users/225
                      email: kiersten_murazik.1673535047@example.com
                      created_at: '2023-01-12T14:50:47.440Z'
                      updated_at: '2023-01-12T14:50:47.440Z'
                      custom_data: {}
                    - id: 226
                      name: Page Lemke
                      avatar_url: https://www.gravatar.com/avatar/020e12ed08a4da25f67a8c7f5dc6164e
                      role: regular
                      url: http://www.example.com/api/users/226
                      email: page_lemke.1673535047@example.com
                      created_at: '2023-01-12T14:50:47.443Z'
                      updated_at: '2023-01-12T14:50:47.443Z'
                      custom_data: {}
                    - id: 227
                      name: Rep. Jordan McKenzie
                      avatar_url: https://www.gravatar.com/avatar/16650289e363d09a45998db108316dcf
                      role: developer
                      url: http://www.example.com/api/users/227
                      email: rep_jordan_mc_kenzie.1673535047@example.com
                      created_at: '2023-01-12T14:50:47.446Z'
                      updated_at: '2023-01-12T14:50:47.446Z'
                      custom_data: {}
                    - id: 228
                      name: Myrtle Roob
                      avatar_url: https://www.gravatar.com/avatar/875e56c045a73cc2300943cff41d188b
                      role: admin
                      url: http://www.example.com/api/users/228
                      email: myrtle_roob.1673535047@example.com
                      created_at: '2023-01-12T14:50:47.449Z'
                      updated_at: '2023-01-12T14:50:47.449Z'
                      custom_data: {}
                    total_pages: 1
              schema:
                "$ref": "#/components/schemas/user_pages_response"
    post:
      summary: Create a user
      tags:
      - Users
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 230
                    name: New User
                    created_at: '2023-01-12T14:50:47.483Z'
                    updated_at: '2023-01-12T14:50:47.483Z'
                    email: new_user@example.com
                    role: developer
                    deleted_at:
                    recent_boards: []
                    custom_data: {}
              schema:
                "$ref": "#/components/schemas/user_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/user_request"
    put:
      summary: Update current user
      tags:
      - Users
      parameters: []
      responses:
        '204':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/user_update_request"
    delete:
      summary: Delete current user
      tags:
      - Users
      responses:
        '204':
          description: successful
  "/api/users/current":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: Show the currently signed in user
      tags:
      - Users
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 233
                    name: Buffy Blanda
                    avatar_url: https://www.gravatar.com/avatar/245fc4fce11c14c25821a42edf648593
                    role: admin
                    url: http://www.example.com/api/users/233
                    email: buffy_blanda.1673535047@example.com
                    created_at: '2023-01-12T14:50:47.527Z'
                    updated_at: '2023-01-12T14:50:47.527Z'
                    custom_data: {}
              schema:
                "$ref": "#/components/schemas/user_response"
  "/api/users/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show a user
      tags:
      - Users
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 234
                    name: Laurine Marquardt DO
                    avatar_url: https://www.gravatar.com/avatar/7182f062b2973087907427234b436c60
                    role: developer
                    url: http://www.example.com/api/users/234
                    email: laurine_marquardt_do.1673535047@example.com
                    created_at: '2023-01-12T14:50:47.542Z'
                    updated_at: '2023-01-12T14:50:47.542Z'
                    custom_data: {}
              schema:
                "$ref": "#/components/schemas/user_response"
  "/api/users/sign_in":
    post:
      summary: Sign in
      tags:
      - Users
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 236
                    name: Fernando West
                    created_at: '2023-01-12T14:50:47.560Z'
                    updated_at: '2023-01-12T14:50:47.560Z'
                    email: email@example.com
                    role: guest
                    deleted_at:
                    recent_boards: []
                    custom_data: {}
              schema:
                "$ref": "#/components/schemas/user_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/user_sign_in_request"
  "/api/users/sign_out":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    delete:
      summary: Sign out
      tags:
      - Users
      responses:
        '204':
          description: successful
  "/api/workspaces":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: list workspaces
      tags:
      - Workspaces
      security:
      - Bearer: {}
      parameters:
      - name: limit
        in: query
        description: Decides how many entities should be returned
        example: 3
        required: false
        schema:
          type: integer
      - name: boards
        in: query
        type: string
        schema:
          "$ref": "#/components/schemas/include_associated_enum"
        required: false
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful with `boards=all`:
                  summary: successful with `boards=all`
                  value:
                  - id: 100
                    name: Transcof
                    created_at: '2023-01-12T14:50:47.598Z'
                    updated_at: '2023-01-12T14:50:47.598Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/workspaces/100
                    boards:
                    - id: 97
                      name: Nickel
                      colour: "#c5e7c5"
                      workspace_id: 100
                      created_at: '2023-01-12T14:50:47.601Z'
                      updated_at: '2023-01-12T14:50:47.601Z'
                      deleted_at:
                      custom_data: {}
                      url: http://www.example.com/api/boards/97
                      workspace_url: http://www.example.com/api/workspaces/100
                    - id: 98
                      name: Nitrogen
                      colour: "#9d9d15"
                      workspace_id: 100
                      created_at: '2023-01-12T14:50:47.602Z'
                      updated_at: '2023-01-12T14:50:47.602Z'
                      deleted_at:
                      custom_data: {}
                      url: http://www.example.com/api/boards/98
                      workspace_url: http://www.example.com/api/workspaces/100
                    - id: 99
                      name: Aluminum
                      colour: "#199494"
                      workspace_id: 100
                      created_at: '2023-01-12T14:50:47.603Z'
                      updated_at: '2023-01-12T14:50:47.603Z'
                      deleted_at:
                      custom_data: {}
                      url: http://www.example.com/api/boards/99
                      workspace_url: http://www.example.com/api/workspaces/100
                    - id: 100
                      name: Livermorium
                      colour: "#22225e"
                      workspace_id: 100
                      created_at: '2023-01-12T14:50:47.605Z'
                      updated_at: '2023-01-12T14:50:47.605Z'
                      deleted_at:
                      custom_data: {}
                      url: http://www.example.com/api/boards/100
                      workspace_url: http://www.example.com/api/workspaces/100
                    - id: 101
                      name: Iodine
                      colour: "#d2d265"
                      workspace_id: 100
                      created_at: '2023-01-12T14:50:47.606Z'
                      updated_at: '2023-01-12T14:50:47.606Z'
                      deleted_at:
                      custom_data: {}
                      url: http://www.example.com/api/boards/101
                      workspace_url: http://www.example.com/api/workspaces/100
                  - id: 101
                    name: Tempsoft
                    created_at: '2023-01-12T14:50:47.607Z'
                    updated_at: '2023-01-12T14:50:47.607Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/workspaces/101
                    boards: []
                successful:
                  summary: successful
                  value:
                  - id: 102
                    name: Zaam-Dox
                    created_at: '2023-01-12T14:50:47.631Z'
                    updated_at: '2023-01-12T14:50:47.631Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/workspaces/102
                  - id: 103
                    name: Konklab
                    created_at: '2023-01-12T14:50:47.634Z'
                    updated_at: '2023-01-12T14:50:47.634Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/workspaces/103
                  - id: 104
                    name: Andalax
                    created_at: '2023-01-12T14:50:47.636Z'
                    updated_at: '2023-01-12T14:50:47.636Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/workspaces/104
                  - id: 105
                    name: Bigtax
                    created_at: '2023-01-12T14:50:47.639Z'
                    updated_at: '2023-01-12T14:50:47.639Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/workspaces/105
                  - id: 106
                    name: Alpha
                    created_at: '2023-01-12T14:50:47.641Z'
                    updated_at: '2023-01-12T14:50:47.641Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/workspaces/106
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/workspace_response"
    post:
      summary: create workspace
      tags:
      - Workspaces
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 107
                    name: New Workspace
                    created_at: '2023-01-12T14:50:47.675Z'
                    updated_at: '2023-01-12T14:50:47.675Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/workspaces/107
              schema:
                "$ref": "#/components/schemas/workspace_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/workspace_request"
  "/api/workspaces/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show workspace
      parameters:
      - name: boards
        in: query
        type: string
        schema:
          "$ref": "#/components/schemas/include_associated_enum"
        required: false
      tags:
      - Workspaces
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful with `boards=all`:
                  summary: successful with `boards=all`
                  value:
                    id: 108
                    name: Ventosanzap
                    created_at: '2023-01-12T14:50:47.685Z'
                    updated_at: '2023-01-12T14:50:47.685Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/workspaces/108
                    boards:
                    - id: 102
                      name: Xenon
                      colour: "#040490"
                      workspace_id: 108
                      created_at: '2023-01-12T14:50:47.688Z'
                      updated_at: '2023-01-12T14:50:47.689Z'
                      deleted_at:
                      custom_data: {}
                      url: http://www.example.com/api/boards/102
                      workspace_url: http://www.example.com/api/workspaces/108
                    - id: 103
                      name: Sodium
                      colour: "#c9e3c9"
                      workspace_id: 108
                      created_at: '2023-01-12T14:50:47.691Z'
                      updated_at: '2023-01-12T14:50:47.692Z'
                      deleted_at:
                      custom_data: {}
                      url: http://www.example.com/api/boards/103
                      workspace_url: http://www.example.com/api/workspaces/108
                successful:
                  summary: successful
                  value:
                    id: 111
                    name: Cardify
                    created_at: '2023-01-12T14:50:47.714Z'
                    updated_at: '2023-01-12T14:50:47.714Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/workspaces/111
              schema:
                "$ref": "#/components/schemas/workspace_response"
    put:
      summary: update workspace
      tags:
      - Workspaces
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 112
                    name: New Name
                    created_at: '2023-01-12T14:50:47.733Z'
                    updated_at: '2023-01-12T14:50:47.747Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/workspaces/112
              schema:
                "$ref": "#/components/schemas/workspace_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/workspace_request"
    delete:
      summary: delete workspace
      tags:
      - Workspaces
      responses:
        '204':
          description: successful
  "/api/workspaces/{id}/assign_user":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Workspace id
      required: true
      schema:
        type: string
    post:
      summary: Assign User
      tags:
      - Workspaces
      parameters: []
      responses:
        '204':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
  "/api/workspaces/{id}/unassign_user":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Workspace id
      required: true
      schema:
        type: string
    post:
      summary: Unassign User
      tags:
      - Workspaces
      parameters: []
      responses:
        '204':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
components:
  schemas:
    authorization:
      name: Authorization
      in: header
      type: string
      description: JWT token
      example: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiZGV2ZWxvcGVyIiwic3ViIjoiMSIsInNjcCI6InVzZXIiLCJhdWQiOm51bGwsImlhdCI6MTY2NjE4MDIzMiwiZXhwIjoxNjY3NDc2MjMyLCJqdGkiOiJhMzdlZTA5MC0zZGJmLTRhMzgtOTFiNy1mZTJlM2FiYjlkY2QifQ.tGGjFHfMszfGCfNZS6I-hQNLSu_2Xfs3W4hI8IT4CW0
      required: true
    include_associated_enum:
      type: string
      enum:
      - visible
      - invisible
      - non-archived
      - archived
      - all
    lambdee_models_enum:
      type: string
      enum:
      - DB::User
      - DB::Workspace
      - DB::Board
      - DB::List
      - DB::Task
      - DB::Comment
      - DB::Tag
      - DB::Sprint
      - DB::UserWorkspace
      - DB::TaskUser
      - DB::TaskTag
      - DB::SprintTask
    lambdee_ui_script_triggers_subjects_enum:
      type: string
      enum:
      - DB::Workspace
      - DB::Board
      - DB::Task
    user_pages_response:
      type: object
      properties:
        users:
          type: array
          items:
            "$ref": "#components/schemas/user_response"
        total_pages:
          type: integer
      required:
      - users
    user_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        avatar_url:
          type: string
        url:
          type: string
        role:
          type: string
      required:
      - id
      - name
    user_request:
      type: object
      properties:
        user:
          type: object
          properties:
            name:
              type: string
            email:
              type: string
            password:
              type: string
            role:
              type: string
              enum:
              - guest
              - regular
              - developer
              - admin
              - manager
      required:
      - name
      - email
    user_update_request:
      type: object
      properties:
        user:
          type: object
          properties:
            name:
              type: string
            email:
              type: string
            password:
              type: string
            current_password:
              type: string
            role:
              type: string
              enum:
              - guest
              - regular
              - developer
              - admin
              - manager
      required:
      - current_password
    user_sign_in_request:
      type: object
      properties:
        user:
          type: object
          properties:
            email:
              type: string
            password:
              type: string
      required:
      - email
      - password
    comment_response:
      type: object
      properties:
        id:
          type: integer
        body:
          type: string
        deleted_at:
          type:
          - string
          - 'null'
          format: date_time
        author_id:
          type: integer
        task_id:
          type: integer
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        url:
          type: string
        users:
          type: array
          items:
            "$ref": "#/components/schemas/user_response"
          nullable: true
      required:
      - id
      - body
      - deleted_at
      - url
    tag_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        colour:
          type: string
        board_id:
          type: integer
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        url:
          type: string
        board_url:
          type: string
      required:
      - id
    tag_request:
      type: object
      properties:
        name:
          type: string
        colour:
          type: string
        board_id:
          type: integer
        task_id:
          type: integer
      required: []
    sprint_pages_response:
      type: object
      properties:
        sprints:
          type: array
          items:
            "$ref": "#components/schemas/sprint_response"
        total_pages:
          type: integer
      required:
      - sprints
    script_run_pages_response:
      type: object
      properties:
        runs:
          type: array
          items:
            "$ref": "#components/schemas/script_run_response"
        total_pages:
          type: integer
      required:
      - runs
    sprint_response:
      type: object
      properties:
        id:
          type: integer
        board_id:
          type: integer
        name:
          type: string
        description:
          type:
          - string
          - 'null'
        started_at:
          type: string
          format: date_time
        expected_end_at:
          type: string
          format: date_time
        ended_at:
          type:
          - string
          - 'null'
          format: date_time
        final_list_name:
          type: string
        url:
          type: string
        tasks:
          type: array
          items:
            "$ref": "#/components/schemas/task_with_sprint_task_response"
          nullable: true
      required:
      - id
      - name
    task_with_sprint_task_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        priority:
          type: string
        spent_time:
          type: integer
        points:
          type: integer
        added_at:
          type: string
          format: date_time
        completed_at:
          type:
          - string
          - 'null'
          format: date_time
        start_state:
          type: string
        state:
          type: string
      required:
      - id
    sprint_request:
      type: object
      properties:
        board_id:
          type: integer
        name:
          type: string
        description:
          type: string
        started_at:
          type: string
          format: date_time
          example: '2025-12-11T23:00:00'
        expected_end_at:
          type: string
          format: date_time
          example: '2025-12-18T23:00:00'
      required:
      - name
      - expected_end_at
    task_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type:
          - string
          - 'null'
        due_time:
          type:
          - string
          - 'null'
          format: date_time
        pos:
          type:
          - number
          - 'null'
          format: float
        priority:
          type:
          - string
          - 'null'
        points:
          type:
          - number
          - 'null'
          format: float
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        deleted_at:
          type:
          - string
          - 'null'
          format: date_time
        list_id:
          type: integer
        list_url:
          type: string
        url:
          type: string
        users:
          type: array
          items:
            "$ref": "#/components/schemas/user_response"
          nullable: true
        tags:
          type: array
          items:
            "$ref": "#/components/schemas/tag_response"
          nullable: true
        author:
          type: object
          schema:
            "$ref": "#/components/schemas/user_response"
          nullable: true
      required:
      - id
      - name
      - pos
      - priority
      - points
      - list_id
      - deleted_at
    task_request:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        due_time:
          type: string
          format: date_time
          example: '2025-12-18T23:00:00'
        pos:
          type: number
          format: float
          description: If not given, value will be set as for the last item in the
            list.
        priority:
          type: string
          enum:
          - very_low
          - low
          - medium
          - high
          - very_high
        points:
          type: number
          format: float
        list_id:
          type: integer
        author_id:
          type: integer
      required:
      - name
      - list_id
      - author_id
    list_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        pos:
          type: number
          format: float
        visible:
          type:
          - boolean
          - 'null'
        deleted_at:
          type:
          - string
          - 'null'
          format: date_time
        board_id:
          type: integer
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        url:
          type: string
        board_url:
          type: string
        tasks:
          type: array
          items:
            "$ref": "#/components/schemas/task_response"
          nullable: true
      required:
      - id
      - name
      - pos
      - visible
      - board_id
      - created_at
      - updated_at
      - deleted_at
    list_request:
      type: object
      properties:
        name:
          type: string
        pos:
          type: number
          format: float
        visible:
          type: boolean
        board_id:
          type: integer
      required:
      - name
      - board_id
    board_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        workspace_id:
          type: integer
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        deleted_at:
          type:
          - string
          - 'null'
          format: date_time
        url:
          type: string
        workspace_url:
          type: string
        lists:
          type: array
          items:
            "$ref": "#/components/schemas/list_response"
          nullable: true
      required:
      - id
      - name
      - workspace_id
      - created_at
      - updated_at
      - deleted_at
    board_request:
      type: object
      properties:
        name:
          type: string
        workspace_id:
          type: integer
      required:
      - name
      - workspace_id
    workspace_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        deleted_at:
          type:
          - string
          - 'null'
          format: date_time
        url:
          type: string
        boards:
          type: array
          items:
            "$ref": "#/components/schemas/board_response"
          nullable: true
      required:
      - id
      - name
      - created_at
      - updated_at
      - deleted_at
    workspace_request:
      type: object
      properties:
        name:
          type: string
      required:
      - name
    script_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        content:
          type: string
        url:
          type: string
        script_triggers:
          type: array
          items:
            "$ref": "#/components/schemas/nested_script_trigger_response"
        ui_script_triggers:
          type: array
          items:
            "$ref": "#/components/schemas/ui_script_trigger_response"
      required: []
    script_request:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        content:
          type: string
        script_triggers_attributes:
          type: array
          items:
            "$ref": "#/components/schemas/nested_script_trigger_request"
      required:
      - name
    nested_script_trigger_response:
      type: object
      properties:
        id:
          type: integer
        script_id:
          type:
          - integer
          - 'null'
        subject_type:
          type:
          - string
          - 'null'
        subject_id:
          type:
          - integer
          - 'null'
        action:
          type: string
        delay:
          type:
          - integer
          - 'null'
        url:
          type: string
      required: []
    nested_script_trigger_request:
      type: object
      properties:
        id:
          type: integer
          description: Needed only for updates and destroys.
        script_id:
          type: integer
        subject_type:
          "$ref": "#/components/schemas/lambdee_models_enum"
        subject_id:
          type: integer
        action:
          type: string
          enum:
          - create
          - update
          - destroy
        delay:
          type:
          - integer
          - 'null'
          description: Number of seconds of script execution delay
        _destroy:
          type: boolean
          description: If `true` callback for given `id` will be destroyed. Works
            only nested in sprint.
      required:
      - action
    script_trigger_response:
      type: object
      properties:
        id:
          type: integer
        script_id:
          type: integer
        subject_type:
          type:
          - string
          - 'null'
        subject_id:
          type:
          - integer
          - 'null'
        action:
          type: string
        delay:
          type:
          - integer
          - 'null'
        url:
          type: string
      required: []
    script_trigger_request:
      type: object
      properties:
        script_id:
          type: integer
        subject_type:
          "$ref": "#/components/schemas/lambdee_models_enum"
        subject_id:
          type: integer
        action:
          type: string
        delay:
          type:
          - integer
          - 'null'
          description: Number of seconds of script execution delay
      required:
      - script_id
      - action
    ui_script_trigger_response:
      type: object
      properties:
        id:
          type: integer
        script_id:
          type: integer
        subject_type:
          type:
          - string
          - 'null'
        subject_id:
          type:
          - integer
          - 'null'
        scope_type:
          type:
          - string
          - 'null'
        scope_id:
          type:
          - integer
          - 'null'
        delay:
          type:
          - integer
          - 'null'
        text:
          type: string
        author_id:
          type: integer
        private:
          type:
          - boolean
          - 'null'
        colour:
          type: string
        url:
          type: string
      required: []
    ui_script_trigger_execution_request:
      type: object
      properties:
        subject_id:
          type:
          - integer
          - 'null'
          description: Id of the actual subject. Not needed for global triggers.
      required:
      - script_id
      - action
    ui_script_trigger_request:
      type: object
      properties:
        script_id:
          type: integer
        subject_type:
          "$ref": "#/components/schemas/lambdee_ui_script_triggers_subjects_enum"
        subject_id:
          type:
          - integer
          - 'null'
        scope_type:
          type:
          - string
          - 'null'
        scope_id:
          type:
          - integer
          - 'null'
        text:
          type:
          - string
          - 'null'
        author_id:
          type: integer
        private:
          type:
          - boolean
          - 'null'
        colour:
          type:
          - string
          - 'null'
        delay:
          type:
          - integer
          - 'null'
          description: Number of seconds of script execution delay
      required:
      - script_id
      - action
    script_run_response:
      type: object
      properties:
        id:
          type: integer
        script_id:
          type: integer
        script_name:
          type: string
        initiator_id:
          type: integer
        input:
          type:
          - string
          - 'null'
        triggered_at:
          type: string
          format: date_time
        executed_at:
          type:
          - string
          - 'null'
          format: date_time
        output:
          type: string
        state:
          type: string
        delay:
          type:
          - integer
          - 'null'
        url:
          type: string
      required: []
    script_run_request:
      type: object
      properties:
        output:
          type: string
        state:
          type: string
          enum:
          - running
          - executed
          - failed
          - timed_out
          - connection_failed
      required: []
servers:
- url: "{defaultProtocol}://{defaultHost}"
  variables:
    defaultProtocol:
      default: http
    defaultHost:
      default: localhost:3000
