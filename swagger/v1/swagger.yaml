---
openapi: 3.0.1
info:
  title: Lambdee API V1
  version: v1
paths:
  "/api/boards":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: list boards
      tags:
      - Boards
      parameters:
      - name: limit
        in: query
        required: false
        description: Decides how many entities should be returned
        example: 3
        schema:
          type: integer
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - id: 1
                    name: Tungsten
                    colour: "#1dbc59"
                    workspace_id: 1
                    created_at: '2022-11-15T17:30:46.526Z'
                    updated_at: '2022-11-15T17:30:46.526Z'
                    deleted_at:
                    url: http://www.example.com/api/boards/1
                    workspace_url: http://www.example.com/api/workspaces/1
                  - id: 2
                    name: Neodymium
                    colour: "#dd545a"
                    workspace_id: 2
                    created_at: '2022-11-15T17:30:46.528Z'
                    updated_at: '2022-11-15T17:30:46.528Z'
                    deleted_at:
                    url: http://www.example.com/api/boards/2
                    workspace_url: http://www.example.com/api/workspaces/2
                  - id: 3
                    name: Boron
                    colour: "#59e642"
                    workspace_id: 3
                    created_at: '2022-11-15T17:30:46.529Z'
                    updated_at: '2022-11-15T17:30:46.529Z'
                    deleted_at:
                    url: http://www.example.com/api/boards/3
                    workspace_url: http://www.example.com/api/workspaces/3
                  - id: 4
                    name: Palladium
                    colour: "#3c2922"
                    workspace_id: 4
                    created_at: '2022-11-15T17:30:46.531Z'
                    updated_at: '2022-11-15T17:30:46.531Z'
                    deleted_at:
                    url: http://www.example.com/api/boards/4
                    workspace_url: http://www.example.com/api/workspaces/4
                  - id: 5
                    name: Titanium
                    colour: "#adf58a"
                    workspace_id: 5
                    created_at: '2022-11-15T17:30:46.532Z'
                    updated_at: '2022-11-15T17:30:46.532Z'
                    deleted_at:
                    url: http://www.example.com/api/boards/5
                    workspace_url: http://www.example.com/api/workspaces/5
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/board_response"
    post:
      summary: create board
      tags:
      - Boards
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 6
                    name: New Board
                    colour:
                    workspace_id: 6
                    created_at: '2022-11-15T17:30:46.605Z'
                    updated_at: '2022-11-15T17:30:46.605Z'
                    deleted_at:
                    url: http://www.example.com/api/boards/6
                    workspace_url: http://www.example.com/api/workspaces/6
              schema:
                "$ref": "#/components/schemas/board_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/board_request"
  "/api/boards/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show board
      tags:
      - Boards
      parameters:
      - name: tasks
        in: query
        type: string
        schema:
          "$ref": "#/components/schemas/include_associated_enum"
        required: false
      - name: lists
        in: query
        type: string
        schema:
          "$ref": "#/components/schemas/include_associated_enum"
        required: false
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful with `lists=all`:
                  summary: successful with `lists=all`
                  value:
                    id: 7
                    name: Flerovium
                    colour: "#43329e"
                    workspace_id: 7
                    created_at: '2022-11-15T17:30:46.615Z'
                    updated_at: '2022-11-15T17:30:46.615Z'
                    deleted_at:
                    url: http://www.example.com/api/boards/7
                    workspace_url: http://www.example.com/api/workspaces/7
                    lists:
                    - id: 1
                      name: pink
                      pos: 65536.0
                      visible: false
                      deleted_at: '2022-11-15T17:30:46.631Z'
                      board_id: 7
                      created_at: '2022-11-15T17:30:46.624Z'
                      updated_at: '2022-11-15T17:30:46.626Z'
                      url: http://www.example.com/api/lists/1
                      board_url: http://www.example.com/api/boards/7
                    - id: 2
                      name: ultramarine
                      pos: 65536.0
                      visible: false
                      deleted_at:
                      board_id: 7
                      created_at: '2022-11-15T17:30:46.634Z'
                      updated_at: '2022-11-15T17:30:46.636Z'
                      url: http://www.example.com/api/lists/2
                      board_url: http://www.example.com/api/boards/7
                successful with `lists=visible`:
                  summary: successful with `lists=visible`
                  value:
                    id: 10
                    name: Selenium
                    colour: "#c82c17"
                    workspace_id: 10
                    created_at: '2022-11-15T17:30:46.666Z'
                    updated_at: '2022-11-15T17:30:46.666Z'
                    deleted_at:
                    url: http://www.example.com/api/boards/10
                    workspace_url: http://www.example.com/api/workspaces/10
                    lists: []
                successful with `lists=archived`:
                  summary: successful with `lists=archived`
                  value:
                    id: 12
                    name: Magnesium
                    colour: "#837398"
                    workspace_id: 12
                    created_at: '2022-11-15T17:30:46.693Z'
                    updated_at: '2022-11-15T17:30:46.693Z'
                    deleted_at:
                    url: http://www.example.com/api/boards/12
                    workspace_url: http://www.example.com/api/workspaces/12
                    lists:
                    - id: 4
                      name: blush
                      pos: 65536.0
                      visible: false
                      deleted_at: '2022-11-15T17:30:46.697Z'
                      board_id: 12
                      created_at: '2022-11-15T17:30:46.695Z'
                      updated_at: '2022-11-15T17:30:46.696Z'
                      url: http://www.example.com/api/lists/4
                      board_url: http://www.example.com/api/boards/12
                    - id: 5
                      name: olive
                      pos: 65536.0
                      visible: false
                      deleted_at: '2022-11-15T17:30:46.702Z'
                      board_id: 12
                      created_at: '2022-11-15T17:30:46.700Z'
                      updated_at: '2022-11-15T17:30:46.701Z'
                      url: http://www.example.com/api/lists/5
                      board_url: http://www.example.com/api/boards/12
                successful:
                  summary: successful
                  value:
                    id: 15
                    name: Ytterbium
                    colour: "#d5b918"
                    workspace_id: 15
                    created_at: '2022-11-15T17:30:46.726Z'
                    updated_at: '2022-11-15T17:30:46.726Z'
                    deleted_at:
                    url: http://www.example.com/api/boards/15
                    workspace_url: http://www.example.com/api/workspaces/15
              schema:
                "$ref": "#/components/schemas/board_response"
    put:
      summary: update board
      tags:
      - Boards
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 16
                    name: New Name
                    colour: "#e760a1"
                    workspace_id: 16
                    created_at: '2022-11-15T17:30:46.747Z'
                    updated_at: '2022-11-15T17:30:46.760Z'
                    deleted_at:
                    url: http://www.example.com/api/boards/16
                    workspace_url: http://www.example.com/api/workspaces/16
              schema:
                "$ref": "#/components/schemas/board_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/board_request"
    delete:
      summary: delete board
      tags:
      - Boards
      responses:
        '204':
          description: successful
  "/api/boards/{id}/user_tasks":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: list current user tasks including board, lists, tags, users and author
      tags:
      - Boards
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 18
                    name: Iodine
                    colour: "#4d5577"
                    workspace_id: 18
                    created_at: '2022-11-15T17:30:46.793Z'
                    updated_at: '2022-11-15T17:30:46.793Z'
                    deleted_at:
                    url: http://www.example.com/api/boards/18
                    workspace_url: http://www.example.com/api/workspaces/18
                    lists: []
              schema:
                "$ref": "#/components/schemas/board_response"
  "/api/boards/recently_viewed":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: list current user recently viewed boards (max 6)
      tags:
      - Boards
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value: []
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/board_response"
  "/api/tasks/{id}/comments":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Task id
      required: true
      schema:
        type: string
    get:
      summary: List task's comments
      tags:
      - Comments
      parameters:
      - name: with_author
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful with `with_author=true`:
                  summary: successful with `with_author=true`
                  value:
                  - id: 5
                    body: |-
                      ### Maxime
                      Saepe et atque.
                      # Explicabo
                      Hic facere corporis. Consequatur ea suscipit. Labore sed aut.
                      Eveniet sed nulla. Porro est odio. Incidunt dolores ~qui.~
                    deleted_at:
                    author_id: 22
                    task_id: 2
                    created_at: '2022-11-15T17:30:46.932Z'
                    updated_at: '2022-11-15T17:30:46.932Z'
                    url: http://www.example.com/api/comments/5
                    author:
                      id: 22
                      name: Melinda Leuschke
                      avatar_url: https://www.gravatar.com/avatar/0b46e98e6a24e4298b33915346725965
                      role: guest
                      url: http://www.example.com/api/users/22
                      email: melinda_leuschke.1668533446@example.com
                      created_at: '2022-11-15T17:30:46.917Z'
                      updated_at: '2022-11-15T17:30:46.917Z'
                  - id: 4
                    body: "# Similique\nQuo tenetur sit. Nemo soluta labore. Aut sunt
                      incidunt.\n0. Laborum. \n1. Laudantium. \n2. Odit. \n3. Sunt.
                      \n4. Libero. \n5. Et. \n"
                    deleted_at:
                    author_id: 22
                    task_id: 2
                    created_at: '2022-11-15T17:30:46.930Z'
                    updated_at: '2022-11-15T17:30:46.930Z'
                    url: http://www.example.com/api/comments/4
                    author:
                      id: 22
                      name: Melinda Leuschke
                      avatar_url: https://www.gravatar.com/avatar/0b46e98e6a24e4298b33915346725965
                      role: guest
                      url: http://www.example.com/api/users/22
                      email: melinda_leuschke.1668533446@example.com
                      created_at: '2022-11-15T17:30:46.917Z'
                      updated_at: '2022-11-15T17:30:46.917Z'
                  - id: 3
                    body: |-
                      ###### Saepe
                      Ratione nostrum explicabo. Consequatur incidunt dolor.
                      `Veritatis.`
                    deleted_at:
                    author_id: 22
                    task_id: 2
                    created_at: '2022-11-15T17:30:46.929Z'
                    updated_at: '2022-11-15T17:30:46.929Z'
                    url: http://www.example.com/api/comments/3
                    author:
                      id: 22
                      name: Melinda Leuschke
                      avatar_url: https://www.gravatar.com/avatar/0b46e98e6a24e4298b33915346725965
                      role: guest
                      url: http://www.example.com/api/users/22
                      email: melinda_leuschke.1668533446@example.com
                      created_at: '2022-11-15T17:30:46.917Z'
                      updated_at: '2022-11-15T17:30:46.917Z'
                  - id: 2
                    body: |-
                      ### Sapiente
                      Minima dicta sed. Fugiat voluptatem voluptatibus.
                      aliquam | numquam | sequi
                      ---- | ---- | ----
                      rerum | libero | sunt
                      earum | consequatur | dolores
                    deleted_at:
                    author_id: 22
                    task_id: 2
                    created_at: '2022-11-15T17:30:46.928Z'
                    updated_at: '2022-11-15T17:30:46.928Z'
                    url: http://www.example.com/api/comments/2
                    author:
                      id: 22
                      name: Melinda Leuschke
                      avatar_url: https://www.gravatar.com/avatar/0b46e98e6a24e4298b33915346725965
                      role: guest
                      url: http://www.example.com/api/users/22
                      email: melinda_leuschke.1668533446@example.com
                      created_at: '2022-11-15T17:30:46.917Z'
                      updated_at: '2022-11-15T17:30:46.917Z'
                  - id: 1
                    body: |-
                      ##### Sequi
                      Sit iste nemo. Magni pariatur nesciunt. Velit omnis quia.
                      ###### Ut
                    deleted_at:
                    author_id: 22
                    task_id: 2
                    created_at: '2022-11-15T17:30:46.926Z'
                    updated_at: '2022-11-15T17:30:46.926Z'
                    url: http://www.example.com/api/comments/1
                    author:
                      id: 22
                      name: Melinda Leuschke
                      avatar_url: https://www.gravatar.com/avatar/0b46e98e6a24e4298b33915346725965
                      role: guest
                      url: http://www.example.com/api/users/22
                      email: melinda_leuschke.1668533446@example.com
                      created_at: '2022-11-15T17:30:46.917Z'
                      updated_at: '2022-11-15T17:30:46.917Z'
                successful:
                  summary: successful
                  value:
                  - id: 10
                    body: |-
                      ## Dolorem
                      Quae neque repellendus. Omnis ab non. Est et repellendus.
                      #### Cum
                    deleted_at:
                    author_id: 25
                    task_id: 3
                    created_at: '2022-11-15T17:30:46.987Z'
                    updated_at: '2022-11-15T17:30:46.987Z'
                    url: http://www.example.com/api/comments/10
                  - id: 9
                    body: |-
                      ## Qui
                      Rerum amet fugiat. Rerum illo natus.
                      ```ruby
                      Hic.
                      ```
                    deleted_at:
                    author_id: 25
                    task_id: 3
                    created_at: '2022-11-15T17:30:46.986Z'
                    updated_at: '2022-11-15T17:30:46.986Z'
                    url: http://www.example.com/api/comments/9
                  - id: 8
                    body: "###### Sunt\nConsequuntur harum exercitationem.\n* Saepe.
                      \n* Dolores. \n"
                    deleted_at:
                    author_id: 25
                    task_id: 3
                    created_at: '2022-11-15T17:30:46.985Z'
                    updated_at: '2022-11-15T17:30:46.985Z'
                    url: http://www.example.com/api/comments/8
                  - id: 7
                    body: |-
                      ## Voluptatum
                      Dolor doloremque pariatur. Ab natus repellat.
                      quia | qui | est
                      ---- | ---- | ----
                      ut | ut | molestiae
                      rerum | nihil | et
                    deleted_at:
                    author_id: 25
                    task_id: 3
                    created_at: '2022-11-15T17:30:46.984Z'
                    updated_at: '2022-11-15T17:30:46.984Z'
                    url: http://www.example.com/api/comments/7
                  - id: 6
                    body: "#### Soluta\nPlaceat tempore qui.\n0. Est. \n1. Officia.
                      \n2. Molestias. \n3. Enim. \n"
                    deleted_at:
                    author_id: 25
                    task_id: 3
                    created_at: '2022-11-15T17:30:46.982Z'
                    updated_at: '2022-11-15T17:30:46.982Z'
                    url: http://www.example.com/api/comments/6
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/comment_response"
  "/api/lists":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: List lists
      tags:
      - Lists
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - id: 9
                    name: orange
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 28
                    created_at: '2022-11-15T17:30:47.006Z'
                    updated_at: '2022-11-15T17:30:47.006Z'
                    url: http://www.example.com/api/lists/9
                    board_url: http://www.example.com/api/boards/28
                  - id: 10
                    name: raspberry
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 29
                    created_at: '2022-11-15T17:30:47.009Z'
                    updated_at: '2022-11-15T17:30:47.009Z'
                    url: http://www.example.com/api/lists/10
                    board_url: http://www.example.com/api/boards/29
                  - id: 11
                    name: grey
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 30
                    created_at: '2022-11-15T17:30:47.012Z'
                    updated_at: '2022-11-15T17:30:47.012Z'
                    url: http://www.example.com/api/lists/11
                    board_url: http://www.example.com/api/boards/30
                  - id: 12
                    name: periwinkle
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 31
                    created_at: '2022-11-15T17:30:47.015Z'
                    updated_at: '2022-11-15T17:30:47.015Z'
                    url: http://www.example.com/api/lists/12
                    board_url: http://www.example.com/api/boards/31
                  - id: 13
                    name: byzantium
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 32
                    created_at: '2022-11-15T17:30:47.017Z'
                    updated_at: '2022-11-15T17:30:47.017Z'
                    url: http://www.example.com/api/lists/13
                    board_url: http://www.example.com/api/boards/32
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/list_response"
    post:
      summary: Create List
      tags:
      - Lists
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 14
                    name: New List
                    pos: 1212.0
                    visible: false
                    deleted_at:
                    board_id: 33
                    created_at: '2022-11-15T17:30:47.056Z'
                    updated_at: '2022-11-15T17:30:47.056Z'
                    url: http://www.example.com/api/lists/14
                    board_url: http://www.example.com/api/boards/33
              schema:
                "$ref": "#/components/schemas/list_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/list_request"
  "/api/lists/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show List
      tags:
      - Lists
      parameters:
      - name: tasks
        in: query
        type: string
        schema:
          "$ref": "#/components/schemas/include_associated_enum"
        required: false
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful with `tasks=all`:
                  summary: successful with `tasks=all`
                  value:
                    id: 15
                    name: lime
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 34
                    created_at: '2022-11-15T17:30:47.063Z'
                    updated_at: '2022-11-15T17:30:47.063Z'
                    url: http://www.example.com/api/lists/15
                    board_url: http://www.example.com/api/boards/34
                    tasks:
                    - id: 4
                      name: Bat Out of Hell
                      pos: 65536.0
                      priority: very_low
                      spent_time: 0
                      points: 4
                      list_id: 15
                      deleted_at:
                      url: http://www.example.com/api/tasks/4
                      list_url: http://www.example.com/api/lists/15
                      users:
                      - id: 30
                        name: Sidney Carroll
                        avatar_url: https://www.gravatar.com/avatar/e21290acfb5c8b75a1310cb4655264cf
                        role: guest
                        url: http://www.example.com/api/users/30
                      - id: 31
                        name: Jonathan Macejkovic
                        avatar_url: https://www.gravatar.com/avatar/06a743a714d9b539bd52a9af662c9242
                        role: developer
                        url: http://www.example.com/api/users/31
                      tags:
                      - id: 2
                        name: Retail
                        colour: "#a74704"
                        url: http://www.example.com/api/tags/2
                      - id: 3
                        name: Real-Estate
                        colour: "#c59f68"
                        url: http://www.example.com/api/tags/3
                    - id: 5
                      name: Hands All Over
                      pos: 65536.0
                      priority: low
                      spent_time: 0
                      points: 1
                      list_id: 15
                      deleted_at: '2022-11-15T17:30:47.099Z'
                      url: http://www.example.com/api/tasks/5
                      list_url: http://www.example.com/api/lists/15
                      users: []
                      tags: []
                successful with `tasks=visible`:
                  summary: successful with `tasks=visible`
                  value:
                    id: 18
                    name: taupe
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 39
                    created_at: '2022-11-15T17:30:47.129Z'
                    updated_at: '2022-11-15T17:30:47.129Z'
                    url: http://www.example.com/api/lists/18
                    board_url: http://www.example.com/api/boards/39
                    tasks:
                    - id: 6
                      name: Backstreet's Back
                      pos: 65536.0
                      priority: very_low
                      spent_time: 0
                      points: 5
                      list_id: 18
                      deleted_at:
                      url: http://www.example.com/api/tasks/6
                      list_url: http://www.example.com/api/lists/18
                      users:
                      - id: 35
                        name: Lavera Kertzmann
                        avatar_url: https://www.gravatar.com/avatar/d1eab3c9edfd6b28806351e7772b5889
                        role: manager
                        url: http://www.example.com/api/users/35
                      - id: 36
                        name: Tracee Davis
                        avatar_url: https://www.gravatar.com/avatar/c5d5ba299f39b18204bee66bfe7e0aea
                        role: regular
                        url: http://www.example.com/api/users/36
                      tags:
                      - id: 4
                        name: Consulting
                        colour: "#db2917"
                        url: http://www.example.com/api/tags/4
                    - id: 7
                      name: Jagged Little Pill
                      pos: 65536.0
                      priority: low
                      spent_time: 0
                      points: 5
                      list_id: 18
                      deleted_at:
                      url: http://www.example.com/api/tasks/7
                      list_url: http://www.example.com/api/lists/18
                      users: []
                      tags: []
                successful with `tasks=archived`:
                  summary: successful with `tasks=archived`
                  value:
                    id: 21
                    name: coffee
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 43
                    created_at: '2022-11-15T17:30:47.185Z'
                    updated_at: '2022-11-15T17:30:47.185Z'
                    url: http://www.example.com/api/lists/21
                    board_url: http://www.example.com/api/boards/43
                    tasks:
                    - id: 8
                      name: 'Titanic: Music from the Motion Picture'
                      pos: 65536.0
                      priority: very_high
                      spent_time: 0
                      points: 4
                      list_id: 21
                      deleted_at: '2022-11-15T17:30:47.198Z'
                      url: http://www.example.com/api/tasks/8
                      list_url: http://www.example.com/api/lists/21
                      users: []
                      tags: []
                    - id: 9
                      name: '21'
                      pos: 65536.0
                      priority: high
                      spent_time: 0
                      points: 1
                      list_id: 21
                      deleted_at: '2022-11-15T17:30:47.210Z'
                      url: http://www.example.com/api/tasks/9
                      list_url: http://www.example.com/api/lists/21
                      users:
                      - id: 41
                        name: Pearlie Kunde Esq.
                        avatar_url: https://www.gravatar.com/avatar/cadc293dcbc79d45189c4ac0f7b850c1
                        role: manager
                        url: http://www.example.com/api/users/41
                      tags:
                      - id: 5
                        name: Community-Services
                        colour: "#0380ed"
                        url: http://www.example.com/api/tags/5
                successful:
                  summary: successful
                  value:
                    id: 24
                    name: indigo
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 47
                    created_at: '2022-11-15T17:30:47.243Z'
                    updated_at: '2022-11-15T17:30:47.243Z'
                    url: http://www.example.com/api/lists/24
                    board_url: http://www.example.com/api/boards/47
              schema:
                "$ref": "#/components/schemas/list_response"
    put:
      summary: Update list
      tags:
      - Lists
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 25
                    name: New Name
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 48
                    created_at: '2022-11-15T17:30:47.262Z'
                    updated_at: '2022-11-15T17:30:47.276Z'
                    url: http://www.example.com/api/lists/25
                    board_url: http://www.example.com/api/boards/48
              schema:
                "$ref": "#/components/schemas/list_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/list_request"
    delete:
      summary: Delete list
      tags:
      - Lists
      responses:
        '204':
          description: successful
  "/api/script_runs":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: List script runs
      tags:
      - ScriptRuns
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - id: 1
                    script_id: 1
                    input: puts 'Hello world'
                    output: Hello world
                    initiator_id: 48
                    url: http://www.example.com/api/script_runs/1
                  - id: 2
                    script_id: 2
                    input: puts 'Hello world'
                    output: Hello world
                    initiator_id: 50
                    url: http://www.example.com/api/script_runs/2
                  - id: 3
                    script_id: 3
                    input: puts 'Hello world'
                    output: Hello world
                    initiator_id: 52
                    url: http://www.example.com/api/script_runs/3
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/script_run_response"
  "/api/scripts/{id}/script_runs":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Script id
      required: true
      schema:
        type: string
    get:
      summary: List script's script runs
      tags:
      - ScriptRuns
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - id: 4
                    script_id: 4
                    input: puts 'Hello world'
                    output: Hello world
                    initiator_id: 56
                    url: http://www.example.com/api/script_runs/4
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/script_run_response"
  "/api/script_runs/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show script run
      tags:
      - ScriptRuns
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 5
                    script_id: 5
                    input: puts 'Hello world'
                    output: Hello world
                    initiator_id: 60
                    url: http://www.example.com/api/script_runs/5
              schema:
                "$ref": "#/components/schemas/script_run_response"
    put:
      summary: Update script run
      tags:
      - ScriptRuns
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 6
                    script_id: 6
                    input: puts 'Hello world'
                    output: example output
                    initiator_id: 64
                    url: http://www.example.com/api/script_runs/6
              schema:
                "$ref": "#/components/schemas/script_run_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/script_run_request"
  "/api/script_triggers":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    post:
      summary: Create script trigger
      tags:
      - Script triggers
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 1
                    script_id: 7
                    subject_type: DB::Task
                    subject_id: 10
                    action: destroy
                    url: http://www.example.com/api/script_triggers/1
              schema:
                "$ref": "#/components/schemas/script_trigger_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/script_trigger_request"
  "/api/script_triggers/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show script trigger
      tags:
      - Script triggers
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 2
                    script_id: 8
                    subject_type:
                    subject_id:
                    action: create
                    url: http://www.example.com/api/script_triggers/2
              schema:
                "$ref": "#/components/schemas/script_trigger_response"
    put:
      summary: Update script trigger
      tags:
      - Script triggers
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 3
                    script_id: 9
                    subject_type:
                    subject_id:
                    action: destroy
                    url: http://www.example.com/api/script_triggers/3
              schema:
                "$ref": "#/components/schemas/script_trigger_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/script_trigger_request"
    delete:
      summary: Delete script_trigger
      tags:
      - Script triggers
      responses:
        '204':
          description: successful
  "/api/scripts":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: List scripts
      tags:
      - Scripts
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - id: 11
                    content: puts 'hello world'
                    name: My first Lambdee Script
                    description: Description of the script
                    author_id: 80
                    url: http://www.example.com/api/scripts/11
                  - id: 12
                    content: puts 'hello world'
                    name: My first Lambdee Script
                    description: Description of the script
                    author_id: 81
                    url: http://www.example.com/api/scripts/12
                  - id: 13
                    content: puts 'hello world'
                    name: My first Lambdee Script
                    description: Description of the script
                    author_id: 82
                    url: http://www.example.com/api/scripts/13
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/script_response"
    post:
      summary: Create Script
      tags:
      - Scripts
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 14
                    content: puts 'Hello world!'
                    name: New Script
                    description: What script does
                    author_id: 85
                    url: http://www.example.com/api/scripts/14
                    script_triggers:
                    - id: 5
                      script_id: 14
                      subject_type:
                      subject_id:
                      action: create
                      url: http://www.example.com/api/script_triggers/5
                    - id: 6
                      script_id: 14
                      subject_type: DB::Task
                      subject_id:
                      action: update
                      url: http://www.example.com/api/script_triggers/6
                    - id: 7
                      script_id: 14
                      subject_type: DB::Task
                      subject_id: 11
                      action: destroy
                      url: http://www.example.com/api/script_triggers/7
              schema:
                "$ref": "#/components/schemas/script_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/script_request"
  "/api/scripts/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show Script
      tags:
      - Scripts
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 15
                    content: puts 'hello world'
                    name: My first Lambdee Script
                    description: Description of the script
                    author_id: 88
                    url: http://www.example.com/api/scripts/15
                    script_triggers: []
              schema:
                "$ref": "#/components/schemas/script_response"
    put:
      summary: Update Script
      tags:
      - Scripts
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 16
                    content: puts 'hello world'
                    name: New Name
                    description: Description of the script
                    author_id: 91
                    url: http://www.example.com/api/scripts/16
                    script_triggers:
                    - id: 9
                      script_id: 16
                      subject_type:
                      subject_id:
                      action: create
                      url: http://www.example.com/api/script_triggers/9
              schema:
                "$ref": "#/components/schemas/script_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/script_request"
    delete:
      summary: Delete script
      tags:
      - Scripts
      responses:
        '204':
          description: successful
  "/api/boards/{id}/sprints":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Board id
      required: true
      schema:
        type: string
    get:
      summary: List board's sprints
      tags:
      - Sprints
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - id: 1
                    board_id: 52
                    name: Lismore
                    description: Error ut non. Numquam quia illum. Error qui sed.
                    started_at: '2022-11-15T17:30:47.696Z'
                    expected_end_at: '2022-11-22T17:30:47.696Z'
                    ended_at:
                    final_list_name: Done
                    url: http://www.example.com/api/sprints/1
                  - id: 2
                    board_id: 52
                    name: Brisbane
                    description: Quo vero expedita. Sunt reiciendis quae. Quam iusto
                      ut.
                    started_at: '2022-11-15T17:30:47.700Z'
                    expected_end_at: '2022-11-22T17:30:47.700Z'
                    ended_at:
                    final_list_name: Done
                    url: http://www.example.com/api/sprints/2
                  - id: 3
                    board_id: 52
                    name: Cairns
                    description: Nostrum vel sapiente. Omnis doloremque optio. Et
                      aut consequatur.
                    started_at: '2022-11-15T17:30:47.702Z'
                    expected_end_at: '2022-11-22T17:30:47.702Z'
                    ended_at:
                    final_list_name: Done
                    url: http://www.example.com/api/sprints/3
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/sprint_response"
  "/api/sprints":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    post:
      summary: Create sprint
      tags:
      - Sprints
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 4
                    board_id: 53
                    name: New Sprint
                    description: Example description of new sprint
                    started_at: '2022-11-15T17:30:47.743Z'
                    expected_end_at: '2025-12-11T23:00:00.000Z'
                    ended_at:
                    final_list_name: Done
                    url: http://www.example.com/api/sprints/4
              schema:
                "$ref": "#/components/schemas/sprint_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/sprint_request"
  "/api/sprints/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    - name: tasks
      in: query
      example: all
      required: false
      schema:
        type: string
    get:
      summary: Show Sprint
      tags:
      - Sprints
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful with `tasks=all`:
                  summary: successful with `tasks=all`
                  value:
                    id: 5
                    board_id: 54
                    name: Adelaide
                    description: Eum ad ut. Occaecati non molestiae. Sequi ut minus.
                    started_at: '2022-11-15T17:30:47.752Z'
                    expected_end_at: '2022-11-22T17:30:47.752Z'
                    ended_at:
                    final_list_name: Done
                    url: http://www.example.com/api/sprints/5
                    tasks:
                    - id: 12
                      name: Bat Out of Hell
                      priority: very_low
                      spent_time: 0
                      points: 5
                      added_at: '2022-11-15T17:30:47.770Z'
                      completed_at:
                      start_state: To Do
                      state: Doing
                successful:
                  summary: successful
                  value:
                    id: 6
                    board_id: 56
                    name: Hervey Bay
                    description: Aut vel unde. Nam ea corporis. Non nam earum.
                    started_at: '2022-11-15T17:30:47.795Z'
                    expected_end_at: '2022-11-22T17:30:47.796Z'
                    ended_at:
                    final_list_name: Done
                    url: http://www.example.com/api/sprints/6
              schema:
                "$ref": "#/components/schemas/sprint_response"
    put:
      summary: Update Sprint
      tags:
      - Sprints
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 7
                    board_id: 57
                    name: New Name
                    description: Itaque facere ut. Mollitia accusantium ipsa. Culpa
                      deserunt sed.
                    started_at: '2022-11-15T17:30:47.819Z'
                    expected_end_at: '2022-11-22T17:30:47.819Z'
                    ended_at:
                    final_list_name: Done
                    url: http://www.example.com/api/sprints/7
              schema:
                "$ref": "#/components/schemas/sprint_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/sprint_request"
    delete:
      summary: Delete sprint
      tags:
      - Sprints
      responses:
        '204':
          description: successful
  "/api/sprints/{id}/end":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    put:
      summary: End sprint
      tags:
      - Sprints
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 9
                    board_id: 59
                    name: Mount Gambier
                    description: Numquam sapiente et. Eaque rerum molestias. Aut id
                      doloribus.
                    started_at: '2022-11-15T17:30:47.866Z'
                    expected_end_at: '2022-11-22T17:30:47.866Z'
                    ended_at: '2022-11-15T17:30:47.884Z'
                    final_list_name: Done
                    url: http://www.example.com/api/sprints/9
              schema:
                "$ref": "#/components/schemas/sprint_response"
  "/api/boards/{id}/active_sprint":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show active sprint
      tags:
      - Sprints
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 10
                    board_id: 60
                    name: Mackay
                    description: Veritatis fuga aut. Rerum tenetur modi. Vel ratione
                      placeat.
                    started_at: '2022-11-15T17:30:47.892Z'
                    expected_end_at: '2022-11-22T17:30:47.892Z'
                    ended_at:
                    final_list_name: Done
                    url: http://www.example.com/api/sprints/10
              schema:
                "$ref": "#/components/schemas/sprint_response"
  "/api/sprints/{id}/burn_up_chart":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show data for burn up chart
      tags:
      - Sprints
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - name: Work Scope
                    data:
                      '2022-11-22': 0
                  - name: Completed work
                    data: {}
  "/api/boards/{id}/tags":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Board id
      required: true
      schema:
        type: string
    get:
      summary: List board's tags
      tags:
      - Tags
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - id: 6
                    name: Mining
                    colour: "#17959a"
                    url: http://www.example.com/api/tags/6
                    board_id: 62
                    created_at: '2022-11-15T17:30:47.940Z'
                    updated_at: '2022-11-15T17:30:47.940Z'
                  - id: 7
                    name: Mining
                    colour: "#741014"
                    url: http://www.example.com/api/tags/7
                    board_id: 62
                    created_at: '2022-11-15T17:30:47.941Z'
                    updated_at: '2022-11-15T17:30:47.941Z'
                  - id: 8
                    name: Sales
                    colour: "#48d2c6"
                    url: http://www.example.com/api/tags/8
                    board_id: 62
                    created_at: '2022-11-15T17:30:47.941Z'
                    updated_at: '2022-11-15T17:30:47.941Z'
                  - id: 9
                    name: Administration
                    colour: "#d14f67"
                    url: http://www.example.com/api/tags/9
                    board_id: 62
                    created_at: '2022-11-15T17:30:47.942Z'
                    updated_at: '2022-11-15T17:30:47.942Z'
                  - id: 10
                    name: Real-Estate
                    colour: "#cce3a9"
                    url: http://www.example.com/api/tags/10
                    board_id: 62
                    created_at: '2022-11-15T17:30:47.943Z'
                    updated_at: '2022-11-15T17:30:47.943Z'
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/tag_response"
    post:
      summary: Create tag
      tags:
      - Tags
      parameters:
      - name: id
        in: path
        description: Board id
        required: true
        schema:
          type: string
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 11
                    name: New Tag
                    colour: "#fff000"
                    url: http://www.example.com/api/tags/11
                    board_id: 63
                    created_at: '2022-11-15T17:30:47.980Z'
                    updated_at: '2022-11-15T17:30:47.980Z'
              schema:
                "$ref": "#/components/schemas/tag_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/tag_request"
  "/api/tags":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    post:
      summary: Create tag
      tags:
      - Tags
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 12
                    name: New Tag
                    colour: "#fff000"
                    url: http://www.example.com/api/tags/12
                    board_id: 64
                    created_at: '2022-11-15T17:30:48.010Z'
                    updated_at: '2022-11-15T17:30:48.010Z'
              schema:
                "$ref": "#/components/schemas/tag_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/tag_request"
  "/api/tasks/{id}/tags":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Task id
      required: true
      schema:
        type: string
    get:
      summary: List task's tags
      tags:
      - Tags
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - id: 13
                    name: Retail
                    colour: "#c3e1a6"
                    url: http://www.example.com/api/tags/13
                    board_id: 65
                    created_at: '2022-11-15T17:30:48.032Z'
                    updated_at: '2022-11-15T17:30:48.032Z'
                  - id: 14
                    name: Design
                    colour: "#314609"
                    url: http://www.example.com/api/tags/14
                    board_id: 65
                    created_at: '2022-11-15T17:30:48.034Z'
                    updated_at: '2022-11-15T17:30:48.034Z'
                  - id: 15
                    name: Technology
                    colour: "#8e1238"
                    url: http://www.example.com/api/tags/15
                    board_id: 65
                    created_at: '2022-11-15T17:30:48.035Z'
                    updated_at: '2022-11-15T17:30:48.035Z'
                  - id: 16
                    name: Government
                    colour: "#fcac31"
                    url: http://www.example.com/api/tags/16
                    board_id: 65
                    created_at: '2022-11-15T17:30:48.037Z'
                    updated_at: '2022-11-15T17:30:48.037Z'
                  - id: 17
                    name: Accounting
                    colour: "#0eb7b8"
                    url: http://www.example.com/api/tags/17
                    board_id: 65
                    created_at: '2022-11-15T17:30:48.038Z'
                    updated_at: '2022-11-15T17:30:48.038Z'
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/tag_response"
    post:
      summary: Create tag (associated with given task and task's board)
      tags:
      - Tags
      parameters:
      - name: id
        in: path
        description: Task id
        required: true
        schema:
          type: string
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 18
                    name: New Tag
                    colour: "#fff000"
                    url: http://www.example.com/api/tags/18
                    board_id: 66
                    created_at: '2022-11-15T17:30:48.083Z'
                    updated_at: '2022-11-15T17:30:48.083Z'
              schema:
                "$ref": "#/components/schemas/tag_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/tag_request"
  "/api/tags/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show Tags
      tags:
      - Tags
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 19
                    name: Marketing
                    colour: "#5ea9e2"
                    url: http://www.example.com/api/tags/19
                    board_id: 67
                    created_at: '2022-11-15T17:30:48.092Z'
                    updated_at: '2022-11-15T17:30:48.092Z'
              schema:
                "$ref": "#/components/schemas/tag_response"
    put:
      summary: Update Tag
      tags:
      - Tags
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 20
                    name: New Name
                    colour: "#64c7d2"
                    url: http://www.example.com/api/tags/20
                    board_id: 68
                    created_at: '2022-11-15T17:30:48.113Z'
                    updated_at: '2022-11-15T17:30:48.126Z'
              schema:
                "$ref": "#/components/schemas/tag_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/tag_request"
    delete:
      summary: Delete tag
      tags:
      - Tags
      responses:
        '204':
          description: successful
  "/api/tasks":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: List tasks
      tags:
      - Tasks
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - id: 16
                    name: Dangerous
                    pos: 65536.0
                    priority: low
                    spent_time: 0
                    points: 3
                    list_id: 33
                    deleted_at:
                    url: http://www.example.com/api/tasks/16
                    list_url: http://www.example.com/api/lists/33
                    description: |-
                      ###### Explicabo
                      Fugiat ex hic. Illum ea sed. Deserunt dolorem odit. Architecto veritatis ratione. Nulla est adipisci. Ea qui consequatur.
                      Illo aut et. *Qui* vel laboriosam. Reprehenderit quis aut.
                    created_at: '2022-11-15T17:30:48.157Z'
                    updated_at: '2022-11-15T17:30:48.157Z'
                  - id: 17
                    name: Music Box
                    pos: 65536.0
                    priority: high
                    spent_time: 0
                    points: 5
                    list_id: 34
                    deleted_at:
                    url: http://www.example.com/api/tasks/17
                    list_url: http://www.example.com/api/lists/34
                    description: |-
                      ### Dolor
                      Provident quae dolor. Laborum quam quasi. Culpa placeat recusandae. Sed cupiditate velit. Consequatur et quo. Quisquam et sed.
                      `Laborum.`
                    created_at: '2022-11-15T17:30:48.165Z'
                    updated_at: '2022-11-15T17:30:48.165Z'
                  - id: 18
                    name: Born in the U.S.A.
                    pos: 65536.0
                    priority: low
                    spent_time: 0
                    points: 4
                    list_id: 35
                    deleted_at:
                    url: http://www.example.com/api/tasks/18
                    list_url: http://www.example.com/api/lists/35
                    description: |-
                      ##### Tenetur
                      Blanditiis voluptas ipsa. Voluptatem voluptate eos. Aut eum sunt. Error laboriosam vero.
                      placeat | labore | voluptatem
                      ---- | ---- | ----
                      autem | adipisci | molestiae
                      similique | doloribus | delectus
                    created_at: '2022-11-15T17:30:48.172Z'
                    updated_at: '2022-11-15T17:30:48.172Z'
                  - id: 19
                    name: Back in Black
                    pos: 65536.0
                    priority: medium
                    spent_time: 0
                    points: 2
                    list_id: 36
                    deleted_at:
                    url: http://www.example.com/api/tasks/19
                    list_url: http://www.example.com/api/lists/36
                    description: "### Eos\nQuis sint culpa. Soluta consectetur sunt.
                      Quidem praesentium aliquid. Nulla id et. Unde illo sed. Nemo
                      consequatur quam.\n0. Iure. \n1. Rerum. \n"
                    created_at: '2022-11-15T17:30:48.180Z'
                    updated_at: '2022-11-15T17:30:48.180Z'
                  - id: 20
                    name: 'Gold: Greatest Hits'
                    pos: 65536.0
                    priority: very_low
                    spent_time: 0
                    points: 1
                    list_id: 37
                    deleted_at:
                    url: http://www.example.com/api/tasks/20
                    list_url: http://www.example.com/api/lists/37
                    description: |-
                      # Vitae
                      Quam quod necessitatibus. Labore qui eos. Ut voluptas et. Ex voluptatem consequatur.
                      ### Repellat
                      Rem ipsa consequatur. Maiores illo qui. Ut totam rem.
                      Odit voluptatum _ex._ Quos nesciunt ratione. Eum autem vel.
                    created_at: '2022-11-15T17:30:48.188Z'
                    updated_at: '2022-11-15T17:30:48.188Z'
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/task_response"
    post:
      summary: Create Task
      tags:
      - Tasks
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 21
                    name: New Task
                    pos: 65536.0
                    priority:
                    spent_time: 0
                    points:
                    list_id: 38
                    deleted_at:
                    url: http://www.example.com/api/tasks/21
                    list_url: http://www.example.com/api/lists/38
                    description:
                    created_at: '2022-11-15T17:30:48.229Z'
                    updated_at: '2022-11-15T17:30:48.229Z'
              schema:
                "$ref": "#/components/schemas/task_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/task_request"
  "/api/tasks/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Task id
      required: true
      schema:
        type: string
    get:
      summary: Show Taks
      parameters:
      - name: include_associations
        in: query
        required: false
        description: If true, extended object with all associations is returned.
        schema:
          type: string
      tags:
      - Tasks
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful with `include_associations=true`:
                  summary: successful with `include_associations=true`
                  value:
                    id: 22
                    name: Daydream
                    pos: 65536.0
                    priority: medium
                    spent_time: 0
                    points: 3
                    list_id: 39
                    deleted_at:
                    url: http://www.example.com/api/tasks/22
                    list_url: http://www.example.com/api/lists/39
                    description: |-
                      #### Alias
                      Placeat et voluptate. Eum quis consequatur. Dolorum necessitatibus omnis. Sunt aut eos.
                      ### Tempora
                      Quasi in autem. Dolorem exercitationem eos. Nostrum et nam.
                      ## Ab
                    created_at: '2022-11-15T17:30:48.242Z'
                    updated_at: '2022-11-15T17:30:48.242Z'
                    list:
                      id: 39
                      name: apricot
                      pos: 65536.0
                      visible: false
                      deleted_at:
                      board_id: 76
                      created_at: '2022-11-15T17:30:48.238Z'
                      updated_at: '2022-11-15T17:30:48.238Z'
                      url: http://www.example.com/api/lists/39
                      board_url: http://www.example.com/api/boards/76
                    author:
                      id: 142
                      name: Alden Kuvalis
                      avatar_url: https://www.gravatar.com/avatar/45a088a0cb48a49c8b6fb349a4995d89
                      role: guest
                      url: http://www.example.com/api/users/142
                      email: alden_kuvalis.1668533448@example.com
                      created_at: '2022-11-15T17:30:48.241Z'
                      updated_at: '2022-11-15T17:30:48.241Z'
                    users:
                    - id: 143
                      name: Elijah Gutkowski VM
                      avatar_url: https://www.gravatar.com/avatar/12179890e87aece8745774928ea2c907
                      role: guest
                      url: http://www.example.com/api/users/143
                      email: elijah_gutkowski_vm.1668533448@example.com
                      created_at: '2022-11-15T17:30:48.246Z'
                      updated_at: '2022-11-15T17:30:48.246Z'
                    - id: 144
                      name: Bart Lubowitz
                      avatar_url: https://www.gravatar.com/avatar/e02fa6845419a849db751f82c1f166c1
                      role: manager
                      url: http://www.example.com/api/users/144
                      email: bart_lubowitz.1668533448@example.com
                      created_at: '2022-11-15T17:30:48.249Z'
                      updated_at: '2022-11-15T17:30:48.249Z'
                    tags:
                    - id: 22
                      name: Hospitality
                      colour: "#578e00"
                      url: http://www.example.com/api/tags/22
                      board_id: 77
                      created_at: '2022-11-15T17:30:48.252Z'
                      updated_at: '2022-11-15T17:30:48.252Z'
                    - id: 23
                      name: Retail
                      colour: "#79730a"
                      url: http://www.example.com/api/tags/23
                      board_id: 78
                      created_at: '2022-11-15T17:30:48.255Z'
                      updated_at: '2022-11-15T17:30:48.255Z'
                    - id: 24
                      name: Banking
                      colour: "#71be3c"
                      url: http://www.example.com/api/tags/24
                      board_id: 79
                      created_at: '2022-11-15T17:30:48.258Z'
                      updated_at: '2022-11-15T17:30:48.258Z'
                successful:
                  summary: successful
                  value:
                    id: 23
                    name: Brothers in Arms
                    pos: 65536.0
                    priority: high
                    spent_time: 0
                    points: 5
                    list_id: 40
                    deleted_at:
                    url: http://www.example.com/api/tasks/23
                    list_url: http://www.example.com/api/lists/40
                    description: |-
                      #### Ipsam
                      Necessitatibus beatae dolores. Qui est sed. Aspernatur atque voluptates. Quod qui incidunt. Soluta voluptas iste.
                      qui | nobis | voluptatum
                      ---- | ---- | ----
                      exercitationem | et | recusandae
                      molestiae | cum | nihil
                    created_at: '2022-11-15T17:30:48.286Z'
                    updated_at: '2022-11-15T17:30:48.286Z'
              schema:
                "$ref": "#/components/schemas/task_response"
    put:
      summary: Update Task
      tags:
      - Tasks
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 24
                    name: New Name
                    pos: 65536.0
                    priority: low
                    spent_time: 0
                    points: 5
                    list_id: 41
                    deleted_at:
                    url: http://www.example.com/api/tasks/24
                    list_url: http://www.example.com/api/lists/41
                    description: |-
                      #### Soluta
                      Natus et minus. Consequatur tempora cumque. Assumenda unde quos.
                      ###### Quasi
                    created_at: '2022-11-15T17:30:48.311Z'
                    updated_at: '2022-11-15T17:30:48.325Z'
              schema:
                "$ref": "#/components/schemas/task_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/task_request"
    delete:
      summary: Delete Task
      tags:
      - Tasks
      responses:
        '204':
          description: successful
  "/api/tasks/{id}/add_time":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Task id
      required: true
      schema:
        type: string
    put:
      summary: Add time
      tags:
      - Tasks
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 26
                    name: "(What's the Story) Morning Glory?"
                    pos: 65536.0
                    priority: high
                    spent_time: 1200
                    points: 2
                    list_id: 43
                    deleted_at:
                    url: http://www.example.com/api/tasks/26
                    list_url: http://www.example.com/api/lists/43
                    description: |-
                      ##### Minima
                      Quis fuga facilis. Aperiam debitis harum. Corporis est voluptas. Debitis et sed. Minus labore ut.
                      ```ruby
                      Illum.
                      ```
                    created_at: '2022-11-15T17:30:48.366Z'
                    updated_at: '2022-11-15T17:30:48.381Z'
        '422':
          description: non integer time
          content:
            application/json:
              examples:
                incorrect unit:
                  summary: incorrect unit
                  value:
                    unit:
                    - is not included in the list
                negative time:
                  summary: negative time
                  value:
                    time:
                    - must be greater than 0
                non integer time:
                  summary: non integer time
                  value:
                    time:
                    - must be greater than 0
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                time:
                  type: integer
                unit:
                  type: string
                  enum: "#<Set: {:day, :hour, :minute, :second}>"
  "/api/tasks/{id}/attach_tag":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Task id
      required: true
      schema:
        type: string
    post:
      summary: Attach Tag
      tags:
      - Tasks
      parameters: []
      responses:
        '204':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                tag_id:
                  type: integer
  "/api/tasks/{id}/detach_tag":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Task id
      required: true
      schema:
        type: string
    post:
      summary: Detach Tag
      tags:
      - Tasks
      parameters: []
      responses:
        '204':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                tag_id:
                  type: integer
  "/api/tasks/{id}/assign_user":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Task id
      required: true
      schema:
        type: string
    post:
      summary: Assign User
      tags:
      - Tasks
      parameters: []
      responses:
        '204':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
  "/api/tasks/{id}/unassign_user":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Task id
      required: true
      schema:
        type: string
    post:
      summary: Unassign User
      tags:
      - Tasks
      parameters: []
      responses:
        '204':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
  "/api/workspaces/{id}/users":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: List users of workspace
      tags:
      - Users
      parameters:
      - name: id
        in: path
        description: Workspace id
        required: true
        schema:
          type: string
      - name: page
        in: query
        required: false
        description: Decides which result page should be returned.
        example: 2
        schema:
          type: integer
      - name: role
        in: query
        required: false
        schema:
          "$ref": "#/components/schemas/user_request/properties/role"
        example: admin
      - name: created_at_from
        in: query
        required: false
        description: Date with format YYYY.MM.DD
        example: 2010.01.25
        schema:
          type: string
      - name: created_at_to
        in: query
        required: false
        description: Date with format YYYY.MM.DD
        example: 2010.01.25
        schema:
          type: string
      - name: search
        in: query
        required: false
        description: Searches for users by name and e-mail.
        example: michael
        schema:
          type: string
      - name: per
        in: query
        required: false
        description: Decides how many entities should be returned per one page. **Works
          only, when `page` param is given.**
        example: 2
        schema:
          type: integer
      - name: limit
        in: query
        required: false
        description: Decides how many entities should be returned.
        example: 3
        schema:
          type: integer
      - name: limit
        in: query
        required: false
        description: Decides how many entities should be returned
        example: 3
        schema:
          type: integer
      responses:
        '200':
          description: successful with pages
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    users:
                    - id: 170
                      name: Fredia Fay MD
                      avatar_url: https://www.gravatar.com/avatar/2531c334c0b322cbd63ba83bb524b5e4
                      role: manager
                      url: http://www.example.com/api/users/170
                      email: fredia_fay_md.1668533448@example.com
                      created_at: '2022-11-15T17:30:48.563Z'
                      updated_at: '2022-11-15T17:30:48.563Z'
                    - id: 171
                      name: Roland Okuneva
                      avatar_url: https://www.gravatar.com/avatar/d1a840b2c05da1f14e68bde532059f6c
                      role: manager
                      url: http://www.example.com/api/users/171
                      email: roland_okuneva.1668533448@example.com
                      created_at: '2022-11-15T17:30:48.572Z'
                      updated_at: '2022-11-15T17:30:48.572Z'
                    - id: 172
                      name: Morris Brekke
                      avatar_url: https://www.gravatar.com/avatar/597c28b2b24d10a15f78a2d4440a71de
                      role: manager
                      url: http://www.example.com/api/users/172
                      email: morris_brekke.1668533448@example.com
                      created_at: '2022-11-15T17:30:48.575Z'
                      updated_at: '2022-11-15T17:30:48.575Z'
                successful with pages:
                  summary: successful with pages
                  value:
                    users:
                    - id: 174
                      name: Robt Gutkowski
                      avatar_url: https://www.gravatar.com/avatar/9958d2d2e3b957f705c22256d2b4f9d7
                      role: manager
                      url: http://www.example.com/api/users/174
                      email: robt_gutkowski.1668533448@example.com
                      created_at: '2022-11-15T17:30:48.603Z'
                      updated_at: '2022-11-15T17:30:48.603Z'
                    - id: 175
                      name: Tawny Turcotte
                      avatar_url: https://www.gravatar.com/avatar/89b0cdc4a9f844fd11b6ecdb1ebdef95
                      role: guest
                      url: http://www.example.com/api/users/175
                      email: tawny_turcotte.1668533448@example.com
                      created_at: '2022-11-15T17:30:48.607Z'
                      updated_at: '2022-11-15T17:30:48.607Z'
                    - id: 176
                      name: Asa O'Kon PhD
                      avatar_url: https://www.gravatar.com/avatar/2b65bfc1c883c687af8bb477d8d91ac0
                      role: guest
                      url: http://www.example.com/api/users/176
                      email: asa_o'kon_ph_d.1668533448@example.com
                      created_at: '2022-11-15T17:30:48.610Z'
                      updated_at: '2022-11-15T17:30:48.610Z'
                    total_pages: 1
              schema:
                "$ref": "#/components/schemas/user_pages_response"
  "/api/users":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: List users
      tags:
      - Users
      parameters:
      - name: role_collection
        in: query
        schema:
          type: array
          items:
            "$ref": "#/components/schemas/user_request/properties/role"
        example:
        - admin
      - name: role
        in: query
        required: false
        schema:
          "$ref": "#/components/schemas/user_request/properties/role"
        example: admin
      - name: created_at_from
        in: query
        required: false
        description: Date with format YYYY.MM.DD
        example: 2010.01.25
        schema:
          type: string
      - name: created_at_to
        in: query
        required: false
        description: Date with format YYYY.MM.DD
        example: 2010.01.25
        schema:
          type: string
      - name: workspace_id
        in: query
        required: false
        example: 1
        schema:
          type: integer
      - name: search
        in: query
        required: false
        description: Searches for users by name and e-mail.
        example: michael
        schema:
          type: string
      - name: page
        in: query
        required: false
        description: Decides which result page should be returned.
        example: 2
        schema:
          type: integer
      - name: per
        in: query
        required: false
        description: Decides how many entities should be returned per one page. **Works
          only, when `page` param is given.**
        example: 2
        schema:
          type: integer
      - name: limit
        in: query
        required: false
        description: Decides how many entities should be returned.
        example: 3
        schema:
          type: integer
      responses:
        '200':
          description: successful with pages
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    users:
                    - id: 178
                      name: Gov. Johnathan Kemmer
                      avatar_url: https://www.gravatar.com/avatar/f86f2b6cda31548f93aff9cb852893b0
                      role: developer
                      url: http://www.example.com/api/users/178
                      email: gov_johnathan_kemmer.1668533448@example.com
                      created_at: '2022-11-15T17:30:48.632Z'
                      updated_at: '2022-11-15T17:30:48.632Z'
                    - id: 179
                      name: Ying Runolfsdottir
                      avatar_url: https://www.gravatar.com/avatar/c039491025a2e8cbfd1001280661784b
                      role: regular
                      url: http://www.example.com/api/users/179
                      email: ying_runolfsdottir.1668533448@example.com
                      created_at: '2022-11-15T17:30:48.634Z'
                      updated_at: '2022-11-15T17:30:48.634Z'
                    - id: 180
                      name: Wynell Schaden
                      avatar_url: https://www.gravatar.com/avatar/9dd4f8e8bb05da61093ee49383397d6f
                      role: guest
                      url: http://www.example.com/api/users/180
                      email: wynell_schaden.1668533448@example.com
                      created_at: '2022-11-15T17:30:48.637Z'
                      updated_at: '2022-11-15T17:30:48.637Z'
                    - id: 181
                      name: Dessie Hansen DC
                      avatar_url: https://www.gravatar.com/avatar/adb67586d52bef5f0aefbbb5596d428f
                      role: regular
                      url: http://www.example.com/api/users/181
                      email: dessie_hansen_dc.1668533448@example.com
                      created_at: '2022-11-15T17:30:48.640Z'
                      updated_at: '2022-11-15T17:30:48.640Z'
                    - id: 182
                      name: Demetrius Balistreri
                      avatar_url: https://www.gravatar.com/avatar/7dd16f29cfe79539644651fd03ab71e5
                      role: regular
                      url: http://www.example.com/api/users/182
                      email: demetrius_balistreri.1668533448@example.com
                      created_at: '2022-11-15T17:30:48.642Z'
                      updated_at: '2022-11-15T17:30:48.642Z'
                    - id: 183
                      name: Rev. Nisha Leffler
                      avatar_url: https://www.gravatar.com/avatar/5e8e303398bc4ca3aa8d7ea684285ce8
                      role: admin
                      url: http://www.example.com/api/users/183
                      email: rev_nisha_leffler.1668533448@example.com
                      created_at: '2022-11-15T17:30:48.645Z'
                      updated_at: '2022-11-15T17:30:48.645Z'
                successful with pages:
                  summary: successful with pages
                  value:
                    users:
                    - id: 184
                      name: Ashanti Bernhard
                      avatar_url: https://www.gravatar.com/avatar/e5163e642c4d5c5853633c3a09c091a3
                      role: regular
                      url: http://www.example.com/api/users/184
                      email: ashanti_bernhard.1668533448@example.com
                      created_at: '2022-11-15T17:30:48.662Z'
                      updated_at: '2022-11-15T17:30:48.662Z'
                    - id: 185
                      name: Ardella Wisoky
                      avatar_url: https://www.gravatar.com/avatar/0cba59ef1f074c2e08332076b24053da
                      role: regular
                      url: http://www.example.com/api/users/185
                      email: ardella_wisoky.1668533448@example.com
                      created_at: '2022-11-15T17:30:48.664Z'
                      updated_at: '2022-11-15T17:30:48.664Z'
                    - id: 186
                      name: Ariel Baumbach DC
                      avatar_url: https://www.gravatar.com/avatar/50db21cf4887f2bb9556e5da88018d20
                      role: manager
                      url: http://www.example.com/api/users/186
                      email: ariel_baumbach_dc.1668533448@example.com
                      created_at: '2022-11-15T17:30:48.667Z'
                      updated_at: '2022-11-15T17:30:48.667Z'
                    - id: 187
                      name: Anton Metz
                      avatar_url: https://www.gravatar.com/avatar/a44f35d49908b3d555a8e520f0f3f83d
                      role: guest
                      url: http://www.example.com/api/users/187
                      email: anton_metz.1668533448@example.com
                      created_at: '2022-11-15T17:30:48.669Z'
                      updated_at: '2022-11-15T17:30:48.669Z'
                    - id: 188
                      name: Liane Moore
                      avatar_url: https://www.gravatar.com/avatar/897a165ab24f517449e4f3176154bb4b
                      role: regular
                      url: http://www.example.com/api/users/188
                      email: liane_moore.1668533448@example.com
                      created_at: '2022-11-15T17:30:48.672Z'
                      updated_at: '2022-11-15T17:30:48.672Z'
                    - id: 189
                      name: Sen. Anastasia Will
                      avatar_url: https://www.gravatar.com/avatar/4b2abdbfd34d759368ae8bb7547571d2
                      role: admin
                      url: http://www.example.com/api/users/189
                      email: sen_anastasia_will.1668533448@example.com
                      created_at: '2022-11-15T17:30:48.674Z'
                      updated_at: '2022-11-15T17:30:48.674Z'
                    total_pages: 1
              schema:
                "$ref": "#/components/schemas/user_pages_response"
    post:
      summary: Create a user
      tags:
      - Users
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 191
                    name: New User
                    created_at: '2022-11-15T17:30:48.709Z'
                    updated_at: '2022-11-15T17:30:48.709Z'
                    email: new_user@example.com
                    role: developer
                    deleted_at:
                    recent_boards: []
              schema:
                "$ref": "#/components/schemas/user_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/user_request"
    put:
      summary: Update current user
      tags:
      - Users
      parameters: []
      responses:
        '204':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/user_update_request"
    delete:
      summary: Delete current user
      tags:
      - Users
      responses:
        '204':
          description: successful
  "/api/users/current":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: Show the currently signed in user
      tags:
      - Users
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 194
                    name: Jerold Vandervort
                    avatar_url: https://www.gravatar.com/avatar/41fcc9b19fdebaa3976a6c2902e01fc3
                    role: admin
                    url: http://www.example.com/api/users/194
                    email: jerold_vandervort.1668533448@example.com
                    created_at: '2022-11-15T17:30:48.751Z'
                    updated_at: '2022-11-15T17:30:48.751Z'
              schema:
                "$ref": "#/components/schemas/user_response"
  "/api/users/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show a user
      tags:
      - Users
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 195
                    name: Tarra Bogisich
                    avatar_url: https://www.gravatar.com/avatar/9c3c5992176c634029f9114c23c23b7d
                    role: manager
                    url: http://www.example.com/api/users/195
                    email: tarra_bogisich.1668533448@example.com
                    created_at: '2022-11-15T17:30:48.766Z'
                    updated_at: '2022-11-15T17:30:48.766Z'
              schema:
                "$ref": "#/components/schemas/user_response"
  "/api/users/sign_in":
    post:
      summary: Sign in
      tags:
      - Users
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 197
                    name: Derick Herzog
                    created_at: '2022-11-15T17:30:48.784Z'
                    updated_at: '2022-11-15T17:30:48.784Z'
                    email: email@example.com
                    role: regular
                    deleted_at:
                    recent_boards: []
              schema:
                "$ref": "#/components/schemas/user_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/user_sign_in_request"
  "/api/users/sign_out":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    delete:
      summary: Sign out
      tags:
      - Users
      responses:
        '204':
          description: successful
  "/api/workspaces":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: list workspaces
      tags:
      - Workspaces
      security:
      - Bearer: {}
      parameters:
      - name: limit
        in: query
        description: Decides how many entities should be returned
        example: 3
        required: false
        schema:
          type: integer
      - name: boards
        in: query
        type: string
        schema:
          "$ref": "#/components/schemas/include_associated_enum"
        required: false
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful with `boards=all`:
                  summary: successful with `boards=all`
                  value:
                  - id: 95
                    name: Duobam
                    created_at: '2022-11-15T17:30:48.822Z'
                    updated_at: '2022-11-15T17:30:48.822Z'
                    deleted_at:
                    url: http://www.example.com/api/workspaces/95
                    boards:
                    - id: 93
                      name: Cadmium
                      colour: "#5d6602"
                      workspace_id: 95
                      created_at: '2022-11-15T17:30:48.824Z'
                      updated_at: '2022-11-15T17:30:48.824Z'
                      deleted_at:
                      url: http://www.example.com/api/boards/93
                      workspace_url: http://www.example.com/api/workspaces/95
                    - id: 94
                      name: Neptunium
                      colour: "#882fee"
                      workspace_id: 95
                      created_at: '2022-11-15T17:30:48.825Z'
                      updated_at: '2022-11-15T17:30:48.825Z'
                      deleted_at:
                      url: http://www.example.com/api/boards/94
                      workspace_url: http://www.example.com/api/workspaces/95
                    - id: 95
                      name: Promethium
                      colour: "#6294e5"
                      workspace_id: 95
                      created_at: '2022-11-15T17:30:48.826Z'
                      updated_at: '2022-11-15T17:30:48.826Z'
                      deleted_at:
                      url: http://www.example.com/api/boards/95
                      workspace_url: http://www.example.com/api/workspaces/95
                    - id: 96
                      name: Manganese
                      colour: "#b3a697"
                      workspace_id: 95
                      created_at: '2022-11-15T17:30:48.826Z'
                      updated_at: '2022-11-15T17:30:48.826Z'
                      deleted_at:
                      url: http://www.example.com/api/boards/96
                      workspace_url: http://www.example.com/api/workspaces/95
                    - id: 97
                      name: Roentgenium
                      colour: "#36afa6"
                      workspace_id: 95
                      created_at: '2022-11-15T17:30:48.827Z'
                      updated_at: '2022-11-15T17:30:48.827Z'
                      deleted_at:
                      url: http://www.example.com/api/boards/97
                      workspace_url: http://www.example.com/api/workspaces/95
                  - id: 96
                    name: Sonair
                    created_at: '2022-11-15T17:30:48.828Z'
                    updated_at: '2022-11-15T17:30:48.828Z'
                    deleted_at:
                    url: http://www.example.com/api/workspaces/96
                    boards: []
                successful:
                  summary: successful
                  value:
                  - id: 97
                    name: Flexidy
                    created_at: '2022-11-15T17:30:48.854Z'
                    updated_at: '2022-11-15T17:30:48.854Z'
                    deleted_at:
                    url: http://www.example.com/api/workspaces/97
                  - id: 98
                    name: Namfix
                    created_at: '2022-11-15T17:30:48.856Z'
                    updated_at: '2022-11-15T17:30:48.856Z'
                    deleted_at:
                    url: http://www.example.com/api/workspaces/98
                  - id: 99
                    name: Stim
                    created_at: '2022-11-15T17:30:48.858Z'
                    updated_at: '2022-11-15T17:30:48.858Z'
                    deleted_at:
                    url: http://www.example.com/api/workspaces/99
                  - id: 100
                    name: Daltfresh
                    created_at: '2022-11-15T17:30:48.859Z'
                    updated_at: '2022-11-15T17:30:48.859Z'
                    deleted_at:
                    url: http://www.example.com/api/workspaces/100
                  - id: 101
                    name: Asoka
                    created_at: '2022-11-15T17:30:48.861Z'
                    updated_at: '2022-11-15T17:30:48.861Z'
                    deleted_at:
                    url: http://www.example.com/api/workspaces/101
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/workspace_response"
    post:
      summary: create workspace
      tags:
      - Workspaces
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 102
                    name: New Workspace
                    created_at: '2022-11-15T17:30:48.895Z'
                    updated_at: '2022-11-15T17:30:48.895Z'
                    deleted_at:
                    url: http://www.example.com/api/workspaces/102
              schema:
                "$ref": "#/components/schemas/workspace_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/workspace_request"
  "/api/workspaces/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show workspace
      parameters:
      - name: boards
        in: query
        type: string
        schema:
          "$ref": "#/components/schemas/include_associated_enum"
        required: false
      tags:
      - Workspaces
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful with `boards=all`:
                  summary: successful with `boards=all`
                  value:
                    id: 103
                    name: Flowdesk
                    created_at: '2022-11-15T17:30:48.905Z'
                    updated_at: '2022-11-15T17:30:48.905Z'
                    deleted_at:
                    url: http://www.example.com/api/workspaces/103
                    boards:
                    - id: 98
                      name: Cadmium
                      colour: "#1cbed8"
                      workspace_id: 103
                      created_at: '2022-11-15T17:30:48.907Z'
                      updated_at: '2022-11-15T17:30:48.907Z'
                      deleted_at:
                      url: http://www.example.com/api/boards/98
                      workspace_url: http://www.example.com/api/workspaces/103
                    - id: 99
                      name: Iron
                      colour: "#00657f"
                      workspace_id: 103
                      created_at: '2022-11-15T17:30:48.909Z'
                      updated_at: '2022-11-15T17:30:48.910Z'
                      deleted_at:
                      url: http://www.example.com/api/boards/99
                      workspace_url: http://www.example.com/api/workspaces/103
                successful:
                  summary: successful
                  value:
                    id: 106
                    name: Voyatouch
                    created_at: '2022-11-15T17:30:48.930Z'
                    updated_at: '2022-11-15T17:30:48.930Z'
                    deleted_at:
                    url: http://www.example.com/api/workspaces/106
              schema:
                "$ref": "#/components/schemas/workspace_response"
    put:
      summary: update workspace
      tags:
      - Workspaces
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 107
                    name: New Name
                    created_at: '2022-11-15T17:30:48.949Z'
                    updated_at: '2022-11-15T17:30:48.961Z'
                    deleted_at:
                    url: http://www.example.com/api/workspaces/107
              schema:
                "$ref": "#/components/schemas/workspace_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/workspace_request"
    delete:
      summary: delete workspace
      tags:
      - Workspaces
      responses:
        '204':
          description: successful
  "/api/workspaces/{id}/assign_user":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Workspace id
      required: true
      schema:
        type: string
    post:
      summary: Assign User
      tags:
      - Workspaces
      parameters: []
      responses:
        '204':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
  "/api/workspaces/{id}/unassign_user":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Workspace id
      required: true
      schema:
        type: string
    post:
      summary: Unassign User
      tags:
      - Workspaces
      parameters: []
      responses:
        '204':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
components:
  schemas:
    authorization:
      name: Authorization
      in: header
      type: string
      description: JWT token
      example: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiZGV2ZWxvcGVyIiwic3ViIjoiMSIsInNjcCI6InVzZXIiLCJhdWQiOm51bGwsImlhdCI6MTY2NjE4MDIzMiwiZXhwIjoxNjY3NDc2MjMyLCJqdGkiOiJhMzdlZTA5MC0zZGJmLTRhMzgtOTFiNy1mZTJlM2FiYjlkY2QifQ.tGGjFHfMszfGCfNZS6I-hQNLSu_2Xfs3W4hI8IT4CW0
      required: true
    include_associated_enum:
      type: string
      enum:
      - visible
      - invisible
      - non-archived
      - archived
      - all
    lambdee_models_enum:
      type: string
      enum:
      - DB::User
      - DB::Workspace
      - DB::Board
      - DB::List
      - DB::Task
      - DB::Comment
      - DB::Tag
      - DB::Sprint
      - DB::UserWorkspace
      - DB::TaskUser
      - DB::TaskTag
      - DB::SprintTask
    user_pages_response:
      type: object
      properties:
        users:
          type: array
          items:
            "$ref": "#components/schemas/user_response"
        total_pages:
          type: integer
      required:
      - users
    user_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        avatar_url:
          type: string
        url:
          type: string
        role:
          type: string
      required:
      - id
      - name
    user_request:
      type: object
      properties:
        user:
          type: object
          properties:
            name:
              type: string
            email:
              type: string
            password:
              type: string
            role:
              type: string
              enum:
              - guest
              - regular
              - developer
              - admin
              - manager
      required:
      - name
      - email
    user_update_request:
      type: object
      properties:
        user:
          type: object
          properties:
            name:
              type: string
            email:
              type: string
            password:
              type: string
            current_password:
              type: string
            role:
              type: string
              enum:
              - guest
              - regular
              - developer
              - admin
              - manager
      required:
      - current_password
    user_sign_in_request:
      type: object
      properties:
        user:
          type: object
          properties:
            email:
              type: string
            password:
              type: string
      required:
      - email
      - password
    comment_response:
      type: object
      properties:
        id:
          type: integer
        body:
          type: string
        deleted_at:
          type:
          - string
          - 'null'
          format: date_time
        author_id:
          type: integer
        task_id:
          type: integer
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        url:
          type: string
        users:
          type: array
          items:
            "$ref": "#/components/schemas/user_response"
          nullable: true
      required:
      - id
      - body
      - deleted_at
      - url
    tag_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        colour:
          type: string
        board_id:
          type: integer
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        url:
          type: string
        board_url:
          type: string
      required:
      - id
    tag_request:
      type: object
      properties:
        name:
          type: string
        colour:
          type: string
        board_id:
          type: integer
        task_id:
          type: integer
      required: []
    sprint_response:
      type: object
      properties:
        id:
          type: integer
        board_id:
          type: integer
        name:
          type: string
        description:
          type:
          - string
          - 'null'
        started_at:
          type: string
          format: date_time
        expected_end_at:
          type: string
          format: date_time
        ended_at:
          type:
          - string
          - 'null'
          format: date_time
        final_list_name:
          type: string
        url:
          type: string
        tasks:
          type: array
          items:
            "$ref": "#/components/schemas/task_with_sprint_task_response"
          nullable: true
      required: []
    task_with_sprint_task_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        priority:
          type: string
        spent_time:
          type: integer
        points:
          type: integer
        added_at:
          type: string
          format: date_time
        completed_at:
          type:
          - string
          - 'null'
          format: date_time
        start_state:
          type: string
        state:
          type: string
      required: []
    sprint_request:
      type: object
      properties:
        board_id:
          type: integer
        name:
          type: string
        description:
          type: string
        started_at:
          type: string
          format: date_time
          example: '2025-12-11T23:00:00'
        expected_end_at:
          type: string
          format: date_time
          example: '2025-12-18T23:00:00'
      required:
      - name
      - expected_end_at
    task_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type:
          - string
          - 'null'
        pos:
          type:
          - number
          - 'null'
          format: float
        priority:
          type:
          - string
          - 'null'
        points:
          type:
          - number
          - 'null'
          format: float
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        deleted_at:
          type:
          - string
          - 'null'
          format: date_time
        list_id:
          type: integer
        list_url:
          type: string
        url:
          type: string
        users:
          type: array
          items:
            "$ref": "#/components/schemas/user_response"
          nullable: true
        tags:
          type: array
          items:
            "$ref": "#/components/schemas/tag_response"
          nullable: true
        author:
          type: object
          schema:
            "$ref": "#/components/schemas/user_response"
          nullable: true
      required:
      - id
      - name
      - pos
      - priority
      - points
      - list_id
      - deleted_at
    task_request:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        pos:
          type: number
          format: float
          description: If not given, value will be set as for the last item in the
            list.
        priority:
          type: string
          enum:
          - very_low
          - low
          - medium
          - high
          - very_high
        points:
          type: number
          format: float
        list_id:
          type: integer
        author_id:
          type: integer
      required:
      - name
      - list_id
      - author_id
    list_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        pos:
          type: number
          format: float
        visible:
          type:
          - boolean
          - 'null'
        deleted_at:
          type:
          - string
          - 'null'
          format: date_time
        board_id:
          type: integer
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        url:
          type: string
        board_url:
          type: string
        tasks:
          type: array
          items:
            "$ref": "#/components/schemas/task_response"
          nullable: true
      required:
      - id
      - name
      - pos
      - visible
      - board_id
      - created_at
      - updated_at
      - deleted_at
    list_request:
      type: object
      properties:
        name:
          type: string
        pos:
          type: number
          format: float
        visible:
          type: boolean
        board_id:
          type: integer
      required:
      - name
      - board_id
    board_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        workspace_id:
          type: integer
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        deleted_at:
          type:
          - string
          - 'null'
          format: date_time
        url:
          type: string
        workspace_url:
          type: string
        lists:
          type: array
          items:
            "$ref": "#/components/schemas/list_response"
          nullable: true
      required:
      - id
      - name
      - workspace_id
      - created_at
      - updated_at
      - deleted_at
    board_request:
      type: object
      properties:
        name:
          type: string
        workspace_id:
          type: integer
      required:
      - name
      - workspace_id
    workspace_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        deleted_at:
          type:
          - string
          - 'null'
          format: date_time
        url:
          type: string
        boards:
          type: array
          items:
            "$ref": "#/components/schemas/board_response"
          nullable: true
      required:
      - id
      - name
      - created_at
      - updated_at
      - deleted_at
    workspace_request:
      type: object
      properties:
        name:
          type: string
      required:
      - name
    script_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        content:
          type: string
        url:
          type: string
        script_triggers:
          type: array
          items:
            "$ref": "#/components/schemas/nested_script_trigger_response"
      required: []
    script_request:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        content:
          type: string
        script_triggers_attributes:
          type: array
          items:
            "$ref": "#/components/schemas/nested_script_trigger_request"
      required:
      - name
    nested_script_trigger_response:
      type: object
      properties:
        id:
          type: integer
        script_id:
          type:
          - integer
          - 'null'
        subject_type:
          type:
          - string
          - 'null'
        subject_id:
          type:
          - integer
          - 'null'
        action:
          type: string
        url:
          type: string
      required: []
    nested_script_trigger_request:
      type: object
      properties:
        id:
          type: integer
          description: Needed only for updates and destroys.
        script_id:
          type: integer
        subject_type:
          "$ref": "#/components/schemas/lambdee_models_enum"
        subject_id:
          type: integer
        action:
          type: string
          enum:
          - create
          - update
          - destroy
        _destroy:
          type: boolean
          description: If `true` callback for given `id` will be destroyed. Works
            only nested in sprint.
      required:
      - action
    script_trigger_response:
      type: object
      properties:
        id:
          type: integer
        script_id:
          type: integer
        subject_type:
          type:
          - string
          - 'null'
        subject_id:
          type:
          - integer
          - 'null'
        action:
          type: string
        url:
          type: string
      required: []
    script_trigger_request:
      type: object
      properties:
        script_id:
          type: integer
        subject_type:
          "$ref": "#/components/schemas/lambdee_models_enum"
        subject_id:
          type: integer
        action:
          type: string
      required:
      - script_id
      - action
    script_run_response:
      type: object
      properties:
        id:
          type: integer
        script_id:
          type: integer
        initiator_id:
          type: integer
        input:
          type:
          - string
          - 'null'
        output:
          type: string
        url:
          type: string
      required: []
    script_run_request:
      type: object
      properties:
        output:
          type: string
      required: []
servers:
- url: "{defaultProtocol}://{defaultHost}"
  variables:
    defaultProtocol:
      default: http
    defaultHost:
      default: localhost:3000
