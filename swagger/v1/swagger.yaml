---
openapi: 3.0.1
info:
  title: Lambdee API V1
  version: v1
paths:
  "/api/boards":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: list boards
      tags:
      - Boards
      parameters:
      - name: limit
        in: query
        required: false
        description: Decides how many entities should be returned
        example: 3
        schema:
          type: integer
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - id: 1
                    name: Lutetium
                    colour: "#9e549d"
                    workspace_id: 1
                    created_at: '2022-11-15T17:36:00.428Z'
                    updated_at: '2022-11-15T17:36:00.428Z'
                    deleted_at:
                    url: http://www.example.com/api/boards/1
                    workspace_url: http://www.example.com/api/workspaces/1
                  - id: 2
                    name: Calcium
                    colour: "#9219d8"
                    workspace_id: 2
                    created_at: '2022-11-15T17:36:00.430Z'
                    updated_at: '2022-11-15T17:36:00.430Z'
                    deleted_at:
                    url: http://www.example.com/api/boards/2
                    workspace_url: http://www.example.com/api/workspaces/2
                  - id: 3
                    name: Dubnium
                    colour: "#7ba16d"
                    workspace_id: 3
                    created_at: '2022-11-15T17:36:00.431Z'
                    updated_at: '2022-11-15T17:36:00.431Z'
                    deleted_at:
                    url: http://www.example.com/api/boards/3
                    workspace_url: http://www.example.com/api/workspaces/3
                  - id: 4
                    name: Tin
                    colour: "#e03aa0"
                    workspace_id: 4
                    created_at: '2022-11-15T17:36:00.432Z'
                    updated_at: '2022-11-15T17:36:00.432Z'
                    deleted_at:
                    url: http://www.example.com/api/boards/4
                    workspace_url: http://www.example.com/api/workspaces/4
                  - id: 5
                    name: Dysprosium
                    colour: "#50af53"
                    workspace_id: 5
                    created_at: '2022-11-15T17:36:00.433Z'
                    updated_at: '2022-11-15T17:36:00.433Z'
                    deleted_at:
                    url: http://www.example.com/api/boards/5
                    workspace_url: http://www.example.com/api/workspaces/5
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/board_response"
    post:
      summary: create board
      tags:
      - Boards
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 6
                    name: New Board
                    colour:
                    workspace_id: 6
                    created_at: '2022-11-15T17:36:00.509Z'
                    updated_at: '2022-11-15T17:36:00.509Z'
                    deleted_at:
                    url: http://www.example.com/api/boards/6
                    workspace_url: http://www.example.com/api/workspaces/6
              schema:
                "$ref": "#/components/schemas/board_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/board_request"
  "/api/boards/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show board
      tags:
      - Boards
      parameters:
      - name: tasks
        in: query
        type: string
        schema:
          "$ref": "#/components/schemas/include_associated_enum"
        required: false
      - name: lists
        in: query
        type: string
        schema:
          "$ref": "#/components/schemas/include_associated_enum"
        required: false
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful with `lists=all`:
                  summary: successful with `lists=all`
                  value:
                    id: 7
                    name: Calcium
                    colour: "#e5315a"
                    workspace_id: 7
                    created_at: '2022-11-15T17:36:00.520Z'
                    updated_at: '2022-11-15T17:36:00.520Z'
                    deleted_at:
                    url: http://www.example.com/api/boards/7
                    workspace_url: http://www.example.com/api/workspaces/7
                    lists:
                    - id: 1
                      name: chocolate
                      pos: 65536.0
                      visible: false
                      deleted_at: '2022-11-15T17:36:00.537Z'
                      board_id: 7
                      created_at: '2022-11-15T17:36:00.530Z'
                      updated_at: '2022-11-15T17:36:00.533Z'
                      url: http://www.example.com/api/lists/1
                      board_url: http://www.example.com/api/boards/7
                    - id: 2
                      name: harlequin
                      pos: 65536.0
                      visible: false
                      deleted_at:
                      board_id: 7
                      created_at: '2022-11-15T17:36:00.540Z'
                      updated_at: '2022-11-15T17:36:00.542Z'
                      url: http://www.example.com/api/lists/2
                      board_url: http://www.example.com/api/boards/7
                successful with `lists=visible`:
                  summary: successful with `lists=visible`
                  value:
                    id: 10
                    name: Yttrium
                    colour: "#2ee767"
                    workspace_id: 10
                    created_at: '2022-11-15T17:36:00.570Z'
                    updated_at: '2022-11-15T17:36:00.570Z'
                    deleted_at:
                    url: http://www.example.com/api/boards/10
                    workspace_url: http://www.example.com/api/workspaces/10
                    lists: []
                successful with `lists=archived`:
                  summary: successful with `lists=archived`
                  value:
                    id: 12
                    name: Osmium
                    colour: "#e7bc83"
                    workspace_id: 12
                    created_at: '2022-11-15T17:36:00.599Z'
                    updated_at: '2022-11-15T17:36:00.599Z'
                    deleted_at:
                    url: http://www.example.com/api/boards/12
                    workspace_url: http://www.example.com/api/workspaces/12
                    lists:
                    - id: 4
                      name: taupe
                      pos: 65536.0
                      visible: false
                      deleted_at: '2022-11-15T17:36:00.603Z'
                      board_id: 12
                      created_at: '2022-11-15T17:36:00.601Z'
                      updated_at: '2022-11-15T17:36:00.602Z'
                      url: http://www.example.com/api/lists/4
                      board_url: http://www.example.com/api/boards/12
                    - id: 5
                      name: harlequin
                      pos: 65536.0
                      visible: false
                      deleted_at: '2022-11-15T17:36:00.609Z'
                      board_id: 12
                      created_at: '2022-11-15T17:36:00.606Z'
                      updated_at: '2022-11-15T17:36:00.607Z'
                      url: http://www.example.com/api/lists/5
                      board_url: http://www.example.com/api/boards/12
                successful:
                  summary: successful
                  value:
                    id: 15
                    name: Argon
                    colour: "#2e21df"
                    workspace_id: 15
                    created_at: '2022-11-15T17:36:00.633Z'
                    updated_at: '2022-11-15T17:36:00.633Z'
                    deleted_at:
                    url: http://www.example.com/api/boards/15
                    workspace_url: http://www.example.com/api/workspaces/15
              schema:
                "$ref": "#/components/schemas/board_response"
    put:
      summary: update board
      tags:
      - Boards
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 16
                    name: New Name
                    colour: "#071d3e"
                    workspace_id: 16
                    created_at: '2022-11-15T17:36:00.655Z'
                    updated_at: '2022-11-15T17:36:00.669Z'
                    deleted_at:
                    url: http://www.example.com/api/boards/16
                    workspace_url: http://www.example.com/api/workspaces/16
              schema:
                "$ref": "#/components/schemas/board_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/board_request"
    delete:
      summary: delete board
      tags:
      - Boards
      responses:
        '204':
          description: successful
  "/api/boards/{id}/user_tasks":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: list current user tasks including board, lists, tags, users and author
      tags:
      - Boards
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 18
                    name: Niobium
                    colour: "#e80ff8"
                    workspace_id: 18
                    created_at: '2022-11-15T17:36:00.711Z'
                    updated_at: '2022-11-15T17:36:00.711Z'
                    deleted_at:
                    url: http://www.example.com/api/boards/18
                    workspace_url: http://www.example.com/api/workspaces/18
                    lists: []
              schema:
                "$ref": "#/components/schemas/board_response"
  "/api/boards/recently_viewed":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: list current user recently viewed boards (max 6)
      tags:
      - Boards
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value: []
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/board_response"
  "/api/tasks/{id}/comments":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Task id
      required: true
      schema:
        type: string
    get:
      summary: List task's comments
      tags:
      - Comments
      parameters:
      - name: with_author
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful with `with_author=true`:
                  summary: successful with `with_author=true`
                  value:
                  - id: 5
                    body: |-
                      ## Voluptates
                      Iure deleniti earum. Numquam et et.
                      # Veniam
                      Ducimus eum aut. Repellendus in minima. Aut dignissimos est.
                      Asperiores fugiat exercitationem. Explicabo ~at~ assumenda. Dolor magni fugiat.
                    deleted_at:
                    author_id: 22
                    task_id: 2
                    created_at: '2022-11-15T17:36:00.937Z'
                    updated_at: '2022-11-15T17:36:00.937Z'
                    url: http://www.example.com/api/comments/5
                    author:
                      id: 22
                      name: Dudley Baumbach
                      avatar_url: https://www.gravatar.com/avatar/a31b13dd87d1fd59541ff653adb7213d
                      role: developer
                      url: http://www.example.com/api/users/22
                      email: dudley_baumbach.1668533760@example.com
                      created_at: '2022-11-15T17:36:00.922Z'
                      updated_at: '2022-11-15T17:36:00.922Z'
                  - id: 4
                    body: |-
                      ###### Corporis
                      Molestiae sit nisi.
                      excepturi | omnis | consequuntur
                      ---- | ---- | ----
                      qui | repudiandae | praesentium
                      est | at | odit
                    deleted_at:
                    author_id: 22
                    task_id: 2
                    created_at: '2022-11-15T17:36:00.935Z'
                    updated_at: '2022-11-15T17:36:00.935Z'
                    url: http://www.example.com/api/comments/4
                    author:
                      id: 22
                      name: Dudley Baumbach
                      avatar_url: https://www.gravatar.com/avatar/a31b13dd87d1fd59541ff653adb7213d
                      role: developer
                      url: http://www.example.com/api/users/22
                      email: dudley_baumbach.1668533760@example.com
                      created_at: '2022-11-15T17:36:00.922Z'
                      updated_at: '2022-11-15T17:36:00.922Z'
                  - id: 3
                    body: |-
                      ###### Aut
                      Et ullam autem.
                      adipisci | qui | doloremque
                      ---- | ---- | ----
                      veritatis | porro | ut
                      earum | vero | optio
                    deleted_at:
                    author_id: 22
                    task_id: 2
                    created_at: '2022-11-15T17:36:00.934Z'
                    updated_at: '2022-11-15T17:36:00.934Z'
                    url: http://www.example.com/api/comments/3
                    author:
                      id: 22
                      name: Dudley Baumbach
                      avatar_url: https://www.gravatar.com/avatar/a31b13dd87d1fd59541ff653adb7213d
                      role: developer
                      url: http://www.example.com/api/users/22
                      email: dudley_baumbach.1668533760@example.com
                      created_at: '2022-11-15T17:36:00.922Z'
                      updated_at: '2022-11-15T17:36:00.922Z'
                  - id: 2
                    body: "## Doloribus\nQuia est et. Quo ut aspernatur.\n0. Earum.
                      \n"
                    deleted_at:
                    author_id: 22
                    task_id: 2
                    created_at: '2022-11-15T17:36:00.932Z'
                    updated_at: '2022-11-15T17:36:00.932Z'
                    url: http://www.example.com/api/comments/2
                    author:
                      id: 22
                      name: Dudley Baumbach
                      avatar_url: https://www.gravatar.com/avatar/a31b13dd87d1fd59541ff653adb7213d
                      role: developer
                      url: http://www.example.com/api/users/22
                      email: dudley_baumbach.1668533760@example.com
                      created_at: '2022-11-15T17:36:00.922Z'
                      updated_at: '2022-11-15T17:36:00.922Z'
                  - id: 1
                    body: "##### Voluptatem\nMagnam impedit ad. Quisquam vero aliquid.
                      Rerum provident nisi.\n* Mollitia. \n* Ea. \n* Eum. \n"
                    deleted_at:
                    author_id: 22
                    task_id: 2
                    created_at: '2022-11-15T17:36:00.930Z'
                    updated_at: '2022-11-15T17:36:00.930Z'
                    url: http://www.example.com/api/comments/1
                    author:
                      id: 22
                      name: Dudley Baumbach
                      avatar_url: https://www.gravatar.com/avatar/a31b13dd87d1fd59541ff653adb7213d
                      role: developer
                      url: http://www.example.com/api/users/22
                      email: dudley_baumbach.1668533760@example.com
                      created_at: '2022-11-15T17:36:00.922Z'
                      updated_at: '2022-11-15T17:36:00.922Z'
                successful:
                  summary: successful
                  value:
                  - id: 10
                    body: |-
                      ###### Ratione
                      Error accusantium dolores. Est harum sapiente.
                      ### Voluptatem
                    deleted_at:
                    author_id: 25
                    task_id: 3
                    created_at: '2022-11-15T17:36:00.978Z'
                    updated_at: '2022-11-15T17:36:00.978Z'
                    url: http://www.example.com/api/comments/10
                  - id: 9
                    body: |-
                      ##### Qui
                      Fugit voluptates magnam. Voluptate eius illum. Sunt quia enim.
                      ### Quae
                    deleted_at:
                    author_id: 25
                    task_id: 3
                    created_at: '2022-11-15T17:36:00.977Z'
                    updated_at: '2022-11-15T17:36:00.977Z'
                    url: http://www.example.com/api/comments/9
                  - id: 8
                    body: |-
                      ###### Molestiae
                      Itaque unde necessitatibus. Eos provident blanditiis. Fuga ipsam illo.
                      quasi | explicabo | deserunt
                      ---- | ---- | ----
                      eius | debitis | delectus
                      architecto | labore | modi
                    deleted_at:
                    author_id: 25
                    task_id: 3
                    created_at: '2022-11-15T17:36:00.976Z'
                    updated_at: '2022-11-15T17:36:00.976Z'
                    url: http://www.example.com/api/comments/8
                  - id: 7
                    body: "# Quis\nEos corrupti iste. Praesentium nulla id.\n0. Et.
                      \n1. Vero. \n2. Dolores. \n"
                    deleted_at:
                    author_id: 25
                    task_id: 3
                    created_at: '2022-11-15T17:36:00.975Z'
                    updated_at: '2022-11-15T17:36:00.975Z'
                    url: http://www.example.com/api/comments/7
                  - id: 6
                    body: "### Voluptatum\nAliquid reprehenderit et.\n* Ex. \n* Hic.
                      \n* Sed. \n* Possimus. \n* Quae. \n* Velit. \n* Consequatur.
                      \n* Dolores. \n* Fugit. \n"
                    deleted_at:
                    author_id: 25
                    task_id: 3
                    created_at: '2022-11-15T17:36:00.974Z'
                    updated_at: '2022-11-15T17:36:00.974Z'
                    url: http://www.example.com/api/comments/6
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/comment_response"
  "/api/lists":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: List lists
      tags:
      - Lists
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - id: 9
                    name: viridian
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 28
                    created_at: '2022-11-15T17:36:00.998Z'
                    updated_at: '2022-11-15T17:36:00.998Z'
                    url: http://www.example.com/api/lists/9
                    board_url: http://www.example.com/api/boards/28
                  - id: 10
                    name: brown
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 29
                    created_at: '2022-11-15T17:36:01.001Z'
                    updated_at: '2022-11-15T17:36:01.001Z'
                    url: http://www.example.com/api/lists/10
                    board_url: http://www.example.com/api/boards/29
                  - id: 11
                    name: ruby
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 30
                    created_at: '2022-11-15T17:36:01.003Z'
                    updated_at: '2022-11-15T17:36:01.003Z'
                    url: http://www.example.com/api/lists/11
                    board_url: http://www.example.com/api/boards/30
                  - id: 12
                    name: burgundy
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 31
                    created_at: '2022-11-15T17:36:01.006Z'
                    updated_at: '2022-11-15T17:36:01.006Z'
                    url: http://www.example.com/api/lists/12
                    board_url: http://www.example.com/api/boards/31
                  - id: 13
                    name: chocolate
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 32
                    created_at: '2022-11-15T17:36:01.008Z'
                    updated_at: '2022-11-15T17:36:01.008Z'
                    url: http://www.example.com/api/lists/13
                    board_url: http://www.example.com/api/boards/32
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/list_response"
    post:
      summary: Create List
      tags:
      - Lists
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 14
                    name: New List
                    pos: 1212.0
                    visible: false
                    deleted_at:
                    board_id: 33
                    created_at: '2022-11-15T17:36:01.050Z'
                    updated_at: '2022-11-15T17:36:01.050Z'
                    url: http://www.example.com/api/lists/14
                    board_url: http://www.example.com/api/boards/33
              schema:
                "$ref": "#/components/schemas/list_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/list_request"
  "/api/lists/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show List
      tags:
      - Lists
      parameters:
      - name: tasks
        in: query
        type: string
        schema:
          "$ref": "#/components/schemas/include_associated_enum"
        required: false
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful with `tasks=all`:
                  summary: successful with `tasks=all`
                  value:
                    id: 15
                    name: apricot
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 34
                    created_at: '2022-11-15T17:36:01.057Z'
                    updated_at: '2022-11-15T17:36:01.057Z'
                    url: http://www.example.com/api/lists/15
                    board_url: http://www.example.com/api/boards/34
                    tasks:
                    - id: 4
                      name: Sgt. Pepper's Lonely Hearts Club Band
                      pos: 65536.0
                      priority: very_high
                      spent_time: 0
                      points: 3
                      list_id: 15
                      deleted_at:
                      url: http://www.example.com/api/tasks/4
                      list_url: http://www.example.com/api/lists/15
                      users:
                      - id: 30
                        name: Robby Boyer V
                        avatar_url: https://www.gravatar.com/avatar/5623efa5a7dd5c75462e65cf7d3affcd
                        role: guest
                        url: http://www.example.com/api/users/30
                      - id: 31
                        name: Prof. Gertha King
                        avatar_url: https://www.gravatar.com/avatar/b2924d7f16f335de11e8f4bfed999da1
                        role: guest
                        url: http://www.example.com/api/users/31
                      tags:
                      - id: 2
                        name: Consulting
                        colour: "#31afd4"
                        url: http://www.example.com/api/tags/2
                      - id: 3
                        name: Hospitality
                        colour: "#6a89d8"
                        url: http://www.example.com/api/tags/3
                    - id: 5
                      name: Metallica
                      pos: 65536.0
                      priority: very_low
                      spent_time: 0
                      points: 4
                      list_id: 15
                      deleted_at: '2022-11-15T17:36:01.094Z'
                      url: http://www.example.com/api/tasks/5
                      list_url: http://www.example.com/api/lists/15
                      users: []
                      tags: []
                successful with `tasks=visible`:
                  summary: successful with `tasks=visible`
                  value:
                    id: 18
                    name: plum
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 39
                    created_at: '2022-11-15T17:36:01.129Z'
                    updated_at: '2022-11-15T17:36:01.129Z'
                    url: http://www.example.com/api/lists/18
                    board_url: http://www.example.com/api/boards/39
                    tasks:
                    - id: 6
                      name: Come On Over
                      pos: 65536.0
                      priority: very_low
                      spent_time: 0
                      points: 1
                      list_id: 18
                      deleted_at:
                      url: http://www.example.com/api/tasks/6
                      list_url: http://www.example.com/api/lists/18
                      users:
                      - id: 35
                        name: Gov. Darrel Bogisich
                        avatar_url: https://www.gravatar.com/avatar/3d89c1ceb7e6858480f5d61644592b05
                        role: developer
                        url: http://www.example.com/api/users/35
                      - id: 36
                        name: Audry Heidenreich
                        avatar_url: https://www.gravatar.com/avatar/1dfb4f41b8b42e452e9fd26ed7e4d564
                        role: regular
                        url: http://www.example.com/api/users/36
                      tags:
                      - id: 4
                        name: Mining
                        colour: "#258e72"
                        url: http://www.example.com/api/tags/4
                    - id: 7
                      name: '21'
                      pos: 65536.0
                      priority: high
                      spent_time: 0
                      points: 5
                      list_id: 18
                      deleted_at:
                      url: http://www.example.com/api/tasks/7
                      list_url: http://www.example.com/api/lists/18
                      users: []
                      tags: []
                successful with `tasks=archived`:
                  summary: successful with `tasks=archived`
                  value:
                    id: 21
                    name: amber
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 43
                    created_at: '2022-11-15T17:36:01.184Z'
                    updated_at: '2022-11-15T17:36:01.184Z'
                    url: http://www.example.com/api/lists/21
                    board_url: http://www.example.com/api/boards/43
                    tasks:
                    - id: 8
                      name: Bad
                      pos: 65536.0
                      priority: medium
                      spent_time: 0
                      points: 2
                      list_id: 21
                      deleted_at: '2022-11-15T17:36:01.197Z'
                      url: http://www.example.com/api/tasks/8
                      list_url: http://www.example.com/api/lists/21
                      users: []
                      tags: []
                    - id: 9
                      name: The Dark Side of the Moon
                      pos: 65536.0
                      priority: high
                      spent_time: 0
                      points: 4
                      list_id: 21
                      deleted_at: '2022-11-15T17:36:01.209Z'
                      url: http://www.example.com/api/tasks/9
                      list_url: http://www.example.com/api/lists/21
                      users:
                      - id: 41
                        name: Lauren Lind
                        avatar_url: https://www.gravatar.com/avatar/a0543e7f741d371a46b1ff25846da851
                        role: guest
                        url: http://www.example.com/api/users/41
                      tags:
                      - id: 5
                        name: Technology
                        colour: "#cfbfcf"
                        url: http://www.example.com/api/tags/5
                successful:
                  summary: successful
                  value:
                    id: 24
                    name: cyan
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 47
                    created_at: '2022-11-15T17:36:01.243Z'
                    updated_at: '2022-11-15T17:36:01.243Z'
                    url: http://www.example.com/api/lists/24
                    board_url: http://www.example.com/api/boards/47
              schema:
                "$ref": "#/components/schemas/list_response"
    put:
      summary: Update list
      tags:
      - Lists
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 25
                    name: New Name
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 48
                    created_at: '2022-11-15T17:36:01.262Z'
                    updated_at: '2022-11-15T17:36:01.276Z'
                    url: http://www.example.com/api/lists/25
                    board_url: http://www.example.com/api/boards/48
              schema:
                "$ref": "#/components/schemas/list_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/list_request"
    delete:
      summary: Delete list
      tags:
      - Lists
      responses:
        '204':
          description: successful
  "/api/script_runs":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: List script runs
      tags:
      - ScriptRuns
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - id: 1
                    script_id: 1
                    input: puts 'Hello world'
                    output: Hello world
                    initiator_id: 48
                    url: http://www.example.com/api/script_runs/1
                  - id: 2
                    script_id: 2
                    input: puts 'Hello world'
                    output: Hello world
                    initiator_id: 50
                    url: http://www.example.com/api/script_runs/2
                  - id: 3
                    script_id: 3
                    input: puts 'Hello world'
                    output: Hello world
                    initiator_id: 52
                    url: http://www.example.com/api/script_runs/3
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/script_run_response"
  "/api/scripts/{id}/script_runs":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Script id
      required: true
      schema:
        type: string
    get:
      summary: List script's script runs
      tags:
      - ScriptRuns
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - id: 4
                    script_id: 4
                    input: puts 'Hello world'
                    output: Hello world
                    initiator_id: 56
                    url: http://www.example.com/api/script_runs/4
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/script_run_response"
  "/api/script_runs/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show script run
      tags:
      - ScriptRuns
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 5
                    script_id: 5
                    input: puts 'Hello world'
                    output: Hello world
                    initiator_id: 60
                    url: http://www.example.com/api/script_runs/5
              schema:
                "$ref": "#/components/schemas/script_run_response"
    put:
      summary: Update script run
      tags:
      - ScriptRuns
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 6
                    script_id: 6
                    input: puts 'Hello world'
                    output: example output
                    initiator_id: 64
                    url: http://www.example.com/api/script_runs/6
              schema:
                "$ref": "#/components/schemas/script_run_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/script_run_request"
  "/api/script_triggers":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    post:
      summary: Create script trigger
      tags:
      - Script triggers
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 1
                    script_id: 7
                    subject_type: DB::Task
                    subject_id: 10
                    action: destroy
                    url: http://www.example.com/api/script_triggers/1
              schema:
                "$ref": "#/components/schemas/script_trigger_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/script_trigger_request"
  "/api/script_triggers/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show script trigger
      tags:
      - Script triggers
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 2
                    script_id: 8
                    subject_type:
                    subject_id:
                    action: create
                    url: http://www.example.com/api/script_triggers/2
              schema:
                "$ref": "#/components/schemas/script_trigger_response"
    put:
      summary: Update script trigger
      tags:
      - Script triggers
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 3
                    script_id: 9
                    subject_type:
                    subject_id:
                    action: destroy
                    url: http://www.example.com/api/script_triggers/3
              schema:
                "$ref": "#/components/schemas/script_trigger_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/script_trigger_request"
    delete:
      summary: Delete script_trigger
      tags:
      - Script triggers
      responses:
        '204':
          description: successful
  "/api/scripts":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: List scripts
      tags:
      - Scripts
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - id: 11
                    content: puts 'hello world'
                    name: My first Lambdee Script
                    description: Description of the script
                    author_id: 80
                    url: http://www.example.com/api/scripts/11
                  - id: 12
                    content: puts 'hello world'
                    name: My first Lambdee Script
                    description: Description of the script
                    author_id: 81
                    url: http://www.example.com/api/scripts/12
                  - id: 13
                    content: puts 'hello world'
                    name: My first Lambdee Script
                    description: Description of the script
                    author_id: 82
                    url: http://www.example.com/api/scripts/13
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/script_response"
    post:
      summary: Create Script
      tags:
      - Scripts
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 14
                    content: puts 'Hello world!'
                    name: New Script
                    description: What script does
                    author_id: 85
                    url: http://www.example.com/api/scripts/14
                    script_triggers:
                    - id: 5
                      script_id: 14
                      subject_type:
                      subject_id:
                      action: create
                      url: http://www.example.com/api/script_triggers/5
                    - id: 6
                      script_id: 14
                      subject_type: DB::Task
                      subject_id:
                      action: update
                      url: http://www.example.com/api/script_triggers/6
                    - id: 7
                      script_id: 14
                      subject_type: DB::Task
                      subject_id: 11
                      action: destroy
                      url: http://www.example.com/api/script_triggers/7
              schema:
                "$ref": "#/components/schemas/script_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/script_request"
  "/api/scripts/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show Script
      tags:
      - Scripts
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 15
                    content: puts 'hello world'
                    name: My first Lambdee Script
                    description: Description of the script
                    author_id: 88
                    url: http://www.example.com/api/scripts/15
                    script_triggers: []
              schema:
                "$ref": "#/components/schemas/script_response"
    put:
      summary: Update Script
      tags:
      - Scripts
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 16
                    content: puts 'hello world'
                    name: New Name
                    description: Description of the script
                    author_id: 91
                    url: http://www.example.com/api/scripts/16
                    script_triggers:
                    - id: 9
                      script_id: 16
                      subject_type:
                      subject_id:
                      action: create
                      url: http://www.example.com/api/script_triggers/9
              schema:
                "$ref": "#/components/schemas/script_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/script_request"
    delete:
      summary: Delete script
      tags:
      - Scripts
      responses:
        '204':
          description: successful
  "/api/boards/{id}/sprints":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Board id
      required: true
      schema:
        type: string
    get:
      summary: List board's sprints
      tags:
      - Sprints
      parameters:
      - name: page
        in: query
        required: false
        description: Decides which result page should be returned.
        example: 2
        schema:
          type: integer
      - name: per
        in: query
        required: false
        description: Decides how many entities should be returned per one page. **Works
          only, when `page` param is given.**
        example: 2
        schema:
          type: integer
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    sprints:
                    - id: 1
                      board_id: 52
                      name: Sunshine Coast
                      description: Enim sed dolorem. Quidem dolor eos. Quis dolorum
                        dolor.
                      started_at: '2022-11-15T17:36:01.703Z'
                      expected_end_at: '2022-11-22T17:36:01.703Z'
                      ended_at:
                      final_list_name: Done
                      url: http://www.example.com/api/sprints/1
                    - id: 2
                      board_id: 52
                      name: Kalgoorlie
                      description: Delectus et vero. Dolorum vel non. Deserunt assumenda
                        nostrum.
                      started_at: '2022-11-15T17:36:01.708Z'
                      expected_end_at: '2022-11-22T17:36:01.708Z'
                      ended_at:
                      final_list_name: Done
                      url: http://www.example.com/api/sprints/2
                    - id: 3
                      board_id: 52
                      name: Canberra
                      description: Aut quod suscipit. Ut molestiae accusantium. Adipisci
                        nostrum sit.
                      started_at: '2022-11-15T17:36:01.710Z'
                      expected_end_at: '2022-11-22T17:36:01.710Z'
                      ended_at:
                      final_list_name: Done
                      url: http://www.example.com/api/sprints/3
              schema:
                "$ref": "#/components/schemas/sprint_pages_response"
  "/api/sprints":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: List sprints
      tags:
      - Sprints
      parameters:
      - name: page
        in: query
        required: false
        description: Decides which result page should be returned.
        example: 2
        schema:
          type: integer
      - name: per
        in: query
        required: false
        description: Decides how many entities should be returned per one page. **Works
          only, when `page` param is given.**
        example: 2
        schema:
          type: integer
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    sprints: []
              schema:
                "$ref": "#/components/schemas/sprint_pages_response"
    post:
      summary: Create sprint
      tags:
      - Sprints
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 4
                    board_id: 53
                    name: New Sprint
                    description: Example description of new sprint
                    started_at: '2022-11-15T17:36:01.778Z'
                    expected_end_at: '2025-12-11T23:00:00.000Z'
                    ended_at:
                    final_list_name: Done
                    url: http://www.example.com/api/sprints/4
              schema:
                "$ref": "#/components/schemas/sprint_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/sprint_request"
  "/api/sprints/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    - name: tasks
      in: query
      example: all
      required: false
      schema:
        type: string
    get:
      summary: Show Sprint
      tags:
      - Sprints
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful with `tasks=all`:
                  summary: successful with `tasks=all`
                  value:
                    id: 5
                    board_id: 54
                    name: Adelaide
                    description: Magnam unde deserunt. Omnis quia repudiandae. Excepturi
                      eos voluptate.
                    started_at: '2022-11-15T17:36:01.787Z'
                    expected_end_at: '2022-11-22T17:36:01.787Z'
                    ended_at:
                    final_list_name: Done
                    url: http://www.example.com/api/sprints/5
                    tasks:
                    - id: 12
                      name: Abbey Road
                      priority: very_high
                      spent_time: 0
                      points: 1
                      added_at: '2022-11-15T17:36:01.809Z'
                      completed_at:
                      start_state: To Do
                      state: Doing
                successful:
                  summary: successful
                  value:
                    id: 6
                    board_id: 56
                    name: Warrnambool
                    description: Est ad doloremque. Minima eaque unde. Nostrum consequatur
                      eum.
                    started_at: '2022-11-15T17:36:01.835Z'
                    expected_end_at: '2022-11-22T17:36:01.835Z'
                    ended_at:
                    final_list_name: Done
                    url: http://www.example.com/api/sprints/6
              schema:
                "$ref": "#/components/schemas/sprint_response"
    put:
      summary: Update Sprint
      tags:
      - Sprints
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 7
                    board_id: 57
                    name: New Name
                    description: Soluta est ipsum. Cupiditate inventore amet. Odit
                      vel dolores.
                    started_at: '2022-11-15T17:36:01.865Z'
                    expected_end_at: '2022-11-22T17:36:01.865Z'
                    ended_at:
                    final_list_name: Done
                    url: http://www.example.com/api/sprints/7
              schema:
                "$ref": "#/components/schemas/sprint_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/sprint_request"
    delete:
      summary: Delete sprint
      tags:
      - Sprints
      responses:
        '204':
          description: successful
  "/api/sprints/{id}/end":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    put:
      summary: End sprint
      tags:
      - Sprints
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 9
                    board_id: 59
                    name: Bathurst
                    description: Autem corporis non. Et expedita tempore. Delectus
                      quis debitis.
                    started_at: '2022-11-15T17:36:01.948Z'
                    expected_end_at: '2022-11-22T17:36:01.948Z'
                    ended_at: '2022-11-15T17:36:01.966Z'
                    final_list_name: Done
                    url: http://www.example.com/api/sprints/9
              schema:
                "$ref": "#/components/schemas/sprint_response"
  "/api/boards/{id}/active_sprint":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show active sprint
      tags:
      - Sprints
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 10
                    board_id: 60
                    name: Bunbury
                    description: Ipsum et ducimus. Quaerat dolores rerum. Dignissimos
                      eos repellendus.
                    started_at: '2022-11-15T17:36:01.978Z'
                    expected_end_at: '2022-11-22T17:36:01.978Z'
                    ended_at:
                    final_list_name: Done
                    url: http://www.example.com/api/sprints/10
              schema:
                "$ref": "#/components/schemas/sprint_response"
  "/api/sprints/{id}/burn_up_chart":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show data for burn up chart
      tags:
      - Sprints
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - name: Work Scope
                    data:
                      '2022-11-22': 0
                  - name: Completed work
                    data: {}
  "/api/boards/{id}/tags":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Board id
      required: true
      schema:
        type: string
    get:
      summary: List board's tags
      tags:
      - Tags
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - id: 6
                    name: Mining
                    colour: "#aefe82"
                    url: http://www.example.com/api/tags/6
                    board_id: 62
                    created_at: '2022-11-15T17:36:02.028Z'
                    updated_at: '2022-11-15T17:36:02.028Z'
                  - id: 7
                    name: Sales
                    colour: "#4273b9"
                    url: http://www.example.com/api/tags/7
                    board_id: 62
                    created_at: '2022-11-15T17:36:02.029Z'
                    updated_at: '2022-11-15T17:36:02.029Z'
                  - id: 8
                    name: Administration
                    colour: "#98eb53"
                    url: http://www.example.com/api/tags/8
                    board_id: 62
                    created_at: '2022-11-15T17:36:02.029Z'
                    updated_at: '2022-11-15T17:36:02.029Z'
                  - id: 9
                    name: Technology
                    colour: "#30ee99"
                    url: http://www.example.com/api/tags/9
                    board_id: 62
                    created_at: '2022-11-15T17:36:02.030Z'
                    updated_at: '2022-11-15T17:36:02.030Z'
                  - id: 10
                    name: Banking
                    colour: "#e73466"
                    url: http://www.example.com/api/tags/10
                    board_id: 62
                    created_at: '2022-11-15T17:36:02.031Z'
                    updated_at: '2022-11-15T17:36:02.031Z'
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/tag_response"
    post:
      summary: Create tag
      tags:
      - Tags
      parameters:
      - name: id
        in: path
        description: Board id
        required: true
        schema:
          type: string
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 11
                    name: New Tag
                    colour: "#fff000"
                    url: http://www.example.com/api/tags/11
                    board_id: 63
                    created_at: '2022-11-15T17:36:02.070Z'
                    updated_at: '2022-11-15T17:36:02.070Z'
              schema:
                "$ref": "#/components/schemas/tag_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/tag_request"
  "/api/tags":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    post:
      summary: Create tag
      tags:
      - Tags
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 12
                    name: New Tag
                    colour: "#fff000"
                    url: http://www.example.com/api/tags/12
                    board_id: 64
                    created_at: '2022-11-15T17:36:02.102Z'
                    updated_at: '2022-11-15T17:36:02.102Z'
              schema:
                "$ref": "#/components/schemas/tag_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/tag_request"
  "/api/tasks/{id}/tags":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Task id
      required: true
      schema:
        type: string
    get:
      summary: List task's tags
      tags:
      - Tags
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - id: 13
                    name: Advertising
                    colour: "#a88668"
                    url: http://www.example.com/api/tags/13
                    board_id: 65
                    created_at: '2022-11-15T17:36:02.118Z'
                    updated_at: '2022-11-15T17:36:02.118Z'
                  - id: 14
                    name: Education
                    colour: "#54c45e"
                    url: http://www.example.com/api/tags/14
                    board_id: 65
                    created_at: '2022-11-15T17:36:02.119Z'
                    updated_at: '2022-11-15T17:36:02.119Z'
                  - id: 15
                    name: Marketing
                    colour: "#c74d4e"
                    url: http://www.example.com/api/tags/15
                    board_id: 65
                    created_at: '2022-11-15T17:36:02.121Z'
                    updated_at: '2022-11-15T17:36:02.121Z'
                  - id: 16
                    name: Administration
                    colour: "#f79b8c"
                    url: http://www.example.com/api/tags/16
                    board_id: 65
                    created_at: '2022-11-15T17:36:02.122Z'
                    updated_at: '2022-11-15T17:36:02.122Z'
                  - id: 17
                    name: Consulting
                    colour: "#b4a1e0"
                    url: http://www.example.com/api/tags/17
                    board_id: 65
                    created_at: '2022-11-15T17:36:02.123Z'
                    updated_at: '2022-11-15T17:36:02.123Z'
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/tag_response"
    post:
      summary: Create tag (associated with given task and task's board)
      tags:
      - Tags
      parameters:
      - name: id
        in: path
        description: Task id
        required: true
        schema:
          type: string
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 18
                    name: New Tag
                    colour: "#fff000"
                    url: http://www.example.com/api/tags/18
                    board_id: 66
                    created_at: '2022-11-15T17:36:02.167Z'
                    updated_at: '2022-11-15T17:36:02.167Z'
              schema:
                "$ref": "#/components/schemas/tag_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/tag_request"
  "/api/tags/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show Tags
      tags:
      - Tags
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 19
                    name: Mining
                    colour: "#ed6913"
                    url: http://www.example.com/api/tags/19
                    board_id: 67
                    created_at: '2022-11-15T17:36:02.176Z'
                    updated_at: '2022-11-15T17:36:02.176Z'
              schema:
                "$ref": "#/components/schemas/tag_response"
    put:
      summary: Update Tag
      tags:
      - Tags
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 20
                    name: New Name
                    colour: "#7212a6"
                    url: http://www.example.com/api/tags/20
                    board_id: 68
                    created_at: '2022-11-15T17:36:02.201Z'
                    updated_at: '2022-11-15T17:36:02.215Z'
              schema:
                "$ref": "#/components/schemas/tag_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/tag_request"
    delete:
      summary: Delete tag
      tags:
      - Tags
      responses:
        '204':
          description: successful
  "/api/tasks":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: List tasks
      tags:
      - Tasks
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - id: 16
                    name: 'HIStory: Past, Present and Future, Book I'
                    pos: 65536.0
                    priority: medium
                    spent_time: 0
                    points: 4
                    list_id: 33
                    deleted_at:
                    url: http://www.example.com/api/tasks/16
                    list_url: http://www.example.com/api/lists/33
                    description: "# Ipsa\nUllam ex laudantium. Deserunt accusamus
                      sed. Enim nisi sunt.\n* Quia. \n* Odit. \n* Alias. \n* Autem.
                      \n"
                    created_at: '2022-11-15T17:36:02.246Z'
                    updated_at: '2022-11-15T17:36:02.246Z'
                  - id: 17
                    name: The Sign
                    pos: 65536.0
                    priority: medium
                    spent_time: 0
                    points: 5
                    list_id: 34
                    deleted_at:
                    url: http://www.example.com/api/tasks/17
                    list_url: http://www.example.com/api/lists/34
                    description: |-
                      # Nobis
                      Doloremque beatae nobis. Sed sit omnis. Voluptas et eos. Veniam magnam molestias. Impedit facere vero.
                      ##### Consequatur
                    created_at: '2022-11-15T17:36:02.254Z'
                    updated_at: '2022-11-15T17:36:02.254Z'
                  - id: 18
                    name: Led Zeppelin IV
                    pos: 65536.0
                    priority: medium
                    spent_time: 0
                    points: 1
                    list_id: 35
                    deleted_at:
                    url: http://www.example.com/api/tasks/18
                    list_url: http://www.example.com/api/lists/35
                    description: |-
                      ## Earum
                      Culpa incidunt rerum. Eum voluptatem cum. Rerum hic sunt. Eligendi qui labore. Quos et repellendus.
                      #### Molestiae
                      Perspiciatis quibusdam commodi. Mollitia quasi ullam. Consectetur rerum perspiciatis.
                      `Impedit.`
                    created_at: '2022-11-15T17:36:02.262Z'
                    updated_at: '2022-11-15T17:36:02.262Z'
                  - id: 19
                    name: No Jacket Required
                    pos: 65536.0
                    priority: very_high
                    spent_time: 0
                    points: 5
                    list_id: 36
                    deleted_at:
                    url: http://www.example.com/api/tasks/19
                    list_url: http://www.example.com/api/lists/36
                    description: "# Asperiores\nTempore laborum illum. Dolores maiores
                      minus. Quia laboriosam nesciunt. Dolorem blanditiis a. Esse
                      sunt consequatur. Molestias tenetur fuga.\n* Optio. \n* Porro.
                      \n* Aliquam. \n* Sit. \n* Enim. \n"
                    created_at: '2022-11-15T17:36:02.270Z'
                    updated_at: '2022-11-15T17:36:02.270Z'
                  - id: 20
                    name: Recovery
                    pos: 65536.0
                    priority: high
                    spent_time: 0
                    points: 5
                    list_id: 37
                    deleted_at:
                    url: http://www.example.com/api/tasks/20
                    list_url: http://www.example.com/api/lists/37
                    description: "##### Placeat\nQuia aut delectus. Velit at facilis.
                      Placeat repellendus sed. Aspernatur optio reiciendis. Quas ex
                      voluptas. Debitis consectetur quasi.\n* Explicabo. \n* Asperiores.
                      \n* Omnis. \n"
                    created_at: '2022-11-15T17:36:02.278Z'
                    updated_at: '2022-11-15T17:36:02.278Z'
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/task_response"
    post:
      summary: Create Task
      tags:
      - Tasks
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 21
                    name: New Task
                    pos: 65536.0
                    priority:
                    spent_time: 0
                    points:
                    list_id: 38
                    deleted_at:
                    url: http://www.example.com/api/tasks/21
                    list_url: http://www.example.com/api/lists/38
                    description:
                    created_at: '2022-11-15T17:36:02.321Z'
                    updated_at: '2022-11-15T17:36:02.321Z'
              schema:
                "$ref": "#/components/schemas/task_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/task_request"
  "/api/tasks/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Task id
      required: true
      schema:
        type: string
    get:
      summary: Show Taks
      parameters:
      - name: include_associations
        in: query
        required: false
        description: If true, extended object with all associations is returned.
        schema:
          type: string
      tags:
      - Tasks
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful with `include_associations=true`:
                  summary: successful with `include_associations=true`
                  value:
                    id: 22
                    name: Hotel California
                    pos: 65536.0
                    priority: very_low
                    spent_time: 0
                    points: 2
                    list_id: 39
                    deleted_at:
                    url: http://www.example.com/api/tasks/22
                    list_url: http://www.example.com/api/lists/39
                    description: |-
                      ###### Earum
                      Vitae omnis molestiae. Autem magni vero. Saepe aut exercitationem.
                      #### Vel
                      Et dolorem et. Et error et. Numquam quasi et.
                      `Repellat.`
                    created_at: '2022-11-15T17:36:02.336Z'
                    updated_at: '2022-11-15T17:36:02.336Z'
                    list:
                      id: 39
                      name: raspberry
                      pos: 65536.0
                      visible: false
                      deleted_at:
                      board_id: 76
                      created_at: '2022-11-15T17:36:02.331Z'
                      updated_at: '2022-11-15T17:36:02.331Z'
                      url: http://www.example.com/api/lists/39
                      board_url: http://www.example.com/api/boards/76
                    author:
                      id: 144
                      name: Rhett Zieme
                      avatar_url: https://www.gravatar.com/avatar/96394582a3f59f4a2fd89d8c19672385
                      role: regular
                      url: http://www.example.com/api/users/144
                      email: rhett_zieme.1668533762@example.com
                      created_at: '2022-11-15T17:36:02.335Z'
                      updated_at: '2022-11-15T17:36:02.335Z'
                    users:
                    - id: 145
                      name: Rhett Collins II
                      avatar_url: https://www.gravatar.com/avatar/53e30b9ea1e6887a573ca5f5ed35a732
                      role: developer
                      url: http://www.example.com/api/users/145
                      email: rhett_collins_ii.1668533762@example.com
                      created_at: '2022-11-15T17:36:02.340Z'
                      updated_at: '2022-11-15T17:36:02.340Z'
                    - id: 146
                      name: Roman Lowe
                      avatar_url: https://www.gravatar.com/avatar/db51608a97c9cc4f1e49473612407496
                      role: manager
                      url: http://www.example.com/api/users/146
                      email: roman_lowe.1668533762@example.com
                      created_at: '2022-11-15T17:36:02.343Z'
                      updated_at: '2022-11-15T17:36:02.343Z'
                    tags:
                    - id: 22
                      name: Legal
                      colour: "#db54c4"
                      url: http://www.example.com/api/tags/22
                      board_id: 77
                      created_at: '2022-11-15T17:36:02.346Z'
                      updated_at: '2022-11-15T17:36:02.346Z'
                    - id: 23
                      name: Hospitality
                      colour: "#3e7895"
                      url: http://www.example.com/api/tags/23
                      board_id: 78
                      created_at: '2022-11-15T17:36:02.349Z'
                      updated_at: '2022-11-15T17:36:02.349Z'
                    - id: 24
                      name: Marketing
                      colour: "#1c2034"
                      url: http://www.example.com/api/tags/24
                      board_id: 79
                      created_at: '2022-11-15T17:36:02.352Z'
                      updated_at: '2022-11-15T17:36:02.352Z'
                successful:
                  summary: successful
                  value:
                    id: 23
                    name: Slippery When Wet
                    pos: 65536.0
                    priority: very_high
                    spent_time: 0
                    points: 2
                    list_id: 40
                    deleted_at:
                    url: http://www.example.com/api/tasks/23
                    list_url: http://www.example.com/api/lists/40
                    description: |-
                      ### Consequuntur
                      Et itaque sit. Recusandae expedita consectetur. Alias itaque et. Soluta dolorem debitis. Aut laborum voluptatem. Architecto nam maiores.
                      quidem | adipisci | et
                      ---- | ---- | ----
                      quaerat | eveniet | ut
                      non | aut | laborum
                    created_at: '2022-11-15T17:36:02.382Z'
                    updated_at: '2022-11-15T17:36:02.382Z'
              schema:
                "$ref": "#/components/schemas/task_response"
    put:
      summary: Update Task
      tags:
      - Tasks
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 24
                    name: New Name
                    pos: 65536.0
                    priority: medium
                    spent_time: 0
                    points: 1
                    list_id: 41
                    deleted_at:
                    url: http://www.example.com/api/tasks/24
                    list_url: http://www.example.com/api/lists/41
                    description: "##### Veniam\nFugit dignissimos fugiat. Recusandae
                      temporibus repudiandae. Minus ducimus et. Inventore consequatur
                      ipsam.\n0. Et. \n1. Sit. \n2. Incidunt. \n3. Et. \n4. Dolor.
                      \n5. Dolor. \n"
                    created_at: '2022-11-15T17:36:02.446Z'
                    updated_at: '2022-11-15T17:36:02.488Z'
              schema:
                "$ref": "#/components/schemas/task_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/task_request"
    delete:
      summary: Delete Task
      tags:
      - Tasks
      responses:
        '204':
          description: successful
  "/api/tasks/{id}/add_time":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Task id
      required: true
      schema:
        type: string
    put:
      summary: Add time
      tags:
      - Tasks
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 26
                    name: Slippery When Wet
                    pos: 65536.0
                    priority: very_low
                    spent_time: 1200
                    points: 2
                    list_id: 43
                    deleted_at:
                    url: http://www.example.com/api/tasks/26
                    list_url: http://www.example.com/api/lists/43
                    description: "## Aut\nSed odio est. Ipsum et ab. Doloribus et
                      aperiam. Dolorem voluptates architecto. Maxime alias dignissimos.
                      Nisi eligendi occaecati.\n* Sit. \n* Repudiandae. \n* Qui. \n"
                    created_at: '2022-11-15T17:36:02.530Z'
                    updated_at: '2022-11-15T17:36:02.546Z'
        '422':
          description: non integer time
          content:
            application/json:
              examples:
                incorrect unit:
                  summary: incorrect unit
                  value:
                    unit:
                    - is not included in the list
                negative time:
                  summary: negative time
                  value:
                    time:
                    - must be greater than 0
                non integer time:
                  summary: non integer time
                  value:
                    time:
                    - must be greater than 0
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                time:
                  type: integer
                unit:
                  type: string
                  enum: "#<Set: {:day, :hour, :minute, :second}>"
  "/api/tasks/{id}/attach_tag":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Task id
      required: true
      schema:
        type: string
    post:
      summary: Attach Tag
      tags:
      - Tasks
      parameters: []
      responses:
        '204':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                tag_id:
                  type: integer
  "/api/tasks/{id}/detach_tag":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Task id
      required: true
      schema:
        type: string
    post:
      summary: Detach Tag
      tags:
      - Tasks
      parameters: []
      responses:
        '204':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                tag_id:
                  type: integer
  "/api/tasks/{id}/assign_user":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Task id
      required: true
      schema:
        type: string
    post:
      summary: Assign User
      tags:
      - Tasks
      parameters: []
      responses:
        '204':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
  "/api/tasks/{id}/unassign_user":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Task id
      required: true
      schema:
        type: string
    post:
      summary: Unassign User
      tags:
      - Tasks
      parameters: []
      responses:
        '204':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
  "/api/workspaces/{id}/users":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: List users of workspace
      tags:
      - Users
      parameters:
      - name: id
        in: path
        description: Workspace id
        required: true
        schema:
          type: string
      - name: page
        in: query
        required: false
        description: Decides which result page should be returned.
        example: 2
        schema:
          type: integer
      - name: role
        in: query
        required: false
        schema:
          "$ref": "#/components/schemas/user_request/properties/role"
        example: admin
      - name: created_at_from
        in: query
        required: false
        description: Date with format YYYY.MM.DD
        example: 2010.01.25
        schema:
          type: string
      - name: created_at_to
        in: query
        required: false
        description: Date with format YYYY.MM.DD
        example: 2010.01.25
        schema:
          type: string
      - name: search
        in: query
        required: false
        description: Searches for users by name and e-mail.
        example: michael
        schema:
          type: string
      - name: per
        in: query
        required: false
        description: Decides how many entities should be returned per one page. **Works
          only, when `page` param is given.**
        example: 2
        schema:
          type: integer
      - name: limit
        in: query
        required: false
        description: Decides how many entities should be returned.
        example: 3
        schema:
          type: integer
      responses:
        '200':
          description: successful with pages
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    users:
                    - id: 172
                      name: Fr. Darrick Gutmann
                      avatar_url: https://www.gravatar.com/avatar/017fe9022cf03b434a718d793827dc3d
                      role: manager
                      url: http://www.example.com/api/users/172
                      email: fr_darrick_gutmann.1668533762@example.com
                      created_at: '2022-11-15T17:36:02.725Z'
                      updated_at: '2022-11-15T17:36:02.725Z'
                    - id: 173
                      name: Miss Landon Murphy
                      avatar_url: https://www.gravatar.com/avatar/ec350a55212e052bd90c7101283ca53e
                      role: regular
                      url: http://www.example.com/api/users/173
                      email: miss_landon_murphy.1668533762@example.com
                      created_at: '2022-11-15T17:36:02.736Z'
                      updated_at: '2022-11-15T17:36:02.736Z'
                    - id: 174
                      name: Angelo Zieme DDS
                      avatar_url: https://www.gravatar.com/avatar/071c194d6c0b757f233391410796b2ab
                      role: regular
                      url: http://www.example.com/api/users/174
                      email: angelo_zieme_dds.1668533762@example.com
                      created_at: '2022-11-15T17:36:02.740Z'
                      updated_at: '2022-11-15T17:36:02.740Z'
                successful with pages:
                  summary: successful with pages
                  value:
                    users:
                    - id: 176
                      name: Shavon Halvorson
                      avatar_url: https://www.gravatar.com/avatar/1ecd8c86e7e4679b52c5a1ad98b1c95a
                      role: developer
                      url: http://www.example.com/api/users/176
                      email: shavon_halvorson.1668533762@example.com
                      created_at: '2022-11-15T17:36:02.769Z'
                      updated_at: '2022-11-15T17:36:02.769Z'
                    - id: 177
                      name: Larae Marquardt
                      avatar_url: https://www.gravatar.com/avatar/e43e86205c858a22e07cd8874c026940
                      role: regular
                      url: http://www.example.com/api/users/177
                      email: larae_marquardt.1668533762@example.com
                      created_at: '2022-11-15T17:36:02.773Z'
                      updated_at: '2022-11-15T17:36:02.773Z'
                    - id: 178
                      name: Venessa Dach CPA
                      avatar_url: https://www.gravatar.com/avatar/fbc7c9b94dbeb6c02a9e7cd5abb58b45
                      role: guest
                      url: http://www.example.com/api/users/178
                      email: venessa_dach_cpa.1668533762@example.com
                      created_at: '2022-11-15T17:36:02.777Z'
                      updated_at: '2022-11-15T17:36:02.777Z'
                    total_pages: 1
              schema:
                "$ref": "#/components/schemas/user_pages_response"
  "/api/users":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: List users
      tags:
      - Users
      parameters:
      - name: role_collection
        in: query
        schema:
          type: array
          items:
            "$ref": "#/components/schemas/user_request/properties/role"
        example:
        - admin
      - name: role
        in: query
        required: false
        schema:
          "$ref": "#/components/schemas/user_request/properties/role"
        example: admin
      - name: created_at_from
        in: query
        required: false
        description: Date with format YYYY.MM.DD
        example: 2010.01.25
        schema:
          type: string
      - name: created_at_to
        in: query
        required: false
        description: Date with format YYYY.MM.DD
        example: 2010.01.25
        schema:
          type: string
      - name: workspace_id
        in: query
        required: false
        example: 1
        schema:
          type: integer
      - name: search
        in: query
        required: false
        description: Searches for users by name and e-mail.
        example: michael
        schema:
          type: string
      - name: page
        in: query
        required: false
        description: Decides which result page should be returned.
        example: 2
        schema:
          type: integer
      - name: per
        in: query
        required: false
        description: Decides how many entities should be returned per one page. **Works
          only, when `page` param is given.**
        example: 2
        schema:
          type: integer
      - name: limit
        in: query
        required: false
        description: Decides how many entities should be returned.
        example: 3
        schema:
          type: integer
      responses:
        '200':
          description: successful with pages
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    users:
                    - id: 180
                      name: Manual Cremin
                      avatar_url: https://www.gravatar.com/avatar/b1346fc08c296dd9f5226d27e3f0b0b9
                      role: regular
                      url: http://www.example.com/api/users/180
                      email: manual_cremin.1668533762@example.com
                      created_at: '2022-11-15T17:36:02.798Z'
                      updated_at: '2022-11-15T17:36:02.798Z'
                    - id: 181
                      name: Mrs. Waylon Tromp
                      avatar_url: https://www.gravatar.com/avatar/9bdb54ca252b45c334d79b81fccb8f99
                      role: regular
                      url: http://www.example.com/api/users/181
                      email: mrs_waylon_tromp.1668533762@example.com
                      created_at: '2022-11-15T17:36:02.801Z'
                      updated_at: '2022-11-15T17:36:02.801Z'
                    - id: 182
                      name: Juan Reichel
                      avatar_url: https://www.gravatar.com/avatar/368362020a5aeb4832aadc32685c1c9c
                      role: regular
                      url: http://www.example.com/api/users/182
                      email: juan_reichel.1668533762@example.com
                      created_at: '2022-11-15T17:36:02.804Z'
                      updated_at: '2022-11-15T17:36:02.804Z'
                    - id: 183
                      name: May Funk
                      avatar_url: https://www.gravatar.com/avatar/d85799ed0587bcf074f877c4ff871dd8
                      role: developer
                      url: http://www.example.com/api/users/183
                      email: may_funk.1668533762@example.com
                      created_at: '2022-11-15T17:36:02.806Z'
                      updated_at: '2022-11-15T17:36:02.806Z'
                    - id: 184
                      name: Amb. Meghan Pagac
                      avatar_url: https://www.gravatar.com/avatar/0385b0aa31e068d9a8a28aced69c4a71
                      role: regular
                      url: http://www.example.com/api/users/184
                      email: amb_meghan_pagac.1668533762@example.com
                      created_at: '2022-11-15T17:36:02.809Z'
                      updated_at: '2022-11-15T17:36:02.809Z'
                    - id: 185
                      name: Rep. Dorsey Walter
                      avatar_url: https://www.gravatar.com/avatar/d51717d0b0f1ef877910bb5776d3e0d0
                      role: admin
                      url: http://www.example.com/api/users/185
                      email: rep_dorsey_walter.1668533762@example.com
                      created_at: '2022-11-15T17:36:02.812Z'
                      updated_at: '2022-11-15T17:36:02.812Z'
                successful with pages:
                  summary: successful with pages
                  value:
                    users:
                    - id: 186
                      name: Jennette Vandervort
                      avatar_url: https://www.gravatar.com/avatar/ec06186567489e5e3edeb43b1dd2aae0
                      role: regular
                      url: http://www.example.com/api/users/186
                      email: jennette_vandervort.1668533762@example.com
                      created_at: '2022-11-15T17:36:02.829Z'
                      updated_at: '2022-11-15T17:36:02.829Z'
                    - id: 187
                      name: Dianne Sporer
                      avatar_url: https://www.gravatar.com/avatar/e74a018cafe7c4d4b856bdc38032ecb8
                      role: manager
                      url: http://www.example.com/api/users/187
                      email: dianne_sporer.1668533762@example.com
                      created_at: '2022-11-15T17:36:02.832Z'
                      updated_at: '2022-11-15T17:36:02.832Z'
                    - id: 188
                      name: Ashley Mante
                      avatar_url: https://www.gravatar.com/avatar/801286956d86dbbcdb00ef30edc465da
                      role: guest
                      url: http://www.example.com/api/users/188
                      email: ashley_mante.1668533762@example.com
                      created_at: '2022-11-15T17:36:02.835Z'
                      updated_at: '2022-11-15T17:36:02.835Z'
                    - id: 189
                      name: Minna Schneider
                      avatar_url: https://www.gravatar.com/avatar/399a5fe92fd7887c876936ec6692e301
                      role: developer
                      url: http://www.example.com/api/users/189
                      email: minna_schneider.1668533762@example.com
                      created_at: '2022-11-15T17:36:02.837Z'
                      updated_at: '2022-11-15T17:36:02.837Z'
                    - id: 190
                      name: Mary Collins
                      avatar_url: https://www.gravatar.com/avatar/d7ca99733fd474a2bcc7ed8daa4d3c6c
                      role: manager
                      url: http://www.example.com/api/users/190
                      email: mary_collins.1668533762@example.com
                      created_at: '2022-11-15T17:36:02.840Z'
                      updated_at: '2022-11-15T17:36:02.840Z'
                    - id: 191
                      name: Janeen Rutherford DO
                      avatar_url: https://www.gravatar.com/avatar/57e8daf1e14d462910c30e45a6d84610
                      role: admin
                      url: http://www.example.com/api/users/191
                      email: janeen_rutherford_do.1668533762@example.com
                      created_at: '2022-11-15T17:36:02.843Z'
                      updated_at: '2022-11-15T17:36:02.843Z'
                    total_pages: 1
              schema:
                "$ref": "#/components/schemas/user_pages_response"
    post:
      summary: Create a user
      tags:
      - Users
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 193
                    name: New User
                    created_at: '2022-11-15T17:36:02.874Z'
                    updated_at: '2022-11-15T17:36:02.874Z'
                    email: new_user@example.com
                    role: developer
                    deleted_at:
                    recent_boards: []
              schema:
                "$ref": "#/components/schemas/user_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/user_request"
    put:
      summary: Update current user
      tags:
      - Users
      parameters: []
      responses:
        '204':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/user_update_request"
    delete:
      summary: Delete current user
      tags:
      - Users
      responses:
        '204':
          description: successful
  "/api/users/current":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: Show the currently signed in user
      tags:
      - Users
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 196
                    name: Ernie Osinski
                    avatar_url: https://www.gravatar.com/avatar/3674452a62419b44eafe7b2ebef92caa
                    role: admin
                    url: http://www.example.com/api/users/196
                    email: ernie_osinski.1668533762@example.com
                    created_at: '2022-11-15T17:36:02.916Z'
                    updated_at: '2022-11-15T17:36:02.916Z'
              schema:
                "$ref": "#/components/schemas/user_response"
  "/api/users/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show a user
      tags:
      - Users
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 197
                    name: Colton Waelchi Sr.
                    avatar_url: https://www.gravatar.com/avatar/031566e9eb63323719c003d1a0db6c62
                    role: manager
                    url: http://www.example.com/api/users/197
                    email: colton_waelchi_sr.1668533762@example.com
                    created_at: '2022-11-15T17:36:02.932Z'
                    updated_at: '2022-11-15T17:36:02.932Z'
              schema:
                "$ref": "#/components/schemas/user_response"
  "/api/users/sign_in":
    post:
      summary: Sign in
      tags:
      - Users
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 199
                    name: Milford Goyette II
                    created_at: '2022-11-15T17:36:02.949Z'
                    updated_at: '2022-11-15T17:36:02.949Z'
                    email: email@example.com
                    role: regular
                    deleted_at:
                    recent_boards: []
              schema:
                "$ref": "#/components/schemas/user_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/user_sign_in_request"
  "/api/users/sign_out":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    delete:
      summary: Sign out
      tags:
      - Users
      responses:
        '204':
          description: successful
  "/api/workspaces":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: list workspaces
      tags:
      - Workspaces
      security:
      - Bearer: {}
      parameters:
      - name: limit
        in: query
        description: Decides how many entities should be returned
        example: 3
        required: false
        schema:
          type: integer
      - name: boards
        in: query
        type: string
        schema:
          "$ref": "#/components/schemas/include_associated_enum"
        required: false
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful with `boards=all`:
                  summary: successful with `boards=all`
                  value:
                  - id: 95
                    name: Zathin
                    created_at: '2022-11-15T17:36:02.990Z'
                    updated_at: '2022-11-15T17:36:02.990Z'
                    deleted_at:
                    url: http://www.example.com/api/workspaces/95
                    boards:
                    - id: 93
                      name: Livermorium
                      colour: "#c2853f"
                      workspace_id: 95
                      created_at: '2022-11-15T17:36:02.992Z'
                      updated_at: '2022-11-15T17:36:02.992Z'
                      deleted_at:
                      url: http://www.example.com/api/boards/93
                      workspace_url: http://www.example.com/api/workspaces/95
                    - id: 94
                      name: Thallium
                      colour: "#57d135"
                      workspace_id: 95
                      created_at: '2022-11-15T17:36:02.993Z'
                      updated_at: '2022-11-15T17:36:02.993Z'
                      deleted_at:
                      url: http://www.example.com/api/boards/94
                      workspace_url: http://www.example.com/api/workspaces/95
                    - id: 95
                      name: Nitrogen
                      colour: "#d6fbb6"
                      workspace_id: 95
                      created_at: '2022-11-15T17:36:02.994Z'
                      updated_at: '2022-11-15T17:36:02.994Z'
                      deleted_at:
                      url: http://www.example.com/api/boards/95
                      workspace_url: http://www.example.com/api/workspaces/95
                    - id: 96
                      name: Rhodium
                      colour: "#636579"
                      workspace_id: 95
                      created_at: '2022-11-15T17:36:02.995Z'
                      updated_at: '2022-11-15T17:36:02.995Z'
                      deleted_at:
                      url: http://www.example.com/api/boards/96
                      workspace_url: http://www.example.com/api/workspaces/95
                    - id: 97
                      name: Lithium
                      colour: "#c52af4"
                      workspace_id: 95
                      created_at: '2022-11-15T17:36:02.995Z'
                      updated_at: '2022-11-15T17:36:02.995Z'
                      deleted_at:
                      url: http://www.example.com/api/boards/97
                      workspace_url: http://www.example.com/api/workspaces/95
                  - id: 96
                    name: Bigtax
                    created_at: '2022-11-15T17:36:02.996Z'
                    updated_at: '2022-11-15T17:36:02.996Z'
                    deleted_at:
                    url: http://www.example.com/api/workspaces/96
                    boards: []
                successful:
                  summary: successful
                  value:
                  - id: 97
                    name: Redhold
                    created_at: '2022-11-15T17:36:03.028Z'
                    updated_at: '2022-11-15T17:36:03.028Z'
                    deleted_at:
                    url: http://www.example.com/api/workspaces/97
                  - id: 98
                    name: Biodex
                    created_at: '2022-11-15T17:36:03.030Z'
                    updated_at: '2022-11-15T17:36:03.030Z'
                    deleted_at:
                    url: http://www.example.com/api/workspaces/98
                  - id: 99
                    name: Greenlam
                    created_at: '2022-11-15T17:36:03.032Z'
                    updated_at: '2022-11-15T17:36:03.032Z'
                    deleted_at:
                    url: http://www.example.com/api/workspaces/99
                  - id: 100
                    name: Tempsoft
                    created_at: '2022-11-15T17:36:03.034Z'
                    updated_at: '2022-11-15T17:36:03.034Z'
                    deleted_at:
                    url: http://www.example.com/api/workspaces/100
                  - id: 101
                    name: Solarbreeze
                    created_at: '2022-11-15T17:36:03.035Z'
                    updated_at: '2022-11-15T17:36:03.035Z'
                    deleted_at:
                    url: http://www.example.com/api/workspaces/101
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/workspace_response"
    post:
      summary: create workspace
      tags:
      - Workspaces
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 102
                    name: New Workspace
                    created_at: '2022-11-15T17:36:03.069Z'
                    updated_at: '2022-11-15T17:36:03.069Z'
                    deleted_at:
                    url: http://www.example.com/api/workspaces/102
              schema:
                "$ref": "#/components/schemas/workspace_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/workspace_request"
  "/api/workspaces/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show workspace
      parameters:
      - name: boards
        in: query
        type: string
        schema:
          "$ref": "#/components/schemas/include_associated_enum"
        required: false
      tags:
      - Workspaces
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful with `boards=all`:
                  summary: successful with `boards=all`
                  value:
                    id: 103
                    name: Flexidy
                    created_at: '2022-11-15T17:36:03.079Z'
                    updated_at: '2022-11-15T17:36:03.079Z'
                    deleted_at:
                    url: http://www.example.com/api/workspaces/103
                    boards:
                    - id: 98
                      name: Ytterbium
                      colour: "#f78a80"
                      workspace_id: 103
                      created_at: '2022-11-15T17:36:03.080Z'
                      updated_at: '2022-11-15T17:36:03.081Z'
                      deleted_at:
                      url: http://www.example.com/api/boards/98
                      workspace_url: http://www.example.com/api/workspaces/103
                    - id: 99
                      name: Molybdenum
                      colour: "#8616c1"
                      workspace_id: 103
                      created_at: '2022-11-15T17:36:03.083Z'
                      updated_at: '2022-11-15T17:36:03.083Z'
                      deleted_at:
                      url: http://www.example.com/api/boards/99
                      workspace_url: http://www.example.com/api/workspaces/103
                successful:
                  summary: successful
                  value:
                    id: 106
                    name: Tin
                    created_at: '2022-11-15T17:36:03.105Z'
                    updated_at: '2022-11-15T17:36:03.105Z'
                    deleted_at:
                    url: http://www.example.com/api/workspaces/106
              schema:
                "$ref": "#/components/schemas/workspace_response"
    put:
      summary: update workspace
      tags:
      - Workspaces
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 107
                    name: New Name
                    created_at: '2022-11-15T17:36:03.125Z'
                    updated_at: '2022-11-15T17:36:03.137Z'
                    deleted_at:
                    url: http://www.example.com/api/workspaces/107
              schema:
                "$ref": "#/components/schemas/workspace_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/workspace_request"
    delete:
      summary: delete workspace
      tags:
      - Workspaces
      responses:
        '204':
          description: successful
  "/api/workspaces/{id}/assign_user":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Workspace id
      required: true
      schema:
        type: string
    post:
      summary: Assign User
      tags:
      - Workspaces
      parameters: []
      responses:
        '204':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
  "/api/workspaces/{id}/unassign_user":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Workspace id
      required: true
      schema:
        type: string
    post:
      summary: Unassign User
      tags:
      - Workspaces
      parameters: []
      responses:
        '204':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
components:
  schemas:
    authorization:
      name: Authorization
      in: header
      type: string
      description: JWT token
      example: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiZGV2ZWxvcGVyIiwic3ViIjoiMSIsInNjcCI6InVzZXIiLCJhdWQiOm51bGwsImlhdCI6MTY2NjE4MDIzMiwiZXhwIjoxNjY3NDc2MjMyLCJqdGkiOiJhMzdlZTA5MC0zZGJmLTRhMzgtOTFiNy1mZTJlM2FiYjlkY2QifQ.tGGjFHfMszfGCfNZS6I-hQNLSu_2Xfs3W4hI8IT4CW0
      required: true
    include_associated_enum:
      type: string
      enum:
      - visible
      - invisible
      - non-archived
      - archived
      - all
    lambdee_models_enum:
      type: string
      enum:
      - DB::User
      - DB::Workspace
      - DB::Board
      - DB::List
      - DB::Task
      - DB::Comment
      - DB::Tag
      - DB::Sprint
      - DB::UserWorkspace
      - DB::TaskUser
      - DB::TaskTag
      - DB::SprintTask
    user_pages_response:
      type: object
      properties:
        users:
          type: array
          items:
            "$ref": "#components/schemas/user_response"
        total_pages:
          type: integer
      required:
      - users
    user_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        avatar_url:
          type: string
        url:
          type: string
        role:
          type: string
      required:
      - id
      - name
    user_request:
      type: object
      properties:
        user:
          type: object
          properties:
            name:
              type: string
            email:
              type: string
            password:
              type: string
            role:
              type: string
              enum:
              - guest
              - regular
              - developer
              - admin
              - manager
      required:
      - name
      - email
    user_update_request:
      type: object
      properties:
        user:
          type: object
          properties:
            name:
              type: string
            email:
              type: string
            password:
              type: string
            current_password:
              type: string
            role:
              type: string
              enum:
              - guest
              - regular
              - developer
              - admin
              - manager
      required:
      - current_password
    user_sign_in_request:
      type: object
      properties:
        user:
          type: object
          properties:
            email:
              type: string
            password:
              type: string
      required:
      - email
      - password
    comment_response:
      type: object
      properties:
        id:
          type: integer
        body:
          type: string
        deleted_at:
          type:
          - string
          - 'null'
          format: date_time
        author_id:
          type: integer
        task_id:
          type: integer
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        url:
          type: string
        users:
          type: array
          items:
            "$ref": "#/components/schemas/user_response"
          nullable: true
      required:
      - id
      - body
      - deleted_at
      - url
    tag_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        colour:
          type: string
        board_id:
          type: integer
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        url:
          type: string
        board_url:
          type: string
      required:
      - id
    tag_request:
      type: object
      properties:
        name:
          type: string
        colour:
          type: string
        board_id:
          type: integer
        task_id:
          type: integer
      required: []
    sprint_pages_response:
      type: object
      properties:
        sprints:
          type: array
          items:
            "$ref": "#components/schemas/sprint_response"
        total_pages:
          type: integer
      required:
      - sprints
    sprint_response:
      type: object
      properties:
        id:
          type: integer
        board_id:
          type: integer
        name:
          type: string
        description:
          type:
          - string
          - 'null'
        started_at:
          type: string
          format: date_time
        expected_end_at:
          type: string
          format: date_time
        ended_at:
          type:
          - string
          - 'null'
          format: date_time
        final_list_name:
          type: string
        url:
          type: string
        tasks:
          type: array
          items:
            "$ref": "#/components/schemas/task_with_sprint_task_response"
          nullable: true
      required:
      - id
      - name
    task_with_sprint_task_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        priority:
          type: string
        spent_time:
          type: integer
        points:
          type: integer
        added_at:
          type: string
          format: date_time
        completed_at:
          type:
          - string
          - 'null'
          format: date_time
        start_state:
          type: string
        state:
          type: string
      required:
      - id
    sprint_request:
      type: object
      properties:
        board_id:
          type: integer
        name:
          type: string
        description:
          type: string
        started_at:
          type: string
          format: date_time
          example: '2025-12-11T23:00:00'
        expected_end_at:
          type: string
          format: date_time
          example: '2025-12-18T23:00:00'
      required:
      - name
      - expected_end_at
    task_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type:
          - string
          - 'null'
        pos:
          type:
          - number
          - 'null'
          format: float
        priority:
          type:
          - string
          - 'null'
        points:
          type:
          - number
          - 'null'
          format: float
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        deleted_at:
          type:
          - string
          - 'null'
          format: date_time
        list_id:
          type: integer
        list_url:
          type: string
        url:
          type: string
        users:
          type: array
          items:
            "$ref": "#/components/schemas/user_response"
          nullable: true
        tags:
          type: array
          items:
            "$ref": "#/components/schemas/tag_response"
          nullable: true
        author:
          type: object
          schema:
            "$ref": "#/components/schemas/user_response"
          nullable: true
      required:
      - id
      - name
      - pos
      - priority
      - points
      - list_id
      - deleted_at
    task_request:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        pos:
          type: number
          format: float
          description: If not given, value will be set as for the last item in the
            list.
        priority:
          type: string
          enum:
          - very_low
          - low
          - medium
          - high
          - very_high
        points:
          type: number
          format: float
        list_id:
          type: integer
        author_id:
          type: integer
      required:
      - name
      - list_id
      - author_id
    list_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        pos:
          type: number
          format: float
        visible:
          type:
          - boolean
          - 'null'
        deleted_at:
          type:
          - string
          - 'null'
          format: date_time
        board_id:
          type: integer
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        url:
          type: string
        board_url:
          type: string
        tasks:
          type: array
          items:
            "$ref": "#/components/schemas/task_response"
          nullable: true
      required:
      - id
      - name
      - pos
      - visible
      - board_id
      - created_at
      - updated_at
      - deleted_at
    list_request:
      type: object
      properties:
        name:
          type: string
        pos:
          type: number
          format: float
        visible:
          type: boolean
        board_id:
          type: integer
      required:
      - name
      - board_id
    board_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        workspace_id:
          type: integer
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        deleted_at:
          type:
          - string
          - 'null'
          format: date_time
        url:
          type: string
        workspace_url:
          type: string
        lists:
          type: array
          items:
            "$ref": "#/components/schemas/list_response"
          nullable: true
      required:
      - id
      - name
      - workspace_id
      - created_at
      - updated_at
      - deleted_at
    board_request:
      type: object
      properties:
        name:
          type: string
        workspace_id:
          type: integer
      required:
      - name
      - workspace_id
    workspace_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        deleted_at:
          type:
          - string
          - 'null'
          format: date_time
        url:
          type: string
        boards:
          type: array
          items:
            "$ref": "#/components/schemas/board_response"
          nullable: true
      required:
      - id
      - name
      - created_at
      - updated_at
      - deleted_at
    workspace_request:
      type: object
      properties:
        name:
          type: string
      required:
      - name
    script_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        content:
          type: string
        url:
          type: string
        script_triggers:
          type: array
          items:
            "$ref": "#/components/schemas/nested_script_trigger_response"
      required: []
    script_request:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        content:
          type: string
        script_triggers_attributes:
          type: array
          items:
            "$ref": "#/components/schemas/nested_script_trigger_request"
      required:
      - name
    nested_script_trigger_response:
      type: object
      properties:
        id:
          type: integer
        script_id:
          type:
          - integer
          - 'null'
        subject_type:
          type:
          - string
          - 'null'
        subject_id:
          type:
          - integer
          - 'null'
        action:
          type: string
        url:
          type: string
      required: []
    nested_script_trigger_request:
      type: object
      properties:
        id:
          type: integer
          description: Needed only for updates and destroys.
        script_id:
          type: integer
        subject_type:
          "$ref": "#/components/schemas/lambdee_models_enum"
        subject_id:
          type: integer
        action:
          type: string
          enum:
          - create
          - update
          - destroy
        _destroy:
          type: boolean
          description: If `true` callback for given `id` will be destroyed. Works
            only nested in sprint.
      required:
      - action
    script_trigger_response:
      type: object
      properties:
        id:
          type: integer
        script_id:
          type: integer
        subject_type:
          type:
          - string
          - 'null'
        subject_id:
          type:
          - integer
          - 'null'
        action:
          type: string
        url:
          type: string
      required: []
    script_trigger_request:
      type: object
      properties:
        script_id:
          type: integer
        subject_type:
          "$ref": "#/components/schemas/lambdee_models_enum"
        subject_id:
          type: integer
        action:
          type: string
      required:
      - script_id
      - action
    script_run_response:
      type: object
      properties:
        id:
          type: integer
        script_id:
          type: integer
        initiator_id:
          type: integer
        input:
          type:
          - string
          - 'null'
        output:
          type: string
        url:
          type: string
      required: []
    script_run_request:
      type: object
      properties:
        output:
          type: string
      required: []
servers:
- url: "{defaultProtocol}://{defaultHost}"
  variables:
    defaultProtocol:
      default: http
    defaultHost:
      default: localhost:3000
