---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/boards":
    get:
      summary: list boards
      tags:
      - Boards
      parameters:
      - name: limit
        in: query
        description: Decides how many entities should be returned
        example: 3
        schema:
          type: integer
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
              - id: 1
                name: Oganesson
                workspace_id: 1
                created_at: '2022-05-18T11:27:13.584Z'
                updated_at: '2022-05-18T11:27:13.584Z'
                workspace_url: http://www.example.com/api/workspaces/1
                url: http://www.example.com/api/boards/1
              - id: 2
                name: Tennessine
                workspace_id: 2
                created_at: '2022-05-18T11:27:13.585Z'
                updated_at: '2022-05-18T11:27:13.585Z'
                workspace_url: http://www.example.com/api/workspaces/2
                url: http://www.example.com/api/boards/2
              - id: 3
                name: Ruthenium
                workspace_id: 3
                created_at: '2022-05-18T11:27:13.585Z'
                updated_at: '2022-05-18T11:27:13.585Z'
                workspace_url: http://www.example.com/api/workspaces/3
                url: http://www.example.com/api/boards/3
              - id: 4
                name: Rhodium
                workspace_id: 4
                created_at: '2022-05-18T11:27:13.586Z'
                updated_at: '2022-05-18T11:27:13.586Z'
                workspace_url: http://www.example.com/api/workspaces/4
                url: http://www.example.com/api/boards/4
              - id: 5
                name: Plutonium
                workspace_id: 5
                created_at: '2022-05-18T11:27:13.587Z'
                updated_at: '2022-05-18T11:27:13.587Z'
                workspace_url: http://www.example.com/api/workspaces/5
                url: http://www.example.com/api/boards/5
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/board_response"
    post:
      summary: create board
      tags:
      - Boards
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              example:
                id: 6
                name: New Board
                workspace_id: 6
                created_at: '2022-05-18T11:27:13.645Z'
                updated_at: '2022-05-18T11:27:13.645Z'
                workspace_url: http://www.example.com/api/workspaces/6
                url: http://www.example.com/api/boards/6
              schema:
                "$ref": "#/components/schemas/board_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/board_request"
  "/api/boards/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show board
      tags:
      - Boards
      parameters:
      - name: tasks
        in: query
        type: string
        schema:
          "$ref": "#/components/schemas/include_associated_enum"
      responses:
        '200':
          description: successful include visible
          content:
            application/json:
              example:
                id: 8
                name: Nitrogen
                workspace_id: 8
                created_at: '2022-05-18T11:27:13.664Z'
                updated_at: '2022-05-18T11:27:13.664Z'
                workspace_url: http://www.example.com/api/workspaces/8
                url: http://www.example.com/api/boards/8
              schema:
                "$ref": "#/components/schemas/board_response"
    put:
      summary: update board
      tags:
      - Boards
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                id: 9
                name: New Name
                workspace_id: 9
                created_at: '2022-05-18T11:27:13.674Z'
                updated_at: '2022-05-18T11:27:13.680Z'
                workspace_url: http://www.example.com/api/workspaces/9
                url: http://www.example.com/api/boards/9
              schema:
                "$ref": "#/components/schemas/board_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/board_request"
    delete:
      summary: delete board
      tags:
      - Boards
      responses:
        '204':
          description: successful
  "/api/lists":
    get:
      summary: List lists
      tags:
      - Lists
      responses:
        '200':
          description: successful
          content:
            application/json:
              example: []
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/list_response"
    post:
      summary: Create List
      tags:
      - Lists
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              example:
                id: 1
                name: New List
                pos: 1212.0
                deleted: false
                board_id: 11
                created_at: '2022-05-18T11:27:13.719Z'
                updated_at: '2022-05-18T11:27:13.719Z'
                url: http://www.example.com/api/lists/1
              schema:
                "$ref": "#/components/schemas/list_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/list_request"
  "/api/lists/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show List
      tags:
      - Lists
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                id: 2
                name: amaranth
                pos: 45063.0
                deleted: false
                board_id: 12
                created_at: '2022-05-18T11:27:13.726Z'
                updated_at: '2022-05-18T11:27:13.726Z'
                url: http://www.example.com/api/lists/2
              schema:
                "$ref": "#/components/schemas/list_response"
    put:
      summary: Update list
      tags:
      - Lists
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                id: 3
                name: New Name
                pos: 48019.0
                deleted: false
                board_id: 13
                created_at: '2022-05-18T11:27:13.739Z'
                updated_at: '2022-05-18T11:27:13.746Z'
                url: http://www.example.com/api/lists/3
              schema:
                "$ref": "#/components/schemas/list_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/list_request"
    delete:
      summary: Delete list
      tags:
      - Lists
      responses:
        '204':
          description: successful
  "/api/users":
    get:
      summary: List users
      tags:
      - Users
      parameters:
      - name: limit
        in: query
        description: Decides how many entities should be returned
        example: 3
        schema:
          type: integer
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
              - id: 12
                name: Jefferson Dare
                email: jefferson_dare.1652873233@example.com
                avatar_url: https://www.gravatar.com/avatar/c5cccc8ff6e8f1ff7c532ab06000aeb2
                created_at: '2022-05-18T11:27:13.762Z'
                updated_at: '2022-05-18T11:27:13.762Z'
                url: http://www.example.com/api/users/12
              - id: 13
                name: Porfirio Greenholt
                email: porfirio_greenholt.1652873233@example.com
                avatar_url: https://www.gravatar.com/avatar/f80975256cb5067ece994707ad36eb2c
                created_at: '2022-05-18T11:27:13.764Z'
                updated_at: '2022-05-18T11:27:13.764Z'
                url: http://www.example.com/api/users/13
              - id: 14
                name: The Hon. Ralph Strosin
                email: the_hon_ralph_strosin.1652873233@example.com
                avatar_url: https://www.gravatar.com/avatar/e2d6f2e1b9cc239cd45b50c8fbf2fbcf
                created_at: '2022-05-18T11:27:13.765Z'
                updated_at: '2022-05-18T11:27:13.765Z'
                url: http://www.example.com/api/users/14
              - id: 15
                name: Bev O'Kon
                email: bev_o'kon.1652873233@example.com
                avatar_url: https://www.gravatar.com/avatar/988d8a577f54f73f57d41165b91b5fa5
                created_at: '2022-05-18T11:27:13.767Z'
                updated_at: '2022-05-18T11:27:13.767Z'
                url: http://www.example.com/api/users/15
              - id: 16
                name: Noel Sawayn JD
                email: noel_sawayn_jd.1652873233@example.com
                avatar_url: https://www.gravatar.com/avatar/41a1905a4547e2191a60d34740a2bfe4
                created_at: '2022-05-18T11:27:13.768Z'
                updated_at: '2022-05-18T11:27:13.768Z'
                url: http://www.example.com/api/users/16
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/user_response"
    post:
      summary: Create a user
      tags:
      - Users
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              example:
                id: 17
                name: New User
                email: new_user@example.com
                avatar_url: https://www.gravatar.com/avatar/d01d74e2303cfd7320eca0fd8ed8bb91
                created_at: '2022-05-18T11:27:13.792Z'
                updated_at: '2022-05-18T11:27:13.792Z'
                url: http://www.example.com/api/users/17
              schema:
                "$ref": "#/components/schemas/user_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/user_request"
  "/api/users/current":
    get:
      summary: Show the currently signed in user
      tags:
      - Users
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                id: 18
                name: Boyd Buckridge
                email: boyd_buckridge.1652873233@example.com
                avatar_url: https://www.gravatar.com/avatar/de2802286319ad2eccd22a145e596e4d
                created_at: '2022-05-18T11:27:13.798Z'
                updated_at: '2022-05-18T11:27:13.798Z'
                url: http://www.example.com/api/users/18
              schema:
                "$ref": "#/components/schemas/user_response"
  "/api/users/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show a user
      tags:
      - Users
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                id: 19
                name: Adele Watsica II
                email: adele_watsica_ii.1652873233@example.com
                avatar_url: https://www.gravatar.com/avatar/a848ef7314cef11f05f7f5626697a3f6
                created_at: '2022-05-18T11:27:13.806Z'
                updated_at: '2022-05-18T11:27:13.806Z'
                url: http://www.example.com/api/users/19
              schema:
                "$ref": "#/components/schemas/user_response"
    put:
      summary: Update a user
      tags:
      - Users
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                id: 20
                name: New Name
                email: new_email@example.com
                avatar_url: https://www.gravatar.com/avatar/560fe38b92f371bd514190a64a9c9159
                created_at: '2022-05-18T11:27:13.816Z'
                updated_at: '2022-05-18T11:27:13.823Z'
                url: http://www.example.com/api/users/20
              schema:
                "$ref": "#/components/schemas/user_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/user_request"
    delete:
      summary: Delete a user
      tags:
      - Users
      responses:
        '204':
          description: successful
  "/api/workspaces":
    get:
      summary: list workspaces
      tags:
      - Workspaces
      parameters:
      - name: limit
        in: query
        description: Decides how many entities should be returned
        example: 3
        schema:
          type: integer
      - name: include
        in: query
        description: Choose which associated entities should be included in the response
        example: boards
        schema:
          type: string
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
              - id: 22
                name: Bitwolf
                created_at: '2022-05-18T11:27:13.891Z'
                updated_at: '2022-05-18T11:27:13.891Z'
                url: http://www.example.com/api/workspaces/22
              - id: 23
                name: Quo Lux
                created_at: '2022-05-18T11:27:13.893Z'
                updated_at: '2022-05-18T11:27:13.893Z'
                url: http://www.example.com/api/workspaces/23
              - id: 24
                name: Prodder
                created_at: '2022-05-18T11:27:13.894Z'
                updated_at: '2022-05-18T11:27:13.894Z'
                url: http://www.example.com/api/workspaces/24
              - id: 25
                name: Cookley
                created_at: '2022-05-18T11:27:13.896Z'
                updated_at: '2022-05-18T11:27:13.896Z'
                url: http://www.example.com/api/workspaces/25
              - id: 26
                name: Otcom
                created_at: '2022-05-18T11:27:13.897Z'
                updated_at: '2022-05-18T11:27:13.897Z'
                url: http://www.example.com/api/workspaces/26
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/workspace_response"
    post:
      summary: create workspace
      tags:
      - Workspaces
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              example:
                id: 27
                name: New Workspace
                created_at: '2022-05-18T11:27:13.915Z'
                updated_at: '2022-05-18T11:27:13.915Z'
                url: http://www.example.com/api/workspaces/27
              schema:
                "$ref": "#/components/schemas/workspace_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/workspace_request"
  "/api/workspaces/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show workspace
      tags:
      - Workspaces
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                id: 28
                name: Stronghold
                created_at: '2022-05-18T11:27:13.921Z'
                updated_at: '2022-05-18T11:27:13.921Z'
                url: http://www.example.com/api/workspaces/28
              schema:
                "$ref": "#/components/schemas/workspace_response"
    put:
      summary: update workspace
      tags:
      - Workspaces
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                id: 29
                name: New Name
                created_at: '2022-05-18T11:27:13.932Z'
                updated_at: '2022-05-18T11:27:13.940Z'
                url: http://www.example.com/api/workspaces/29
              schema:
                "$ref": "#/components/schemas/workspace_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/workspace_request"
    delete:
      summary: delete workspace
      tags:
      - Workspaces
      responses:
        '204':
          description: successful
components:
  schemas:
    include_associated_enum:
      type: string
      enum:
      - visible
      - archived
      - all
    user_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        avatar_url:
          type: string
        url:
          type: string
      required:
      - id
      - name
      - email
      - created_at
      - updated_at
    user_request:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
      required:
      - name
      - email
    task_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        pos:
          type: number
          format: float
        list_id:
          type: integer
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        url:
          type: string
        users:
          type: array
          items:
            "$ref": "#/components/schemas/user_response"
      required:
      - id
      - name
      - pos
      - list_id
      - created_at
      - updated_at
    list_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        pos:
          type: number
        deleted:
          type: boolean
        board_id:
          type: integer
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        url:
          type: string
        board_url:
          type: string
        tasks:
          type: array
          items:
            "$ref": "#/components/schemas/task_response"
      required:
      - id
      - name
      - board_id
      - created_at
      - updated_at
    list_request:
      type: object
      properties:
        name:
          type: string
        pos:
          type: number
        deleted:
          type: boolean
        board_id:
          type: integer
      required:
      - name
      - board_id
    board_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        workspace_id:
          type: integer
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        url:
          type: string
        workspace_url:
          type: string
        lists:
          type: array
          items:
            "$ref": "#/components/schemas/list_response"
      required:
      - id
      - name
      - workspace_id
      - created_at
      - updated_at
    board_request:
      type: object
      properties:
        name:
          type: string
        workspace_id:
          type: integer
      required:
      - name
      - workspace_id
    workspace_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        url:
          type: string
        boards:
          "$ref": "#/components/schemas/board_response"
          nullable: true
      required:
      - id
      - name
      - created_at
      - updated_at
    workspace_request:
      type: object
      properties:
        name:
          type: string
      required:
      - name
servers:
- url: "{defaultProtocol}://{defaultHost}"
  variables:
    defaultProtocol:
      default: http
    defaultHost:
      default: localhost:3000
