---
openapi: 3.0.1
info:
  title: Lambdee API V1
  version: v1
paths:
  "/api/boards":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: list boards
      tags:
      - Boards
      parameters:
      - name: limit
        in: query
        required: false
        description: Decides how many entities should be returned
        example: 3
        schema:
          type: integer
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - id: 1
                    name: Neptunium
                    colour: "#d5f26e"
                    workspace_id: 1
                    created_at: '2022-12-01T01:21:58.963Z'
                    updated_at: '2022-12-01T01:21:58.963Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/boards/1
                    workspace_url: http://www.example.com/api/workspaces/1
                  - id: 2
                    name: Dubnium
                    colour: "#3c56df"
                    workspace_id: 2
                    created_at: '2022-12-01T01:21:58.965Z'
                    updated_at: '2022-12-01T01:21:58.965Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/boards/2
                    workspace_url: http://www.example.com/api/workspaces/2
                  - id: 3
                    name: Oganesson
                    colour: "#2c9c34"
                    workspace_id: 3
                    created_at: '2022-12-01T01:21:58.967Z'
                    updated_at: '2022-12-01T01:21:58.967Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/boards/3
                    workspace_url: http://www.example.com/api/workspaces/3
                  - id: 4
                    name: Praseodymium
                    colour: "#376bc9"
                    workspace_id: 4
                    created_at: '2022-12-01T01:21:58.969Z'
                    updated_at: '2022-12-01T01:21:58.969Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/boards/4
                    workspace_url: http://www.example.com/api/workspaces/4
                  - id: 5
                    name: Mercury
                    colour: "#255c5e"
                    workspace_id: 5
                    created_at: '2022-12-01T01:21:58.971Z'
                    updated_at: '2022-12-01T01:21:58.971Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/boards/5
                    workspace_url: http://www.example.com/api/workspaces/5
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/board_response"
    post:
      summary: create board
      tags:
      - Boards
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 6
                    name: New Board
                    colour:
                    workspace_id: 6
                    created_at: '2022-12-01T01:21:59.045Z'
                    updated_at: '2022-12-01T01:21:59.045Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/boards/6
                    workspace_url: http://www.example.com/api/workspaces/6
              schema:
                "$ref": "#/components/schemas/board_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/board_request"
  "/api/boards/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show board
      tags:
      - Boards
      parameters:
      - name: tasks
        in: query
        type: string
        schema:
          "$ref": "#/components/schemas/include_associated_enum"
        required: false
      - name: lists
        in: query
        type: string
        schema:
          "$ref": "#/components/schemas/include_associated_enum"
        required: false
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful with `lists=all`:
                  summary: successful with `lists=all`
                  value:
                    id: 7
                    name: Mercury
                    colour: "#2faa18"
                    workspace_id: 7
                    created_at: '2022-12-01T01:21:59.057Z'
                    updated_at: '2022-12-01T01:21:59.057Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/boards/7
                    workspace_url: http://www.example.com/api/workspaces/7
                    lists:
                    - id: 1
                      name: aquamarine
                      pos: 65536.0
                      visible: false
                      deleted_at: '2022-12-01T01:21:59.078Z'
                      board_id: 7
                      created_at: '2022-12-01T01:21:59.070Z'
                      updated_at: '2022-12-01T01:21:59.073Z'
                      custom_data: {}
                      url: http://www.example.com/api/lists/1
                      board_url: http://www.example.com/api/boards/7
                    - id: 2
                      name: amaranth
                      pos: 65536.0
                      visible: false
                      deleted_at:
                      board_id: 7
                      created_at: '2022-12-01T01:21:59.082Z'
                      updated_at: '2022-12-01T01:21:59.083Z'
                      custom_data: {}
                      url: http://www.example.com/api/lists/2
                      board_url: http://www.example.com/api/boards/7
                successful with `lists=visible`:
                  summary: successful with `lists=visible`
                  value:
                    id: 10
                    name: Lutetium
                    colour: "#90cfa5"
                    workspace_id: 10
                    created_at: '2022-12-01T01:21:59.110Z'
                    updated_at: '2022-12-01T01:21:59.110Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/boards/10
                    workspace_url: http://www.example.com/api/workspaces/10
                    lists: []
                successful with `lists=archived`:
                  summary: successful with `lists=archived`
                  value:
                    id: 12
                    name: Erbium
                    colour: "#249830"
                    workspace_id: 12
                    created_at: '2022-12-01T01:21:59.141Z'
                    updated_at: '2022-12-01T01:21:59.141Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/boards/12
                    workspace_url: http://www.example.com/api/workspaces/12
                    lists:
                    - id: 4
                      name: gold
                      pos: 65536.0
                      visible: false
                      deleted_at: '2022-12-01T01:21:59.148Z'
                      board_id: 12
                      created_at: '2022-12-01T01:21:59.145Z'
                      updated_at: '2022-12-01T01:21:59.147Z'
                      custom_data: {}
                      url: http://www.example.com/api/lists/4
                      board_url: http://www.example.com/api/boards/12
                    - id: 5
                      name: cerulean
                      pos: 65536.0
                      visible: false
                      deleted_at: '2022-12-01T01:21:59.156Z'
                      board_id: 12
                      created_at: '2022-12-01T01:21:59.152Z'
                      updated_at: '2022-12-01T01:21:59.154Z'
                      custom_data: {}
                      url: http://www.example.com/api/lists/5
                      board_url: http://www.example.com/api/boards/12
                successful:
                  summary: successful
                  value:
                    id: 15
                    name: Hydrogen
                    colour: "#865466"
                    workspace_id: 15
                    created_at: '2022-12-01T01:21:59.182Z'
                    updated_at: '2022-12-01T01:21:59.182Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/boards/15
                    workspace_url: http://www.example.com/api/workspaces/15
              schema:
                "$ref": "#/components/schemas/board_response"
    put:
      summary: update board
      tags:
      - Boards
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 16
                    name: New Name
                    colour: "#4d0743"
                    workspace_id: 16
                    created_at: '2022-12-01T01:21:59.205Z'
                    updated_at: '2022-12-01T01:21:59.220Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/boards/16
                    workspace_url: http://www.example.com/api/workspaces/16
              schema:
                "$ref": "#/components/schemas/board_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/board_request"
    delete:
      summary: delete board
      tags:
      - Boards
      responses:
        '204':
          description: successful
  "/api/boards/{id}/user_tasks":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: list current user tasks including board, lists, tags, users and author
      tags:
      - Boards
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 18
                    name: Rutherfordium
                    colour: "#194df2"
                    workspace_id: 18
                    created_at: '2022-12-01T01:21:59.255Z'
                    updated_at: '2022-12-01T01:21:59.255Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/boards/18
                    workspace_url: http://www.example.com/api/workspaces/18
                    lists: []
              schema:
                "$ref": "#/components/schemas/board_response"
  "/api/boards/recently_viewed":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: list current user recently viewed boards (max 6)
      tags:
      - Boards
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value: []
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/board_response"
  "/api/tasks/{id}/comments":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Task id
      required: true
      schema:
        type: string
    get:
      summary: List task's comments
      tags:
      - Comments
      parameters:
      - name: with_author
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful with `with_author=true`:
                  summary: successful with `with_author=true`
                  value:
                  - id: 5
                    body: "###### Quo\nQuibusdam doloribus molestiae.\n0. Dolor. \n1.
                      Laboriosam. \n2. Provident. \n3. Eum. \n4. Reiciendis. \n5.
                      Rerum. \n6. Et. \n"
                    deleted_at:
                    author_id: 22
                    task_id: 2
                    created_at: '2022-12-01T01:21:59.399Z'
                    updated_at: '2022-12-01T01:21:59.399Z'
                    url: http://www.example.com/api/comments/5
                    author:
                      id: 22
                      name: Katie Schmeler
                      avatar_url: https://www.gravatar.com/avatar/2f4cbe2580d5022c1fac26273c0455bb
                      role: manager
                      url: http://www.example.com/api/users/22
                      email: katie_schmeler.1669857719@example.com
                      created_at: '2022-12-01T01:21:59.378Z'
                      updated_at: '2022-12-01T01:21:59.378Z'
                      custom_data: {}
                  - id: 4
                    body: "# Eius\nVoluptas dolor velit. Corporis ut non.\n* Quas.
                      \n* Maiores. \n* Suscipit. \n"
                    deleted_at:
                    author_id: 22
                    task_id: 2
                    created_at: '2022-12-01T01:21:59.397Z'
                    updated_at: '2022-12-01T01:21:59.397Z'
                    url: http://www.example.com/api/comments/4
                    author:
                      id: 22
                      name: Katie Schmeler
                      avatar_url: https://www.gravatar.com/avatar/2f4cbe2580d5022c1fac26273c0455bb
                      role: manager
                      url: http://www.example.com/api/users/22
                      email: katie_schmeler.1669857719@example.com
                      created_at: '2022-12-01T01:21:59.378Z'
                      updated_at: '2022-12-01T01:21:59.378Z'
                      custom_data: {}
                  - id: 3
                    body: |-
                      # Saepe
                      Corrupti recusandae officiis. Voluptatem cum praesentium.
                      ```ruby
                      Cumque.
                      ```
                    deleted_at:
                    author_id: 22
                    task_id: 2
                    created_at: '2022-12-01T01:21:59.395Z'
                    updated_at: '2022-12-01T01:21:59.395Z'
                    url: http://www.example.com/api/comments/3
                    author:
                      id: 22
                      name: Katie Schmeler
                      avatar_url: https://www.gravatar.com/avatar/2f4cbe2580d5022c1fac26273c0455bb
                      role: manager
                      url: http://www.example.com/api/users/22
                      email: katie_schmeler.1669857719@example.com
                      created_at: '2022-12-01T01:21:59.378Z'
                      updated_at: '2022-12-01T01:21:59.378Z'
                      custom_data: {}
                  - id: 2
                    body: |-
                      ##### Eos
                      Molestiae neque voluptatem. Quidem maiores excepturi. Sit ea nemo.
                      `Esse.`
                    deleted_at:
                    author_id: 22
                    task_id: 2
                    created_at: '2022-12-01T01:21:59.393Z'
                    updated_at: '2022-12-01T01:21:59.393Z'
                    url: http://www.example.com/api/comments/2
                    author:
                      id: 22
                      name: Katie Schmeler
                      avatar_url: https://www.gravatar.com/avatar/2f4cbe2580d5022c1fac26273c0455bb
                      role: manager
                      url: http://www.example.com/api/users/22
                      email: katie_schmeler.1669857719@example.com
                      created_at: '2022-12-01T01:21:59.378Z'
                      updated_at: '2022-12-01T01:21:59.378Z'
                      custom_data: {}
                  - id: 1
                    body: |-
                      ## Reiciendis
                      Odit vero quis.
                      Qui optio dicta. Ducimus ~et~ sed. Autem explicabo dolorem.
                    deleted_at:
                    author_id: 22
                    task_id: 2
                    created_at: '2022-12-01T01:21:59.387Z'
                    updated_at: '2022-12-01T01:21:59.387Z'
                    url: http://www.example.com/api/comments/1
                    author:
                      id: 22
                      name: Katie Schmeler
                      avatar_url: https://www.gravatar.com/avatar/2f4cbe2580d5022c1fac26273c0455bb
                      role: manager
                      url: http://www.example.com/api/users/22
                      email: katie_schmeler.1669857719@example.com
                      created_at: '2022-12-01T01:21:59.378Z'
                      updated_at: '2022-12-01T01:21:59.378Z'
                      custom_data: {}
                successful:
                  summary: successful
                  value:
                  - id: 10
                    body: |-
                      ## Inventore
                      Ea ducimus consequatur. Necessitatibus autem consequatur. In nihil rerum.
                      ```ruby
                      Sunt.
                      ```
                    deleted_at:
                    author_id: 25
                    task_id: 3
                    created_at: '2022-12-01T01:21:59.447Z'
                    updated_at: '2022-12-01T01:21:59.447Z'
                    url: http://www.example.com/api/comments/10
                  - id: 9
                    body: "### Est\nAperiam odit alias. Reiciendis dolorem soluta.
                      Quo a voluptatum.\n###### Odio\nDolor et accusantium. Consectetur
                      ut rerum. Sequi voluptate esse.\n* Quis. \n* Ut. \n* Ut. \n*
                      Quia. \n* Est. \n* Omnis. \n* Qui. \n"
                    deleted_at:
                    author_id: 25
                    task_id: 3
                    created_at: '2022-12-01T01:21:59.445Z'
                    updated_at: '2022-12-01T01:21:59.445Z'
                    url: http://www.example.com/api/comments/9
                  - id: 8
                    body: "##### Ipsum\nMolestiae hic tenetur. Aut quos ab.\n0. Consectetur.
                      \n1. Mollitia. \n2. Tempore. \n"
                    deleted_at:
                    author_id: 25
                    task_id: 3
                    created_at: '2022-12-01T01:21:59.443Z'
                    updated_at: '2022-12-01T01:21:59.443Z'
                    url: http://www.example.com/api/comments/8
                  - id: 7
                    body: "## Voluptatum\nAutem magnam eaque.\n0. Laboriosam. \n"
                    deleted_at:
                    author_id: 25
                    task_id: 3
                    created_at: '2022-12-01T01:21:59.441Z'
                    updated_at: '2022-12-01T01:21:59.441Z'
                    url: http://www.example.com/api/comments/7
                  - id: 6
                    body: "### Quia\nConsectetur aut nihil. Non nostrum nihil.\n0.
                      Consequatur. \n1. Voluptate. \n2. Eos. \n"
                    deleted_at:
                    author_id: 25
                    task_id: 3
                    created_at: '2022-12-01T01:21:59.440Z'
                    updated_at: '2022-12-01T01:21:59.440Z'
                    url: http://www.example.com/api/comments/6
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/comment_response"
  "/api/lists":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: List lists
      tags:
      - Lists
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - id: 9
                    name: yellow
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 28
                    created_at: '2022-12-01T01:21:59.468Z'
                    updated_at: '2022-12-01T01:21:59.468Z'
                    custom_data: {}
                    url: http://www.example.com/api/lists/9
                    board_url: http://www.example.com/api/boards/28
                  - id: 10
                    name: red
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 29
                    created_at: '2022-12-01T01:21:59.482Z'
                    updated_at: '2022-12-01T01:21:59.482Z'
                    custom_data: {}
                    url: http://www.example.com/api/lists/10
                    board_url: http://www.example.com/api/boards/29
                  - id: 11
                    name: carmine
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 30
                    created_at: '2022-12-01T01:21:59.486Z'
                    updated_at: '2022-12-01T01:21:59.486Z'
                    custom_data: {}
                    url: http://www.example.com/api/lists/11
                    board_url: http://www.example.com/api/boards/30
                  - id: 12
                    name: coffee
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 31
                    created_at: '2022-12-01T01:21:59.490Z'
                    updated_at: '2022-12-01T01:21:59.490Z'
                    custom_data: {}
                    url: http://www.example.com/api/lists/12
                    board_url: http://www.example.com/api/boards/31
                  - id: 13
                    name: tan
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 32
                    created_at: '2022-12-01T01:21:59.494Z'
                    updated_at: '2022-12-01T01:21:59.494Z'
                    custom_data: {}
                    url: http://www.example.com/api/lists/13
                    board_url: http://www.example.com/api/boards/32
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/list_response"
    post:
      summary: Create List
      tags:
      - Lists
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 14
                    name: New List
                    pos: 1212.0
                    visible: false
                    deleted_at:
                    board_id: 33
                    created_at: '2022-12-01T01:21:59.534Z'
                    updated_at: '2022-12-01T01:21:59.534Z'
                    custom_data: {}
                    url: http://www.example.com/api/lists/14
                    board_url: http://www.example.com/api/boards/33
              schema:
                "$ref": "#/components/schemas/list_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/list_request"
  "/api/lists/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show List
      tags:
      - Lists
      parameters:
      - name: tasks
        in: query
        type: string
        schema:
          "$ref": "#/components/schemas/include_associated_enum"
        required: false
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful with `tasks=all`:
                  summary: successful with `tasks=all`
                  value:
                    id: 15
                    name: fuchsia
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 34
                    created_at: '2022-12-01T01:21:59.542Z'
                    updated_at: '2022-12-01T01:21:59.542Z'
                    custom_data: {}
                    url: http://www.example.com/api/lists/15
                    board_url: http://www.example.com/api/boards/34
                    tasks:
                    - id: 4
                      name: Like a Virgin
                      pos: 65536.0
                      priority: very_low
                      spent_time: 0
                      points: 1
                      due_time: '2022-12-08T01:21:59.544Z'
                      list_id: 15
                      deleted_at:
                      url: http://www.example.com/api/tasks/4
                      list_url: http://www.example.com/api/lists/15
                      users:
                      - id: 30
                        name: Tanja Wintheiser
                        avatar_url: https://www.gravatar.com/avatar/855012901b9d13401864d8b0311b9660
                        role: developer
                        url: http://www.example.com/api/users/30
                      - id: 31
                        name: Michelle Reichel
                        avatar_url: https://www.gravatar.com/avatar/77c7c4df44c3dfd8106a7764387cb5ad
                        role: developer
                        url: http://www.example.com/api/users/31
                      tags:
                      - id: 2
                        name: Advertising
                        colour: "#91e5c8"
                        url: http://www.example.com/api/tags/2
                      - id: 3
                        name: Technology
                        colour: "#434517"
                        url: http://www.example.com/api/tags/3
                    - id: 5
                      name: Jagged Little Pill
                      pos: 65536.0
                      priority: very_low
                      spent_time: 0
                      points: 4
                      due_time: '2022-12-08T01:21:59.575Z'
                      list_id: 15
                      deleted_at: '2022-12-01T01:21:59.587Z'
                      url: http://www.example.com/api/tasks/5
                      list_url: http://www.example.com/api/lists/15
                      users: []
                      tags: []
                successful with `tasks=visible`:
                  summary: successful with `tasks=visible`
                  value:
                    id: 18
                    name: emerald
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 39
                    created_at: '2022-12-01T01:21:59.617Z'
                    updated_at: '2022-12-01T01:21:59.617Z'
                    custom_data: {}
                    url: http://www.example.com/api/lists/18
                    board_url: http://www.example.com/api/boards/39
                    tasks:
                    - id: 6
                      name: Faith
                      pos: 65536.0
                      priority: low
                      spent_time: 0
                      points: 3
                      due_time: '2022-12-08T01:21:59.619Z'
                      list_id: 18
                      deleted_at:
                      url: http://www.example.com/api/tasks/6
                      list_url: http://www.example.com/api/lists/18
                      users:
                      - id: 35
                        name: Kip Becker
                        avatar_url: https://www.gravatar.com/avatar/2929f816edc92449b13ad32c7dd79ca1
                        role: regular
                        url: http://www.example.com/api/users/35
                      - id: 36
                        name: Claud Collins
                        avatar_url: https://www.gravatar.com/avatar/e174714154388ef87fa40766625c2d5d
                        role: manager
                        url: http://www.example.com/api/users/36
                      tags:
                      - id: 4
                        name: Marketing
                        colour: "#bf0c77"
                        url: http://www.example.com/api/tags/4
                    - id: 7
                      name: Hands All Over
                      pos: 65536.0
                      priority: high
                      spent_time: 0
                      points: 1
                      due_time: '2022-12-08T01:21:59.645Z'
                      list_id: 18
                      deleted_at:
                      url: http://www.example.com/api/tasks/7
                      list_url: http://www.example.com/api/lists/18
                      users: []
                      tags: []
                successful with `tasks=archived`:
                  summary: successful with `tasks=archived`
                  value:
                    id: 21
                    name: grey
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 43
                    created_at: '2022-12-01T01:21:59.682Z'
                    updated_at: '2022-12-01T01:21:59.682Z'
                    custom_data: {}
                    url: http://www.example.com/api/lists/21
                    board_url: http://www.example.com/api/boards/43
                    tasks:
                    - id: 8
                      name: Whitney Houston
                      pos: 65536.0
                      priority: very_high
                      spent_time: 0
                      points: 5
                      due_time: '2022-12-08T01:21:59.684Z'
                      list_id: 21
                      deleted_at: '2022-12-01T01:21:59.696Z'
                      url: http://www.example.com/api/tasks/8
                      list_url: http://www.example.com/api/lists/21
                      users: []
                      tags: []
                    - id: 9
                      name: '1'
                      pos: 65536.0
                      priority: very_high
                      spent_time: 0
                      points: 3
                      due_time: '2022-12-08T01:21:59.698Z'
                      list_id: 21
                      deleted_at: '2022-12-01T01:21:59.708Z'
                      url: http://www.example.com/api/tasks/9
                      list_url: http://www.example.com/api/lists/21
                      users:
                      - id: 41
                        name: Chuck Labadie
                        avatar_url: https://www.gravatar.com/avatar/3e15671cbef32d4d546125e5e3cfe098
                        role: regular
                        url: http://www.example.com/api/users/41
                      tags:
                      - id: 5
                        name: IT
                        colour: "#f503a0"
                        url: http://www.example.com/api/tags/5
                successful:
                  summary: successful
                  value:
                    id: 24
                    name: carmine
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 47
                    created_at: '2022-12-01T01:21:59.748Z'
                    updated_at: '2022-12-01T01:21:59.748Z'
                    custom_data: {}
                    url: http://www.example.com/api/lists/24
                    board_url: http://www.example.com/api/boards/47
              schema:
                "$ref": "#/components/schemas/list_response"
    put:
      summary: Update list
      tags:
      - Lists
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 25
                    name: New Name
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 48
                    created_at: '2022-12-01T01:21:59.768Z'
                    updated_at: '2022-12-01T01:21:59.784Z'
                    custom_data: {}
                    url: http://www.example.com/api/lists/25
                    board_url: http://www.example.com/api/boards/48
              schema:
                "$ref": "#/components/schemas/list_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/list_request"
    delete:
      summary: Delete list
      tags:
      - Lists
      responses:
        '204':
          description: successful
  "/api/script_runs":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: List script runs
      tags:
      - ScriptRuns
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - id: 1
                    script_id: 1
                    input: puts 'Hello world'
                    output: Hello world
                    initiator_id: 48
                    state: running
                    delay:
                    script_name: My first Lambdee Script
                    url: http://www.example.com/api/script_runs/1
                  - id: 2
                    script_id: 2
                    input: puts 'Hello world'
                    output: Hello world
                    initiator_id: 50
                    state: running
                    delay:
                    script_name: My first Lambdee Script
                    url: http://www.example.com/api/script_runs/2
                  - id: 3
                    script_id: 3
                    input: puts 'Hello world'
                    output: Hello world
                    initiator_id: 52
                    state: running
                    delay:
                    script_name: My first Lambdee Script
                    url: http://www.example.com/api/script_runs/3
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/script_run_response"
  "/api/scripts/{id}/script_runs":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Script id
      required: true
      schema:
        type: string
    get:
      summary: List script's script runs
      tags:
      - ScriptRuns
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - id: 4
                    script_id: 4
                    input: puts 'Hello world'
                    output: Hello world
                    initiator_id: 56
                    state: running
                    delay:
                    script_name: My first Lambdee Script
                    url: http://www.example.com/api/script_runs/4
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/script_run_response"
  "/api/script_runs/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show script run
      tags:
      - ScriptRuns
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 5
                    script_id: 5
                    input: puts 'Hello world'
                    output: Hello world
                    initiator_id: 60
                    state: running
                    delay:
                    script_name: My first Lambdee Script
                    url: http://www.example.com/api/script_runs/5
              schema:
                "$ref": "#/components/schemas/script_run_response"
    put:
      summary: Update script run
      tags:
      - ScriptRuns
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 6
                    script_id: 6
                    input: puts 'Hello world'
                    output: example output
                    initiator_id: 64
                    state: executed
                    delay:
                    script_name: My first Lambdee Script
                    url: http://www.example.com/api/script_runs/6
              schema:
                "$ref": "#/components/schemas/script_run_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/script_run_request"
  "/api/script_triggers":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    post:
      summary: Create script trigger
      tags:
      - Script triggers
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 1
                    script_id: 7
                    subject_type: DB::Task
                    subject_id: 10
                    action: destroy
                    delay: 60
                    url: http://www.example.com/api/script_triggers/1
              schema:
                "$ref": "#/components/schemas/script_trigger_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/script_trigger_request"
  "/api/script_triggers/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show script trigger
      tags:
      - Script triggers
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 2
                    script_id: 8
                    subject_type:
                    subject_id:
                    action: create
                    delay: 60
                    url: http://www.example.com/api/script_triggers/2
              schema:
                "$ref": "#/components/schemas/script_trigger_response"
    put:
      summary: Update script trigger
      tags:
      - Script triggers
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 3
                    script_id: 9
                    subject_type:
                    subject_id:
                    action: destroy
                    delay: 60
                    url: http://www.example.com/api/script_triggers/3
              schema:
                "$ref": "#/components/schemas/script_trigger_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/script_trigger_request"
    delete:
      summary: Delete script_trigger
      tags:
      - Script triggers
      responses:
        '204':
          description: successful
  "/api/scripts":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: List scripts
      tags:
      - Scripts
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - id: 11
                    content: puts 'hello world'
                    name: My first Lambdee Script
                    description: Description of the script
                    author_id: 80
                    url: http://www.example.com/api/scripts/11
                  - id: 12
                    content: puts 'hello world'
                    name: My first Lambdee Script
                    description: Description of the script
                    author_id: 81
                    url: http://www.example.com/api/scripts/12
                  - id: 13
                    content: puts 'hello world'
                    name: My first Lambdee Script
                    description: Description of the script
                    author_id: 82
                    url: http://www.example.com/api/scripts/13
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/script_response"
    post:
      summary: Create Script
      tags:
      - Scripts
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 14
                    content: puts 'Hello world!'
                    name: New Script
                    description: What script does
                    author_id: 85
                    url: http://www.example.com/api/scripts/14
                    script_triggers:
                    - id: 5
                      script_id: 14
                      subject_type:
                      subject_id:
                      action: create
                      delay: 60
                      url: http://www.example.com/api/script_triggers/5
                    - id: 6
                      script_id: 14
                      subject_type: DB::Task
                      subject_id:
                      action: update
                      delay: 60
                      url: http://www.example.com/api/script_triggers/6
                    - id: 7
                      script_id: 14
                      subject_type: DB::Task
                      subject_id: 11
                      action: destroy
                      delay: 60
                      url: http://www.example.com/api/script_triggers/7
              schema:
                "$ref": "#/components/schemas/script_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/script_request"
  "/api/scripts/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show Script
      tags:
      - Scripts
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 15
                    content: puts 'hello world'
                    name: My first Lambdee Script
                    description: Description of the script
                    author_id: 88
                    url: http://www.example.com/api/scripts/15
                    script_triggers: []
              schema:
                "$ref": "#/components/schemas/script_response"
    put:
      summary: Update Script
      tags:
      - Scripts
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 16
                    content: puts 'hello world'
                    name: New Name
                    description: Description of the script
                    author_id: 91
                    url: http://www.example.com/api/scripts/16
                    script_triggers:
                    - id: 9
                      script_id: 16
                      subject_type:
                      subject_id:
                      action: create
                      delay: 60
                      url: http://www.example.com/api/script_triggers/9
              schema:
                "$ref": "#/components/schemas/script_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/script_request"
    delete:
      summary: Delete script
      tags:
      - Scripts
      responses:
        '204':
          description: successful
  "/api/boards/{id}/sprints":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Board id
      required: true
      schema:
        type: string
    get:
      summary: List board's sprints
      tags:
      - Sprints
      parameters:
      - name: page
        in: query
        required: false
        description: Decides which result page should be returned.
        example: 2
        schema:
          type: integer
      - name: per
        in: query
        required: false
        description: Decides how many entities should be returned per one page. **Works
          only, when `page` param is given.**
        example: 2
        schema:
          type: integer
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    sprints:
                    - id: 1
                      board_id: 52
                      name: Melton
                      description: Suscipit culpa hic. Omnis molestiae voluptatem.
                        Corporis ab dignissimos.
                      started_at: '2022-12-01T01:22:00.252Z'
                      expected_end_at: '2022-12-08T01:22:00.252Z'
                      ended_at:
                      final_list_name: Done
                      custom_data: {}
                      url: http://www.example.com/api/sprints/1
                    - id: 2
                      board_id: 52
                      name: Dubbo
                      description: Reprehenderit voluptates distinctio. Molestiae
                        perspiciatis unde. Qui natus et.
                      started_at: '2022-12-01T01:22:00.256Z'
                      expected_end_at: '2022-12-08T01:22:00.256Z'
                      ended_at:
                      final_list_name: Done
                      custom_data: {}
                      url: http://www.example.com/api/sprints/2
                    - id: 3
                      board_id: 52
                      name: Port Macquarie
                      description: Ut ut maiores. Consequuntur eum suscipit. Quia
                        quia natus.
                      started_at: '2022-12-01T01:22:00.258Z'
                      expected_end_at: '2022-12-08T01:22:00.258Z'
                      ended_at:
                      final_list_name: Done
                      custom_data: {}
                      url: http://www.example.com/api/sprints/3
              schema:
                "$ref": "#/components/schemas/sprint_pages_response"
  "/api/sprints":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: List sprints
      tags:
      - Sprints
      parameters:
      - name: page
        in: query
        required: false
        description: Decides which result page should be returned.
        example: 2
        schema:
          type: integer
      - name: per
        in: query
        required: false
        description: Decides how many entities should be returned per one page. **Works
          only, when `page` param is given.**
        example: 2
        schema:
          type: integer
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    sprints: []
              schema:
                "$ref": "#/components/schemas/sprint_pages_response"
    post:
      summary: Create sprint
      tags:
      - Sprints
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 4
                    board_id: 53
                    name: New Sprint
                    description: Example description of new sprint
                    started_at: '2022-12-01T01:22:00.321Z'
                    expected_end_at: '2025-12-11T23:00:00.000Z'
                    ended_at:
                    final_list_name: Done
                    custom_data: {}
                    url: http://www.example.com/api/sprints/4
              schema:
                "$ref": "#/components/schemas/sprint_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/sprint_request"
  "/api/sprints/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    - name: tasks
      in: query
      example: all
      required: false
      schema:
        type: string
    get:
      summary: Show Sprint
      tags:
      - Sprints
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful with `tasks=all`:
                  summary: successful with `tasks=all`
                  value:
                    id: 5
                    board_id: 54
                    name: Traralgon – Morwell
                    description: Qui enim facilis. Rerum deserunt unde. Enim placeat
                      dicta.
                    started_at: '2022-12-01T01:22:00.330Z'
                    expected_end_at: '2022-12-08T01:22:00.330Z'
                    ended_at:
                    final_list_name: Done
                    custom_data: {}
                    url: http://www.example.com/api/sprints/5
                    tasks:
                    - id: 12
                      name: "(What's the Story) Morning Glory?"
                      priority: low
                      spent_time: 0
                      points: 5
                      added_at: '2022-12-01T01:22:00.352Z'
                      completed_at:
                      start_state: To Do
                      state: Doing
                successful:
                  summary: successful
                  value:
                    id: 6
                    board_id: 56
                    name: Geelong
                    description: Exercitationem velit ea. Eius officiis ex. Velit
                      autem enim.
                    started_at: '2022-12-01T01:22:00.376Z'
                    expected_end_at: '2022-12-08T01:22:00.376Z'
                    ended_at:
                    final_list_name: Done
                    custom_data: {}
                    url: http://www.example.com/api/sprints/6
              schema:
                "$ref": "#/components/schemas/sprint_response"
    put:
      summary: Update Sprint
      tags:
      - Sprints
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 7
                    board_id: 57
                    name: New Name
                    description: Qui enim nam. Voluptatem et ipsam. Esse voluptatem
                      sapiente.
                    started_at: '2022-12-01T01:22:00.401Z'
                    expected_end_at: '2022-12-08T01:22:00.401Z'
                    ended_at:
                    final_list_name: Done
                    custom_data: {}
                    url: http://www.example.com/api/sprints/7
              schema:
                "$ref": "#/components/schemas/sprint_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/sprint_request"
    delete:
      summary: Delete sprint
      tags:
      - Sprints
      responses:
        '204':
          description: successful
  "/api/sprints/{id}/end":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    put:
      summary: End sprint
      tags:
      - Sprints
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 9
                    board_id: 59
                    name: Wollongong
                    description: Et dolores assumenda. Id unde deserunt. Accusamus
                      aspernatur eum.
                    started_at: '2022-12-01T01:22:00.453Z'
                    expected_end_at: '2022-12-08T01:22:00.453Z'
                    ended_at: '2022-12-01T01:22:00.477Z'
                    final_list_name: Done
                    custom_data: {}
                    url: http://www.example.com/api/sprints/9
              schema:
                "$ref": "#/components/schemas/sprint_response"
  "/api/boards/{id}/active_sprint":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show active sprint
      tags:
      - Sprints
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 10
                    board_id: 60
                    name: Melbourne
                    description: Quam quibusdam aut. Aut et adipisci. Quas commodi
                      rem.
                    started_at: '2022-12-01T01:22:00.485Z'
                    expected_end_at: '2022-12-08T01:22:00.485Z'
                    ended_at:
                    final_list_name: Done
                    custom_data: {}
                    url: http://www.example.com/api/sprints/10
              schema:
                "$ref": "#/components/schemas/sprint_response"
  "/api/sprints/{id}/burn_up_chart":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show data for burn up chart
      tags:
      - Sprints
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - name: Work Scope
                    data:
                      '2022-12-01': 0
                      '2022-12-08': 0
                  - name: Completed Work
                    data:
                      '2022-12-01': 0
                      '2022-12-08':
  "/api/boards/{id}/tags":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Board id
      required: true
      schema:
        type: string
    get:
      summary: List board's tags
      tags:
      - Tags
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - id: 6
                    name: Accounting
                    colour: "#deb24c"
                    url: http://www.example.com/api/tags/6
                    board_id: 62
                    created_at: '2022-12-01T01:22:00.540Z'
                    updated_at: '2022-12-01T01:22:00.540Z'
                    custom_data: {}
                  - id: 7
                    name: Legal
                    colour: "#284dac"
                    url: http://www.example.com/api/tags/7
                    board_id: 62
                    created_at: '2022-12-01T01:22:00.541Z'
                    updated_at: '2022-12-01T01:22:00.541Z'
                    custom_data: {}
                  - id: 8
                    name: Sales
                    colour: "#2b4e5f"
                    url: http://www.example.com/api/tags/8
                    board_id: 62
                    created_at: '2022-12-01T01:22:00.543Z'
                    updated_at: '2022-12-01T01:22:00.543Z'
                    custom_data: {}
                  - id: 9
                    name: Banking
                    colour: "#4899d3"
                    url: http://www.example.com/api/tags/9
                    board_id: 62
                    created_at: '2022-12-01T01:22:00.544Z'
                    updated_at: '2022-12-01T01:22:00.544Z'
                    custom_data: {}
                  - id: 10
                    name: Construction
                    colour: "#0d1f56"
                    url: http://www.example.com/api/tags/10
                    board_id: 62
                    created_at: '2022-12-01T01:22:00.545Z'
                    updated_at: '2022-12-01T01:22:00.545Z'
                    custom_data: {}
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/tag_response"
    post:
      summary: Create tag
      tags:
      - Tags
      parameters:
      - name: id
        in: path
        description: Board id
        required: true
        schema:
          type: string
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 11
                    name: New Tag
                    colour: "#fff000"
                    url: http://www.example.com/api/tags/11
                    board_id: 63
                    created_at: '2022-12-01T01:22:00.585Z'
                    updated_at: '2022-12-01T01:22:00.585Z'
                    custom_data: {}
              schema:
                "$ref": "#/components/schemas/tag_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/tag_request"
  "/api/tags":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    post:
      summary: Create tag
      tags:
      - Tags
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 12
                    name: New Tag
                    colour: "#fff000"
                    url: http://www.example.com/api/tags/12
                    board_id: 64
                    created_at: '2022-12-01T01:22:00.619Z'
                    updated_at: '2022-12-01T01:22:00.619Z'
                    custom_data: {}
              schema:
                "$ref": "#/components/schemas/tag_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/tag_request"
  "/api/tasks/{id}/tags":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Task id
      required: true
      schema:
        type: string
    get:
      summary: List task's tags
      tags:
      - Tags
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - id: 13
                    name: Retail
                    colour: "#570a5b"
                    url: http://www.example.com/api/tags/13
                    board_id: 65
                    created_at: '2022-12-01T01:22:00.637Z'
                    updated_at: '2022-12-01T01:22:00.637Z'
                    custom_data: {}
                  - id: 14
                    name: Community-Services
                    colour: "#97f98d"
                    url: http://www.example.com/api/tags/14
                    board_id: 65
                    created_at: '2022-12-01T01:22:00.640Z'
                    updated_at: '2022-12-01T01:22:00.640Z'
                    custom_data: {}
                  - id: 15
                    name: Legal
                    colour: "#4efbec"
                    url: http://www.example.com/api/tags/15
                    board_id: 65
                    created_at: '2022-12-01T01:22:00.642Z'
                    updated_at: '2022-12-01T01:22:00.642Z'
                    custom_data: {}
                  - id: 16
                    name: Mining
                    colour: "#895fb8"
                    url: http://www.example.com/api/tags/16
                    board_id: 65
                    created_at: '2022-12-01T01:22:00.644Z'
                    updated_at: '2022-12-01T01:22:00.644Z'
                    custom_data: {}
                  - id: 17
                    name: Healthcare
                    colour: "#6f3b04"
                    url: http://www.example.com/api/tags/17
                    board_id: 65
                    created_at: '2022-12-01T01:22:00.647Z'
                    updated_at: '2022-12-01T01:22:00.647Z'
                    custom_data: {}
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/tag_response"
    post:
      summary: Create tag (associated with given task and task's board)
      tags:
      - Tags
      parameters:
      - name: id
        in: path
        description: Task id
        required: true
        schema:
          type: string
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 18
                    name: New Tag
                    colour: "#fff000"
                    url: http://www.example.com/api/tags/18
                    board_id: 66
                    created_at: '2022-12-01T01:22:00.695Z'
                    updated_at: '2022-12-01T01:22:00.695Z'
                    custom_data: {}
              schema:
                "$ref": "#/components/schemas/tag_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/tag_request"
  "/api/tags/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show Tags
      tags:
      - Tags
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 19
                    name: Real-Estate
                    colour: "#b81ded"
                    url: http://www.example.com/api/tags/19
                    board_id: 67
                    created_at: '2022-12-01T01:22:00.707Z'
                    updated_at: '2022-12-01T01:22:00.707Z'
                    custom_data: {}
              schema:
                "$ref": "#/components/schemas/tag_response"
    put:
      summary: Update Tag
      tags:
      - Tags
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 20
                    name: New Name
                    colour: "#f325a4"
                    url: http://www.example.com/api/tags/20
                    board_id: 68
                    created_at: '2022-12-01T01:22:00.730Z'
                    updated_at: '2022-12-01T01:22:00.745Z'
                    custom_data: {}
              schema:
                "$ref": "#/components/schemas/tag_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/tag_request"
    delete:
      summary: Delete tag
      tags:
      - Tags
      responses:
        '204':
          description: successful
  "/api/tasks":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: List tasks
      tags:
      - Tasks
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - id: 16
                    name: 'Grease: The Original Soundtrack from the Motion Picture'
                    pos: 65536.0
                    priority: very_low
                    spent_time: 0
                    points: 4
                    due_time: '2022-12-08T01:22:00.773Z'
                    list_id: 33
                    deleted_at:
                    url: http://www.example.com/api/tasks/16
                    list_url: http://www.example.com/api/lists/33
                    description: |-
                      ##### Aliquid
                      Dolor sit sunt. Doloribus laboriosam inventore. Iste quia vel. Quod recusandae repellendus. Exercitationem voluptatibus est.
                      Quia dicta debitis. Quas minima reiciendis. *Molestiae* cupiditate ducimus.
                    created_at: '2022-12-01T01:22:00.781Z'
                    updated_at: '2022-12-01T01:22:00.781Z'
                  - id: 17
                    name: Tracy Chapman
                    pos: 65536.0
                    priority: very_low
                    spent_time: 0
                    points: 3
                    due_time: '2022-12-08T01:22:00.784Z'
                    list_id: 34
                    deleted_at:
                    url: http://www.example.com/api/tasks/17
                    list_url: http://www.example.com/api/lists/34
                    description: |-
                      #### Illum
                      Consectetur recusandae mollitia. Rerum velit quibusdam. Voluptatem et libero. In ex occaecati.
                      `Impedit.`
                    created_at: '2022-12-01T01:22:00.791Z'
                    updated_at: '2022-12-01T01:22:00.791Z'
                  - id: 18
                    name: Bat Out of Hell
                    pos: 65536.0
                    priority: very_low
                    spent_time: 0
                    points: 1
                    due_time: '2022-12-08T01:22:00.793Z'
                    list_id: 35
                    deleted_at:
                    url: http://www.example.com/api/tasks/18
                    list_url: http://www.example.com/api/lists/35
                    description: |-
                      ##### Animi
                      Porro dolorum ut. Ipsa qui nemo. Voluptates iusto delectus. Delectus velit adipisci. Perspiciatis blanditiis omnis.
                      #### Nostrum
                    created_at: '2022-12-01T01:22:00.801Z'
                    updated_at: '2022-12-01T01:22:00.801Z'
                  - id: 19
                    name: Unplugged
                    pos: 65536.0
                    priority: very_low
                    spent_time: 0
                    points: 2
                    due_time: '2022-12-08T01:22:00.803Z'
                    list_id: 36
                    deleted_at:
                    url: http://www.example.com/api/tasks/19
                    list_url: http://www.example.com/api/lists/36
                    description: |-
                      # Aut
                      Dignissimos repellendus est. Quo rerum et. Natus voluptatibus autem. Magnam vitae ut.
                      quis | mollitia | aut
                      ---- | ---- | ----
                      quasi | nisi | blanditiis
                      est | consequatur | culpa
                    created_at: '2022-12-01T01:22:00.811Z'
                    updated_at: '2022-12-01T01:22:00.811Z'
                  - id: 20
                    name: Frozen
                    pos: 65536.0
                    priority: low
                    spent_time: 0
                    points: 1
                    due_time: '2022-12-08T01:22:00.813Z'
                    list_id: 37
                    deleted_at:
                    url: http://www.example.com/api/tasks/20
                    list_url: http://www.example.com/api/lists/37
                    description: |-
                      ### Porro
                      Quia ullam dolorem. Ut temporibus voluptas. Corrupti culpa molestias.
                      `Necessitatibus.`
                    created_at: '2022-12-01T01:22:00.821Z'
                    updated_at: '2022-12-01T01:22:00.821Z'
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/task_response"
    post:
      summary: Create Task
      tags:
      - Tasks
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 21
                    name: New Task
                    pos: 65536.0
                    priority:
                    spent_time: 0
                    points:
                    due_time:
                    list_id: 38
                    deleted_at:
                    url: http://www.example.com/api/tasks/21
                    list_url: http://www.example.com/api/lists/38
                    description:
                    created_at: '2022-12-01T01:22:00.869Z'
                    updated_at: '2022-12-01T01:22:00.869Z'
              schema:
                "$ref": "#/components/schemas/task_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/task_request"
  "/api/tasks/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Task id
      required: true
      schema:
        type: string
    get:
      summary: Show Taks
      parameters:
      - name: include_associations
        in: query
        required: false
        description: If true, extended object with all associations is returned.
        schema:
          type: string
      tags:
      - Tasks
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful with `include_associations=true`:
                  summary: successful with `include_associations=true`
                  value:
                    id: 22
                    name: Metallica
                    pos: 65536.0
                    priority: low
                    spent_time: 0
                    points: 1
                    due_time: '2022-12-08T01:22:00.876Z'
                    list_id: 39
                    deleted_at:
                    url: http://www.example.com/api/tasks/22
                    list_url: http://www.example.com/api/lists/39
                    description: "###### Dolorem\nA omnis dolorum. Sit voluptatum
                      et. Autem cum temporibus. Est voluptatum aut. Necessitatibus
                      occaecati reiciendis.\n##### Quasi\nPraesentium ea sit. Aut
                      iste quo. Explicabo ex est.\n* Quis. \n* Dicta. \n* Ab. \n*
                      Tenetur. \n* Velit. \n"
                    created_at: '2022-12-01T01:22:00.885Z'
                    updated_at: '2022-12-01T01:22:00.885Z'
                    list:
                      id: 39
                      name: coral
                      pos: 65536.0
                      visible: false
                      deleted_at:
                      board_id: 76
                      created_at: '2022-12-01T01:22:00.879Z'
                      updated_at: '2022-12-01T01:22:00.879Z'
                      custom_data: {}
                      url: http://www.example.com/api/lists/39
                      board_url: http://www.example.com/api/boards/76
                    author:
                      id: 144
                      name: Fredrick Becker IV
                      avatar_url: https://www.gravatar.com/avatar/62d5443ac1d1e687d123569a3a4c30d7
                      role: manager
                      url: http://www.example.com/api/users/144
                      email: fredrick_becker_iv.1669857720@example.com
                      created_at: '2022-12-01T01:22:00.883Z'
                      updated_at: '2022-12-01T01:22:00.883Z'
                      custom_data: {}
                    users:
                    - id: 145
                      name: Meri Jacobson
                      avatar_url: https://www.gravatar.com/avatar/871dc933bdc8eca7ddc031a1bee8c9eb
                      role: developer
                      url: http://www.example.com/api/users/145
                      email: meri_jacobson.1669857720@example.com
                      created_at: '2022-12-01T01:22:00.889Z'
                      updated_at: '2022-12-01T01:22:00.889Z'
                      custom_data: {}
                    - id: 146
                      name: Jonell Labadie VM
                      avatar_url: https://www.gravatar.com/avatar/8a33101932448fae0c1823c2175753f3
                      role: developer
                      url: http://www.example.com/api/users/146
                      email: jonell_labadie_vm.1669857720@example.com
                      created_at: '2022-12-01T01:22:00.894Z'
                      updated_at: '2022-12-01T01:22:00.894Z'
                      custom_data: {}
                    tags:
                    - id: 22
                      name: Sales
                      colour: "#1b4ec9"
                      url: http://www.example.com/api/tags/22
                      board_id: 77
                      created_at: '2022-12-01T01:22:00.899Z'
                      updated_at: '2022-12-01T01:22:00.899Z'
                      custom_data: {}
                    - id: 23
                      name: Legal
                      colour: "#22efff"
                      url: http://www.example.com/api/tags/23
                      board_id: 78
                      created_at: '2022-12-01T01:22:00.903Z'
                      updated_at: '2022-12-01T01:22:00.903Z'
                      custom_data: {}
                    - id: 24
                      name: Marketing
                      colour: "#596eb9"
                      url: http://www.example.com/api/tags/24
                      board_id: 79
                      created_at: '2022-12-01T01:22:00.908Z'
                      updated_at: '2022-12-01T01:22:00.908Z'
                      custom_data: {}
                successful:
                  summary: successful
                  value:
                    id: 23
                    name: The Joshua Tree
                    pos: 65536.0
                    priority: high
                    spent_time: 0
                    points: 2
                    due_time: '2022-12-08T01:22:00.937Z'
                    list_id: 40
                    deleted_at:
                    url: http://www.example.com/api/tasks/23
                    list_url: http://www.example.com/api/lists/40
                    description: |-
                      # Esse
                      Qui nihil est. Aut incidunt id. Itaque aut voluptatem. Sequi quia ut.
                      ```ruby
                      Ipsam.
                      ```
                    created_at: '2022-12-01T01:22:00.946Z'
                    updated_at: '2022-12-01T01:22:00.946Z'
              schema:
                "$ref": "#/components/schemas/task_response"
    put:
      summary: Update Task
      tags:
      - Tasks
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 24
                    name: New Name
                    pos: 65536.0
                    priority: very_low
                    spent_time: 0
                    points: 3
                    due_time: '2022-12-08T01:22:00.965Z'
                    list_id: 41
                    deleted_at:
                    url: http://www.example.com/api/tasks/24
                    list_url: http://www.example.com/api/lists/41
                    description: |-
                      ## Ipsam
                      Iure quae voluptas. Error dolorem ducimus. Et odio enim.
                      ###### Fugiat
                      Quam at impedit. Minima dolorem et. Et est eos.
                      pariatur | eum | voluptatem
                      ---- | ---- | ----
                      fugit | perspiciatis | saepe
                      qui | ratione | qui
                    created_at: '2022-12-01T01:22:00.973Z'
                    updated_at: '2022-12-01T01:22:00.989Z'
              schema:
                "$ref": "#/components/schemas/task_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/task_request"
    delete:
      summary: Delete Task
      tags:
      - Tasks
      responses:
        '204':
          description: successful
  "/api/tasks/{id}/add_time":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Task id
      required: true
      schema:
        type: string
    put:
      summary: Add time
      tags:
      - Tasks
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 26
                    name: The Eminem Show
                    pos: 65536.0
                    priority: very_high
                    spent_time: 1200
                    points: 1
                    due_time: '2022-12-08T01:22:01.023Z'
                    list_id: 43
                    deleted_at:
                    url: http://www.example.com/api/tasks/26
                    list_url: http://www.example.com/api/lists/43
                    description: |-
                      # Cumque
                      Similique deleniti aperiam. Deleniti cumque excepturi. Omnis aut quo. Eos voluptas cupiditate. Nihil vitae nostrum.
                      provident | omnis | quia
                      ---- | ---- | ----
                      voluptatem | quo | et
                      odit | vitae | minus
                    created_at: '2022-12-01T01:22:01.032Z'
                    updated_at: '2022-12-01T01:22:01.048Z'
        '422':
          description: non integer time
          content:
            application/json:
              examples:
                incorrect unit:
                  summary: incorrect unit
                  value:
                    unit:
                    - is not included in the list
                negative time:
                  summary: negative time
                  value:
                    time:
                    - must be greater than 0
                non integer time:
                  summary: non integer time
                  value:
                    time:
                    - must be greater than 0
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                time:
                  type: integer
                unit:
                  type: string
                  enum: "#<Set: {:day, :hour, :minute, :second}>"
  "/api/tasks/{id}/attach_tag":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Task id
      required: true
      schema:
        type: string
    post:
      summary: Attach Tag
      tags:
      - Tasks
      parameters: []
      responses:
        '204':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                tag_id:
                  type: integer
  "/api/tasks/{id}/detach_tag":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Task id
      required: true
      schema:
        type: string
    post:
      summary: Detach Tag
      tags:
      - Tasks
      parameters: []
      responses:
        '204':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                tag_id:
                  type: integer
  "/api/tasks/{id}/assign_user":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Task id
      required: true
      schema:
        type: string
    post:
      summary: Assign User
      tags:
      - Tasks
      parameters: []
      responses:
        '204':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
  "/api/tasks/{id}/unassign_user":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Task id
      required: true
      schema:
        type: string
    post:
      summary: Unassign User
      tags:
      - Tasks
      parameters: []
      responses:
        '204':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
  "/api/workspaces/{id}/users":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: List users of workspace
      tags:
      - Users
      parameters:
      - name: id
        in: path
        description: Workspace id
        required: true
        schema:
          type: string
      - name: page
        in: query
        required: false
        description: Decides which result page should be returned.
        example: 2
        schema:
          type: integer
      - name: role
        in: query
        required: false
        schema:
          "$ref": "#/components/schemas/user_request/properties/role"
        example: admin
      - name: created_at_from
        in: query
        required: false
        description: Date with format YYYY.MM.DD
        example: 2010.01.25
        schema:
          type: string
      - name: created_at_to
        in: query
        required: false
        description: Date with format YYYY.MM.DD
        example: 2010.01.25
        schema:
          type: string
      - name: search
        in: query
        required: false
        description: Searches for users by name and e-mail.
        example: michael
        schema:
          type: string
      - name: per
        in: query
        required: false
        description: Decides how many entities should be returned per one page. **Works
          only, when `page` param is given.**
        example: 2
        schema:
          type: integer
      - name: limit
        in: query
        required: false
        description: Decides how many entities should be returned.
        example: 3
        schema:
          type: integer
      responses:
        '200':
          description: successful with pages
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    users:
                    - id: 172
                      name: Hui Zboncak
                      avatar_url: https://www.gravatar.com/avatar/8f791ec90d508bdafefdbfd72fc26b90
                      role: regular
                      url: http://www.example.com/api/users/172
                      email: hui_zboncak.1669857721@example.com
                      created_at: '2022-12-01T01:22:01.254Z'
                      updated_at: '2022-12-01T01:22:01.254Z'
                      custom_data: {}
                    - id: 173
                      name: Lauri Quitzon
                      avatar_url: https://www.gravatar.com/avatar/d4ce41f25e04f174f16113f2dcf92e06
                      role: developer
                      url: http://www.example.com/api/users/173
                      email: lauri_quitzon.1669857721@example.com
                      created_at: '2022-12-01T01:22:01.265Z'
                      updated_at: '2022-12-01T01:22:01.265Z'
                      custom_data: {}
                    - id: 174
                      name: Roberto Nienow PhD
                      avatar_url: https://www.gravatar.com/avatar/0f3337d0c196c238ce837a53e0a732bd
                      role: regular
                      url: http://www.example.com/api/users/174
                      email: roberto_nienow_ph_d.1669857721@example.com
                      created_at: '2022-12-01T01:22:01.270Z'
                      updated_at: '2022-12-01T01:22:01.270Z'
                      custom_data: {}
                successful with pages:
                  summary: successful with pages
                  value:
                    users:
                    - id: 176
                      name: Fr. Carmon Hyatt
                      avatar_url: https://www.gravatar.com/avatar/cf33859e7adac819850b859b0ae197b4
                      role: manager
                      url: http://www.example.com/api/users/176
                      email: fr_carmon_hyatt.1669857721@example.com
                      created_at: '2022-12-01T01:22:01.297Z'
                      updated_at: '2022-12-01T01:22:01.297Z'
                      custom_data: {}
                    - id: 177
                      name: Jeannine Kovacek
                      avatar_url: https://www.gravatar.com/avatar/f6f5c3d72d9b2281a40346eed21281a5
                      role: developer
                      url: http://www.example.com/api/users/177
                      email: jeannine_kovacek.1669857721@example.com
                      created_at: '2022-12-01T01:22:01.301Z'
                      updated_at: '2022-12-01T01:22:01.301Z'
                      custom_data: {}
                    - id: 178
                      name: Mrs. Korey Krajcik
                      avatar_url: https://www.gravatar.com/avatar/b2b262e7dee1d1f64860fbbf518f3926
                      role: developer
                      url: http://www.example.com/api/users/178
                      email: mrs_korey_krajcik.1669857721@example.com
                      created_at: '2022-12-01T01:22:01.306Z'
                      updated_at: '2022-12-01T01:22:01.306Z'
                      custom_data: {}
                    total_pages: 1
              schema:
                "$ref": "#/components/schemas/user_pages_response"
  "/api/users":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: List users
      tags:
      - Users
      parameters:
      - name: role_collection
        in: query
        schema:
          type: array
          items:
            "$ref": "#/components/schemas/user_request/properties/role"
        example:
        - admin
      - name: role
        in: query
        required: false
        schema:
          "$ref": "#/components/schemas/user_request/properties/role"
        example: admin
      - name: created_at_from
        in: query
        required: false
        description: Date with format YYYY.MM.DD
        example: 2010.01.25
        schema:
          type: string
      - name: created_at_to
        in: query
        required: false
        description: Date with format YYYY.MM.DD
        example: 2010.01.25
        schema:
          type: string
      - name: workspace_id
        in: query
        required: false
        example: 1
        schema:
          type: integer
      - name: search
        in: query
        required: false
        description: Searches for users by name and e-mail.
        example: michael
        schema:
          type: string
      - name: page
        in: query
        required: false
        description: Decides which result page should be returned.
        example: 2
        schema:
          type: integer
      - name: per
        in: query
        required: false
        description: Decides how many entities should be returned per one page. **Works
          only, when `page` param is given.**
        example: 2
        schema:
          type: integer
      - name: limit
        in: query
        required: false
        description: Decides how many entities should be returned.
        example: 3
        schema:
          type: integer
      responses:
        '200':
          description: successful with pages
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    users:
                    - id: 180
                      name: Refugio Gulgowski
                      avatar_url: https://www.gravatar.com/avatar/5262980ec23c85c283641feaa9af0b73
                      role: guest
                      url: http://www.example.com/api/users/180
                      email: refugio_gulgowski.1669857721@example.com
                      created_at: '2022-12-01T01:22:01.327Z'
                      updated_at: '2022-12-01T01:22:01.327Z'
                      custom_data: {}
                    - id: 181
                      name: Earle Effertz
                      avatar_url: https://www.gravatar.com/avatar/15fc4dc9445007cefc9a55deab40920b
                      role: guest
                      url: http://www.example.com/api/users/181
                      email: earle_effertz.1669857721@example.com
                      created_at: '2022-12-01T01:22:01.331Z'
                      updated_at: '2022-12-01T01:22:01.331Z'
                      custom_data: {}
                    - id: 182
                      name: Michale Wilderman
                      avatar_url: https://www.gravatar.com/avatar/bb9becd59b673e0b222a0cff1e153307
                      role: regular
                      url: http://www.example.com/api/users/182
                      email: michale_wilderman.1669857721@example.com
                      created_at: '2022-12-01T01:22:01.334Z'
                      updated_at: '2022-12-01T01:22:01.334Z'
                      custom_data: {}
                    - id: 183
                      name: Edie Wilkinson
                      avatar_url: https://www.gravatar.com/avatar/574b3e38495aff5b61e19b5d5a49f6cf
                      role: manager
                      url: http://www.example.com/api/users/183
                      email: edie_wilkinson.1669857721@example.com
                      created_at: '2022-12-01T01:22:01.338Z'
                      updated_at: '2022-12-01T01:22:01.338Z'
                      custom_data: {}
                    - id: 184
                      name: Leona Johnston CPA
                      avatar_url: https://www.gravatar.com/avatar/667998c70d79d573b4ff3045b4b852eb
                      role: manager
                      url: http://www.example.com/api/users/184
                      email: leona_johnston_cpa.1669857721@example.com
                      created_at: '2022-12-01T01:22:01.341Z'
                      updated_at: '2022-12-01T01:22:01.341Z'
                      custom_data: {}
                    - id: 185
                      name: Marcelino Greenholt
                      avatar_url: https://www.gravatar.com/avatar/2729dd21b430e9de66eed759e69db4ca
                      role: admin
                      url: http://www.example.com/api/users/185
                      email: marcelino_greenholt.1669857721@example.com
                      created_at: '2022-12-01T01:22:01.345Z'
                      updated_at: '2022-12-01T01:22:01.345Z'
                      custom_data: {}
                successful with pages:
                  summary: successful with pages
                  value:
                    users:
                    - id: 186
                      name: Manie Wisozk
                      avatar_url: https://www.gravatar.com/avatar/4b04c2293833f07ac3773ba77ff75039
                      role: guest
                      url: http://www.example.com/api/users/186
                      email: manie_wisozk.1669857721@example.com
                      created_at: '2022-12-01T01:22:01.361Z'
                      updated_at: '2022-12-01T01:22:01.361Z'
                      custom_data: {}
                    - id: 187
                      name: Kareem Feil
                      avatar_url: https://www.gravatar.com/avatar/c308af9f7252854f3652a34e6b0e7ee4
                      role: guest
                      url: http://www.example.com/api/users/187
                      email: kareem_feil.1669857721@example.com
                      created_at: '2022-12-01T01:22:01.364Z'
                      updated_at: '2022-12-01T01:22:01.364Z'
                      custom_data: {}
                    - id: 188
                      name: Ike Bogan
                      avatar_url: https://www.gravatar.com/avatar/375d36900320fb36fd58773cbcd87689
                      role: developer
                      url: http://www.example.com/api/users/188
                      email: ike_bogan.1669857721@example.com
                      created_at: '2022-12-01T01:22:01.368Z'
                      updated_at: '2022-12-01T01:22:01.368Z'
                      custom_data: {}
                    - id: 189
                      name: Moses Nicolas
                      avatar_url: https://www.gravatar.com/avatar/c49d93002763a0896f3bf07fd278f964
                      role: manager
                      url: http://www.example.com/api/users/189
                      email: moses_nicolas.1669857721@example.com
                      created_at: '2022-12-01T01:22:01.373Z'
                      updated_at: '2022-12-01T01:22:01.373Z'
                      custom_data: {}
                    - id: 190
                      name: Msgr. Lenard Lindgren
                      avatar_url: https://www.gravatar.com/avatar/2e4ba057887250e22ba6ad36fc1a6c04
                      role: developer
                      url: http://www.example.com/api/users/190
                      email: msgr_lenard_lindgren.1669857721@example.com
                      created_at: '2022-12-01T01:22:01.376Z'
                      updated_at: '2022-12-01T01:22:01.376Z'
                      custom_data: {}
                    - id: 191
                      name: Clemente Rosenbaum
                      avatar_url: https://www.gravatar.com/avatar/843d0bfb1db33821282883d5c0c3c87c
                      role: admin
                      url: http://www.example.com/api/users/191
                      email: clemente_rosenbaum.1669857721@example.com
                      created_at: '2022-12-01T01:22:01.380Z'
                      updated_at: '2022-12-01T01:22:01.380Z'
                      custom_data: {}
                    total_pages: 1
              schema:
                "$ref": "#/components/schemas/user_pages_response"
    post:
      summary: Create a user
      tags:
      - Users
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 193
                    name: New User
                    created_at: '2022-12-01T01:22:01.415Z'
                    updated_at: '2022-12-01T01:22:01.415Z'
                    email: new_user@example.com
                    role: developer
                    deleted_at:
                    recent_boards: []
                    custom_data: {}
              schema:
                "$ref": "#/components/schemas/user_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/user_request"
    put:
      summary: Update current user
      tags:
      - Users
      parameters: []
      responses:
        '204':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/user_update_request"
    delete:
      summary: Delete current user
      tags:
      - Users
      responses:
        '204':
          description: successful
  "/api/users/current":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: Show the currently signed in user
      tags:
      - Users
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 196
                    name: Rev. Glayds Wiegand
                    avatar_url: https://www.gravatar.com/avatar/0bfabf7b9823631f1b20289fea5e05b9
                    role: admin
                    url: http://www.example.com/api/users/196
                    email: rev_glayds_wiegand.1669857721@example.com
                    created_at: '2022-12-01T01:22:01.460Z'
                    updated_at: '2022-12-01T01:22:01.460Z'
                    custom_data: {}
              schema:
                "$ref": "#/components/schemas/user_response"
  "/api/users/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show a user
      tags:
      - Users
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 197
                    name: Morton Beer
                    avatar_url: https://www.gravatar.com/avatar/2c0c72dd8340ba34168547b9077949a6
                    role: guest
                    url: http://www.example.com/api/users/197
                    email: morton_beer.1669857721@example.com
                    created_at: '2022-12-01T01:22:01.476Z'
                    updated_at: '2022-12-01T01:22:01.476Z'
                    custom_data: {}
              schema:
                "$ref": "#/components/schemas/user_response"
  "/api/users/sign_in":
    post:
      summary: Sign in
      tags:
      - Users
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 199
                    name: Arturo Crist
                    created_at: '2022-12-01T01:22:01.494Z'
                    updated_at: '2022-12-01T01:22:01.494Z'
                    email: email@example.com
                    role: manager
                    deleted_at:
                    recent_boards: []
                    custom_data: {}
              schema:
                "$ref": "#/components/schemas/user_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/user_sign_in_request"
  "/api/users/sign_out":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    delete:
      summary: Sign out
      tags:
      - Users
      responses:
        '204':
          description: successful
  "/api/workspaces":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: list workspaces
      tags:
      - Workspaces
      security:
      - Bearer: {}
      parameters:
      - name: limit
        in: query
        description: Decides how many entities should be returned
        example: 3
        required: false
        schema:
          type: integer
      - name: boards
        in: query
        type: string
        schema:
          "$ref": "#/components/schemas/include_associated_enum"
        required: false
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful with `boards=all`:
                  summary: successful with `boards=all`
                  value:
                  - id: 95
                    name: Zamit
                    created_at: '2022-12-01T01:22:01.534Z'
                    updated_at: '2022-12-01T01:22:01.534Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/workspaces/95
                    boards:
                    - id: 93
                      name: Fermium
                      colour: "#8e0eed"
                      workspace_id: 95
                      created_at: '2022-12-01T01:22:01.536Z'
                      updated_at: '2022-12-01T01:22:01.536Z'
                      deleted_at:
                      custom_data: {}
                      url: http://www.example.com/api/boards/93
                      workspace_url: http://www.example.com/api/workspaces/95
                    - id: 94
                      name: Lutetium
                      colour: "#2ec1ee"
                      workspace_id: 95
                      created_at: '2022-12-01T01:22:01.538Z'
                      updated_at: '2022-12-01T01:22:01.538Z'
                      deleted_at:
                      custom_data: {}
                      url: http://www.example.com/api/boards/94
                      workspace_url: http://www.example.com/api/workspaces/95
                    - id: 95
                      name: Iridium
                      colour: "#dcba5b"
                      workspace_id: 95
                      created_at: '2022-12-01T01:22:01.539Z'
                      updated_at: '2022-12-01T01:22:01.539Z'
                      deleted_at:
                      custom_data: {}
                      url: http://www.example.com/api/boards/95
                      workspace_url: http://www.example.com/api/workspaces/95
                    - id: 96
                      name: Neodymium
                      colour: "#5e1cb7"
                      workspace_id: 95
                      created_at: '2022-12-01T01:22:01.540Z'
                      updated_at: '2022-12-01T01:22:01.540Z'
                      deleted_at:
                      custom_data: {}
                      url: http://www.example.com/api/boards/96
                      workspace_url: http://www.example.com/api/workspaces/95
                    - id: 97
                      name: Sulfur
                      colour: "#3d84ab"
                      workspace_id: 95
                      created_at: '2022-12-01T01:22:01.541Z'
                      updated_at: '2022-12-01T01:22:01.541Z'
                      deleted_at:
                      custom_data: {}
                      url: http://www.example.com/api/boards/97
                      workspace_url: http://www.example.com/api/workspaces/95
                  - id: 96
                    name: Konklab
                    created_at: '2022-12-01T01:22:01.542Z'
                    updated_at: '2022-12-01T01:22:01.542Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/workspaces/96
                    boards: []
                successful:
                  summary: successful
                  value:
                  - id: 97
                    name: Overhold
                    created_at: '2022-12-01T01:22:01.568Z'
                    updated_at: '2022-12-01T01:22:01.568Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/workspaces/97
                  - id: 98
                    name: Holdlamis
                    created_at: '2022-12-01T01:22:01.570Z'
                    updated_at: '2022-12-01T01:22:01.570Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/workspaces/98
                  - id: 99
                    name: Regrant
                    created_at: '2022-12-01T01:22:01.573Z'
                    updated_at: '2022-12-01T01:22:01.573Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/workspaces/99
                  - id: 100
                    name: Trippledex
                    created_at: '2022-12-01T01:22:01.575Z'
                    updated_at: '2022-12-01T01:22:01.575Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/workspaces/100
                  - id: 101
                    name: Toughjoyfax
                    created_at: '2022-12-01T01:22:01.577Z'
                    updated_at: '2022-12-01T01:22:01.577Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/workspaces/101
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/workspace_response"
    post:
      summary: create workspace
      tags:
      - Workspaces
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 102
                    name: New Workspace
                    created_at: '2022-12-01T01:22:01.612Z'
                    updated_at: '2022-12-01T01:22:01.612Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/workspaces/102
              schema:
                "$ref": "#/components/schemas/workspace_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/workspace_request"
  "/api/workspaces/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show workspace
      parameters:
      - name: boards
        in: query
        type: string
        schema:
          "$ref": "#/components/schemas/include_associated_enum"
        required: false
      tags:
      - Workspaces
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful with `boards=all`:
                  summary: successful with `boards=all`
                  value:
                    id: 103
                    name: Matsoft
                    created_at: '2022-12-01T01:22:01.623Z'
                    updated_at: '2022-12-01T01:22:01.623Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/workspaces/103
                    boards:
                    - id: 98
                      name: Lithium
                      colour: "#b324f5"
                      workspace_id: 103
                      created_at: '2022-12-01T01:22:01.625Z'
                      updated_at: '2022-12-01T01:22:01.626Z'
                      deleted_at:
                      custom_data: {}
                      url: http://www.example.com/api/boards/98
                      workspace_url: http://www.example.com/api/workspaces/103
                    - id: 99
                      name: Holmium
                      colour: "#b37f89"
                      workspace_id: 103
                      created_at: '2022-12-01T01:22:01.629Z'
                      updated_at: '2022-12-01T01:22:01.630Z'
                      deleted_at:
                      custom_data: {}
                      url: http://www.example.com/api/boards/99
                      workspace_url: http://www.example.com/api/workspaces/103
                successful:
                  summary: successful
                  value:
                    id: 106
                    name: Duobam
                    created_at: '2022-12-01T01:22:01.651Z'
                    updated_at: '2022-12-01T01:22:01.651Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/workspaces/106
              schema:
                "$ref": "#/components/schemas/workspace_response"
    put:
      summary: update workspace
      tags:
      - Workspaces
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 107
                    name: New Name
                    created_at: '2022-12-01T01:22:01.671Z'
                    updated_at: '2022-12-01T01:22:01.685Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/workspaces/107
              schema:
                "$ref": "#/components/schemas/workspace_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/workspace_request"
    delete:
      summary: delete workspace
      tags:
      - Workspaces
      responses:
        '204':
          description: successful
  "/api/workspaces/{id}/assign_user":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Workspace id
      required: true
      schema:
        type: string
    post:
      summary: Assign User
      tags:
      - Workspaces
      parameters: []
      responses:
        '204':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
  "/api/workspaces/{id}/unassign_user":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Workspace id
      required: true
      schema:
        type: string
    post:
      summary: Unassign User
      tags:
      - Workspaces
      parameters: []
      responses:
        '204':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
components:
  schemas:
    authorization:
      name: Authorization
      in: header
      type: string
      description: JWT token
      example: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiZGV2ZWxvcGVyIiwic3ViIjoiMSIsInNjcCI6InVzZXIiLCJhdWQiOm51bGwsImlhdCI6MTY2NjE4MDIzMiwiZXhwIjoxNjY3NDc2MjMyLCJqdGkiOiJhMzdlZTA5MC0zZGJmLTRhMzgtOTFiNy1mZTJlM2FiYjlkY2QifQ.tGGjFHfMszfGCfNZS6I-hQNLSu_2Xfs3W4hI8IT4CW0
      required: true
    include_associated_enum:
      type: string
      enum:
      - visible
      - invisible
      - non-archived
      - archived
      - all
    lambdee_models_enum:
      type: string
      enum:
      - DB::User
      - DB::Workspace
      - DB::Board
      - DB::List
      - DB::Task
      - DB::Comment
      - DB::Tag
      - DB::Sprint
      - DB::UserWorkspace
      - DB::TaskUser
      - DB::TaskTag
      - DB::SprintTask
    user_pages_response:
      type: object
      properties:
        users:
          type: array
          items:
            "$ref": "#components/schemas/user_response"
        total_pages:
          type: integer
      required:
      - users
    user_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        avatar_url:
          type: string
        url:
          type: string
        role:
          type: string
      required:
      - id
      - name
    user_request:
      type: object
      properties:
        user:
          type: object
          properties:
            name:
              type: string
            email:
              type: string
            password:
              type: string
            role:
              type: string
              enum:
              - guest
              - regular
              - developer
              - admin
              - manager
      required:
      - name
      - email
    user_update_request:
      type: object
      properties:
        user:
          type: object
          properties:
            name:
              type: string
            email:
              type: string
            password:
              type: string
            current_password:
              type: string
            role:
              type: string
              enum:
              - guest
              - regular
              - developer
              - admin
              - manager
      required:
      - current_password
    user_sign_in_request:
      type: object
      properties:
        user:
          type: object
          properties:
            email:
              type: string
            password:
              type: string
      required:
      - email
      - password
    comment_response:
      type: object
      properties:
        id:
          type: integer
        body:
          type: string
        deleted_at:
          type:
          - string
          - 'null'
          format: date_time
        author_id:
          type: integer
        task_id:
          type: integer
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        url:
          type: string
        users:
          type: array
          items:
            "$ref": "#/components/schemas/user_response"
          nullable: true
      required:
      - id
      - body
      - deleted_at
      - url
    tag_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        colour:
          type: string
        board_id:
          type: integer
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        url:
          type: string
        board_url:
          type: string
      required:
      - id
    tag_request:
      type: object
      properties:
        name:
          type: string
        colour:
          type: string
        board_id:
          type: integer
        task_id:
          type: integer
      required: []
    sprint_pages_response:
      type: object
      properties:
        sprints:
          type: array
          items:
            "$ref": "#components/schemas/sprint_response"
        total_pages:
          type: integer
      required:
      - sprints
    sprint_response:
      type: object
      properties:
        id:
          type: integer
        board_id:
          type: integer
        name:
          type: string
        description:
          type:
          - string
          - 'null'
        started_at:
          type: string
          format: date_time
        expected_end_at:
          type: string
          format: date_time
        ended_at:
          type:
          - string
          - 'null'
          format: date_time
        final_list_name:
          type: string
        url:
          type: string
        tasks:
          type: array
          items:
            "$ref": "#/components/schemas/task_with_sprint_task_response"
          nullable: true
      required:
      - id
      - name
    task_with_sprint_task_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        priority:
          type: string
        spent_time:
          type: integer
        points:
          type: integer
        added_at:
          type: string
          format: date_time
        completed_at:
          type:
          - string
          - 'null'
          format: date_time
        start_state:
          type: string
        state:
          type: string
      required:
      - id
    sprint_request:
      type: object
      properties:
        board_id:
          type: integer
        name:
          type: string
        description:
          type: string
        started_at:
          type: string
          format: date_time
          example: '2025-12-11T23:00:00'
        expected_end_at:
          type: string
          format: date_time
          example: '2025-12-18T23:00:00'
      required:
      - name
      - expected_end_at
    task_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type:
          - string
          - 'null'
        due_time:
          type:
          - string
          - 'null'
          format: date_time
        pos:
          type:
          - number
          - 'null'
          format: float
        priority:
          type:
          - string
          - 'null'
        points:
          type:
          - number
          - 'null'
          format: float
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        deleted_at:
          type:
          - string
          - 'null'
          format: date_time
        list_id:
          type: integer
        list_url:
          type: string
        url:
          type: string
        users:
          type: array
          items:
            "$ref": "#/components/schemas/user_response"
          nullable: true
        tags:
          type: array
          items:
            "$ref": "#/components/schemas/tag_response"
          nullable: true
        author:
          type: object
          schema:
            "$ref": "#/components/schemas/user_response"
          nullable: true
      required:
      - id
      - name
      - pos
      - priority
      - points
      - list_id
      - deleted_at
    task_request:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        due_time:
          type: string
          format: date_time
          example: '2025-12-18T23:00:00'
        pos:
          type: number
          format: float
          description: If not given, value will be set as for the last item in the
            list.
        priority:
          type: string
          enum:
          - very_low
          - low
          - medium
          - high
          - very_high
        points:
          type: number
          format: float
        list_id:
          type: integer
        author_id:
          type: integer
      required:
      - name
      - list_id
      - author_id
    list_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        pos:
          type: number
          format: float
        visible:
          type:
          - boolean
          - 'null'
        deleted_at:
          type:
          - string
          - 'null'
          format: date_time
        board_id:
          type: integer
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        url:
          type: string
        board_url:
          type: string
        tasks:
          type: array
          items:
            "$ref": "#/components/schemas/task_response"
          nullable: true
      required:
      - id
      - name
      - pos
      - visible
      - board_id
      - created_at
      - updated_at
      - deleted_at
    list_request:
      type: object
      properties:
        name:
          type: string
        pos:
          type: number
          format: float
        visible:
          type: boolean
        board_id:
          type: integer
      required:
      - name
      - board_id
    board_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        workspace_id:
          type: integer
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        deleted_at:
          type:
          - string
          - 'null'
          format: date_time
        url:
          type: string
        workspace_url:
          type: string
        lists:
          type: array
          items:
            "$ref": "#/components/schemas/list_response"
          nullable: true
      required:
      - id
      - name
      - workspace_id
      - created_at
      - updated_at
      - deleted_at
    board_request:
      type: object
      properties:
        name:
          type: string
        workspace_id:
          type: integer
      required:
      - name
      - workspace_id
    workspace_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        deleted_at:
          type:
          - string
          - 'null'
          format: date_time
        url:
          type: string
        boards:
          type: array
          items:
            "$ref": "#/components/schemas/board_response"
          nullable: true
      required:
      - id
      - name
      - created_at
      - updated_at
      - deleted_at
    workspace_request:
      type: object
      properties:
        name:
          type: string
      required:
      - name
    script_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        content:
          type: string
        url:
          type: string
        script_triggers:
          type: array
          items:
            "$ref": "#/components/schemas/nested_script_trigger_response"
      required: []
    script_request:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        content:
          type: string
        script_triggers_attributes:
          type: array
          items:
            "$ref": "#/components/schemas/nested_script_trigger_request"
      required:
      - name
    nested_script_trigger_response:
      type: object
      properties:
        id:
          type: integer
        script_id:
          type:
          - integer
          - 'null'
        subject_type:
          type:
          - string
          - 'null'
        subject_id:
          type:
          - integer
          - 'null'
        action:
          type: string
        delay:
          type: integer
        url:
          type: string
      required: []
    nested_script_trigger_request:
      type: object
      properties:
        id:
          type: integer
          description: Needed only for updates and destroys.
        script_id:
          type: integer
        subject_type:
          "$ref": "#/components/schemas/lambdee_models_enum"
        subject_id:
          type: integer
        action:
          type: string
          enum:
          - create
          - update
          - destroy
        delay:
          type: integer
          description: Number of seconds of script execution delay
        _destroy:
          type: boolean
          description: If `true` callback for given `id` will be destroyed. Works
            only nested in sprint.
      required:
      - action
    script_trigger_response:
      type: object
      properties:
        id:
          type: integer
        script_id:
          type: integer
        subject_type:
          type:
          - string
          - 'null'
        subject_id:
          type:
          - integer
          - 'null'
        action:
          type: string
        delay:
          type: integer
        url:
          type: string
      required: []
    script_trigger_request:
      type: object
      properties:
        script_id:
          type: integer
        subject_type:
          "$ref": "#/components/schemas/lambdee_models_enum"
        subject_id:
          type: integer
        action:
          type: string
        delay:
          type: integer
          description: Number of seconds of script execution delay
      required:
      - script_id
      - action
    script_run_response:
      type: object
      properties:
        id:
          type: integer
        script_id:
          type: integer
        script_name:
          type: string
        initiator_id:
          type: integer
        input:
          type:
          - string
          - 'null'
        output:
          type: string
        state:
          type: string
        delay:
          type:
          - integer
          - 'null'
        url:
          type: string
      required: []
    script_run_request:
      type: object
      properties:
        output:
          type: string
        state:
          type: string
          enum:
          - running
          - executed
          - failed
          - timed_out
          - connection_failed
      required: []
servers:
- url: "{defaultProtocol}://{defaultHost}"
  variables:
    defaultProtocol:
      default: http
    defaultHost:
      default: localhost:3000
