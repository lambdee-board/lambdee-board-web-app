---
openapi: 3.0.1
info:
  title: Lambdee API V1
  version: v1
paths:
  "/api/boards":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: list boards
      tags:
      - Boards
      parameters:
      - name: limit
        in: query
        required: false
        description: Decides how many entities should be returned
        example: 3
        schema:
          type: integer
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - id: 1
                    name: Actinium
                    colour: "#e0395c"
                    workspace_id: 1
                    created_at: '2022-12-01T18:37:03.399Z'
                    updated_at: '2022-12-01T18:37:03.399Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/boards/1
                    workspace_url: http://www.example.com/api/workspaces/1
                  - id: 2
                    name: Tungsten
                    colour: "#bc732d"
                    workspace_id: 2
                    created_at: '2022-12-01T18:37:03.402Z'
                    updated_at: '2022-12-01T18:37:03.402Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/boards/2
                    workspace_url: http://www.example.com/api/workspaces/2
                  - id: 3
                    name: Silicon
                    colour: "#255bb9"
                    workspace_id: 3
                    created_at: '2022-12-01T18:37:03.404Z'
                    updated_at: '2022-12-01T18:37:03.404Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/boards/3
                    workspace_url: http://www.example.com/api/workspaces/3
                  - id: 4
                    name: Tin
                    colour: "#ad17fc"
                    workspace_id: 4
                    created_at: '2022-12-01T18:37:03.406Z'
                    updated_at: '2022-12-01T18:37:03.406Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/boards/4
                    workspace_url: http://www.example.com/api/workspaces/4
                  - id: 5
                    name: Tungsten
                    colour: "#2932af"
                    workspace_id: 5
                    created_at: '2022-12-01T18:37:03.408Z'
                    updated_at: '2022-12-01T18:37:03.408Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/boards/5
                    workspace_url: http://www.example.com/api/workspaces/5
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/board_response"
    post:
      summary: create board
      tags:
      - Boards
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 6
                    name: New Board
                    colour:
                    workspace_id: 6
                    created_at: '2022-12-01T18:37:03.482Z'
                    updated_at: '2022-12-01T18:37:03.482Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/boards/6
                    workspace_url: http://www.example.com/api/workspaces/6
              schema:
                "$ref": "#/components/schemas/board_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/board_request"
  "/api/boards/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show board
      tags:
      - Boards
      parameters:
      - name: tasks
        in: query
        type: string
        schema:
          "$ref": "#/components/schemas/include_associated_enum"
        required: false
      - name: lists
        in: query
        type: string
        schema:
          "$ref": "#/components/schemas/include_associated_enum"
        required: false
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful with `lists=all`:
                  summary: successful with `lists=all`
                  value:
                    id: 7
                    name: Carbon
                    colour: "#cec066"
                    workspace_id: 7
                    created_at: '2022-12-01T18:37:03.493Z'
                    updated_at: '2022-12-01T18:37:03.493Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/boards/7
                    workspace_url: http://www.example.com/api/workspaces/7
                    lists:
                    - id: 1
                      name: tan
                      pos: 65536.0
                      visible: false
                      deleted_at: '2022-12-01T18:37:03.513Z'
                      board_id: 7
                      created_at: '2022-12-01T18:37:03.505Z'
                      updated_at: '2022-12-01T18:37:03.508Z'
                      custom_data: {}
                      url: http://www.example.com/api/lists/1
                      board_url: http://www.example.com/api/boards/7
                    - id: 2
                      name: yellow
                      pos: 65536.0
                      visible: false
                      deleted_at:
                      board_id: 7
                      created_at: '2022-12-01T18:37:03.517Z'
                      updated_at: '2022-12-01T18:37:03.518Z'
                      custom_data: {}
                      url: http://www.example.com/api/lists/2
                      board_url: http://www.example.com/api/boards/7
                successful with `lists=visible`:
                  summary: successful with `lists=visible`
                  value:
                    id: 10
                    name: Thulium
                    colour: "#967a21"
                    workspace_id: 10
                    created_at: '2022-12-01T18:37:03.545Z'
                    updated_at: '2022-12-01T18:37:03.545Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/boards/10
                    workspace_url: http://www.example.com/api/workspaces/10
                    lists: []
                successful with `lists=archived`:
                  summary: successful with `lists=archived`
                  value:
                    id: 12
                    name: Astatine
                    colour: "#d1a160"
                    workspace_id: 12
                    created_at: '2022-12-01T18:37:03.576Z'
                    updated_at: '2022-12-01T18:37:03.576Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/boards/12
                    workspace_url: http://www.example.com/api/workspaces/12
                    lists:
                    - id: 4
                      name: red
                      pos: 65536.0
                      visible: false
                      deleted_at: '2022-12-01T18:37:03.583Z'
                      board_id: 12
                      created_at: '2022-12-01T18:37:03.580Z'
                      updated_at: '2022-12-01T18:37:03.581Z'
                      custom_data: {}
                      url: http://www.example.com/api/lists/4
                      board_url: http://www.example.com/api/boards/12
                    - id: 5
                      name: jade
                      pos: 65536.0
                      visible: false
                      deleted_at: '2022-12-01T18:37:03.590Z'
                      board_id: 12
                      created_at: '2022-12-01T18:37:03.587Z'
                      updated_at: '2022-12-01T18:37:03.589Z'
                      custom_data: {}
                      url: http://www.example.com/api/lists/5
                      board_url: http://www.example.com/api/boards/12
                successful:
                  summary: successful
                  value:
                    id: 15
                    name: Tungsten
                    colour: "#5e6332"
                    workspace_id: 15
                    created_at: '2022-12-01T18:37:03.616Z'
                    updated_at: '2022-12-01T18:37:03.616Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/boards/15
                    workspace_url: http://www.example.com/api/workspaces/15
              schema:
                "$ref": "#/components/schemas/board_response"
    put:
      summary: update board
      tags:
      - Boards
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 16
                    name: New Name
                    colour: "#8b2940"
                    workspace_id: 16
                    created_at: '2022-12-01T18:37:03.640Z'
                    updated_at: '2022-12-01T18:37:03.655Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/boards/16
                    workspace_url: http://www.example.com/api/workspaces/16
              schema:
                "$ref": "#/components/schemas/board_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/board_request"
    delete:
      summary: delete board
      tags:
      - Boards
      responses:
        '204':
          description: successful
  "/api/boards/{id}/user_tasks":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: list current user tasks including board, lists, tags, users and author
      tags:
      - Boards
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 18
                    name: Bismuth
                    colour: "#e6f483"
                    workspace_id: 18
                    created_at: '2022-12-01T18:37:03.694Z'
                    updated_at: '2022-12-01T18:37:03.694Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/boards/18
                    workspace_url: http://www.example.com/api/workspaces/18
                    lists: []
              schema:
                "$ref": "#/components/schemas/board_response"
  "/api/boards/recently_viewed":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: list current user recently viewed boards (max 6)
      tags:
      - Boards
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value: []
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/board_response"
  "/api/tasks/{id}/comments":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Task id
      required: true
      schema:
        type: string
    get:
      summary: List task's comments
      tags:
      - Comments
      parameters:
      - name: with_author
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful with `with_author=true`:
                  summary: successful with `with_author=true`
                  value:
                  - id: 5
                    body: |-
                      ###### Quia
                      Recusandae veniam explicabo. Et odio assumenda. Aut consequatur veniam.
                      ###### Est
                    deleted_at:
                    author_id: 22
                    task_id: 2
                    created_at: '2022-12-01T18:37:03.838Z'
                    updated_at: '2022-12-01T18:37:03.838Z'
                    url: http://www.example.com/api/comments/5
                    author:
                      id: 22
                      name: Gus Runolfsson
                      avatar_url: https://www.gravatar.com/avatar/e7ad56e222e04e4044980baf506e5104
                      role: guest
                      url: http://www.example.com/api/users/22
                      email: gus_runolfsson.1669919823@example.com
                      created_at: '2022-12-01T18:37:03.820Z'
                      updated_at: '2022-12-01T18:37:03.820Z'
                      custom_data: {}
                  - id: 4
                    body: |-
                      # Molestias
                      Et est eum.
                      Hic cupiditate et. Quod ~rerum~ nam. Ut voluptas consectetur.
                    deleted_at:
                    author_id: 22
                    task_id: 2
                    created_at: '2022-12-01T18:37:03.836Z'
                    updated_at: '2022-12-01T18:37:03.836Z'
                    url: http://www.example.com/api/comments/4
                    author:
                      id: 22
                      name: Gus Runolfsson
                      avatar_url: https://www.gravatar.com/avatar/e7ad56e222e04e4044980baf506e5104
                      role: guest
                      url: http://www.example.com/api/users/22
                      email: gus_runolfsson.1669919823@example.com
                      created_at: '2022-12-01T18:37:03.820Z'
                      updated_at: '2022-12-01T18:37:03.820Z'
                      custom_data: {}
                  - id: 3
                    body: "## Officiis\nQuibusdam sint aspernatur. Non et totam.\n*
                      Sit. \n* Eos. \n* Et. \n* Ut. \n* Molestias. \n* Quisquam. \n*
                      Et. \n"
                    deleted_at:
                    author_id: 22
                    task_id: 2
                    created_at: '2022-12-01T18:37:03.834Z'
                    updated_at: '2022-12-01T18:37:03.834Z'
                    url: http://www.example.com/api/comments/3
                    author:
                      id: 22
                      name: Gus Runolfsson
                      avatar_url: https://www.gravatar.com/avatar/e7ad56e222e04e4044980baf506e5104
                      role: guest
                      url: http://www.example.com/api/users/22
                      email: gus_runolfsson.1669919823@example.com
                      created_at: '2022-12-01T18:37:03.820Z'
                      updated_at: '2022-12-01T18:37:03.820Z'
                      custom_data: {}
                  - id: 2
                    body: "###### Tenetur\nIusto et debitis. Sit explicabo at. Excepturi
                      ipsa non.\n* Accusantium. \n* Ea. \n* Sapiente. \n* Nostrum.
                      \n"
                    deleted_at:
                    author_id: 22
                    task_id: 2
                    created_at: '2022-12-01T18:37:03.832Z'
                    updated_at: '2022-12-01T18:37:03.832Z'
                    url: http://www.example.com/api/comments/2
                    author:
                      id: 22
                      name: Gus Runolfsson
                      avatar_url: https://www.gravatar.com/avatar/e7ad56e222e04e4044980baf506e5104
                      role: guest
                      url: http://www.example.com/api/users/22
                      email: gus_runolfsson.1669919823@example.com
                      created_at: '2022-12-01T18:37:03.820Z'
                      updated_at: '2022-12-01T18:37:03.820Z'
                      custom_data: {}
                  - id: 1
                    body: |-
                      # Hic
                      Voluptatibus libero cupiditate. Qui ad quas.
                      # Molestiae
                      Sunt ea temporibus. Iusto eius debitis. Aut consequatur officiis.
                      `Esse.`
                    deleted_at:
                    author_id: 22
                    task_id: 2
                    created_at: '2022-12-01T18:37:03.828Z'
                    updated_at: '2022-12-01T18:37:03.828Z'
                    url: http://www.example.com/api/comments/1
                    author:
                      id: 22
                      name: Gus Runolfsson
                      avatar_url: https://www.gravatar.com/avatar/e7ad56e222e04e4044980baf506e5104
                      role: guest
                      url: http://www.example.com/api/users/22
                      email: gus_runolfsson.1669919823@example.com
                      created_at: '2022-12-01T18:37:03.820Z'
                      updated_at: '2022-12-01T18:37:03.820Z'
                      custom_data: {}
                successful:
                  summary: successful
                  value:
                  - id: 10
                    body: |-
                      ## Voluptate
                      Labore quia nemo. Commodi veritatis quia.
                      ```ruby
                      Inventore.
                      ```
                    deleted_at:
                    author_id: 25
                    task_id: 3
                    created_at: '2022-12-01T18:37:03.885Z'
                    updated_at: '2022-12-01T18:37:03.885Z'
                    url: http://www.example.com/api/comments/10
                  - id: 9
                    body: |-
                      ### Tempora
                      Reiciendis nisi quod. Perspiciatis totam quia.
                      ## Repellat
                      Ut illum ea. Quia quam totam. Tempora maxime illum.
                      ### Reiciendis
                      Harum ab officia. Neque dolorem in. Vero non minus.
                      ###### Id
                    deleted_at:
                    author_id: 25
                    task_id: 3
                    created_at: '2022-12-01T18:37:03.884Z'
                    updated_at: '2022-12-01T18:37:03.884Z'
                    url: http://www.example.com/api/comments/9
                  - id: 8
                    body: |-
                      ### Voluptatem
                      Assumenda ex aut. Ipsa eligendi dolorum.
                      `Rerum.`
                    deleted_at:
                    author_id: 25
                    task_id: 3
                    created_at: '2022-12-01T18:37:03.882Z'
                    updated_at: '2022-12-01T18:37:03.882Z'
                    url: http://www.example.com/api/comments/8
                  - id: 7
                    body: "#### Voluptatem\nUllam et facilis. Quo dolorum quasi.\n0.
                      Enim. \n1. Harum. \n2. Maiores. \n"
                    deleted_at:
                    author_id: 25
                    task_id: 3
                    created_at: '2022-12-01T18:37:03.881Z'
                    updated_at: '2022-12-01T18:37:03.881Z'
                    url: http://www.example.com/api/comments/7
                  - id: 6
                    body: |-
                      ###### Error
                      Nostrum ut minus. Voluptatem perferendis cupiditate. Dolores ad ipsam.
                      Quo adipisci _autem._ Exercitationem vel rerum. Quisquam id nobis.
                    deleted_at:
                    author_id: 25
                    task_id: 3
                    created_at: '2022-12-01T18:37:03.879Z'
                    updated_at: '2022-12-01T18:37:03.879Z'
                    url: http://www.example.com/api/comments/6
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/comment_response"
  "/api/lists":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: List lists
      tags:
      - Lists
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - id: 9
                    name: taupe
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 28
                    created_at: '2022-12-01T18:37:03.918Z'
                    updated_at: '2022-12-01T18:37:03.918Z'
                    custom_data: {}
                    url: http://www.example.com/api/lists/9
                    board_url: http://www.example.com/api/boards/28
                  - id: 10
                    name: byzantium
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 29
                    created_at: '2022-12-01T18:37:03.921Z'
                    updated_at: '2022-12-01T18:37:03.921Z'
                    custom_data: {}
                    url: http://www.example.com/api/lists/10
                    board_url: http://www.example.com/api/boards/29
                  - id: 11
                    name: apricot
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 30
                    created_at: '2022-12-01T18:37:03.926Z'
                    updated_at: '2022-12-01T18:37:03.926Z'
                    custom_data: {}
                    url: http://www.example.com/api/lists/11
                    board_url: http://www.example.com/api/boards/30
                  - id: 12
                    name: plum
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 31
                    created_at: '2022-12-01T18:37:03.932Z'
                    updated_at: '2022-12-01T18:37:03.932Z'
                    custom_data: {}
                    url: http://www.example.com/api/lists/12
                    board_url: http://www.example.com/api/boards/31
                  - id: 13
                    name: ivory
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 32
                    created_at: '2022-12-01T18:37:03.939Z'
                    updated_at: '2022-12-01T18:37:03.939Z'
                    custom_data: {}
                    url: http://www.example.com/api/lists/13
                    board_url: http://www.example.com/api/boards/32
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/list_response"
    post:
      summary: Create List
      tags:
      - Lists
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 14
                    name: New List
                    pos: 1212.0
                    visible: false
                    deleted_at:
                    board_id: 33
                    created_at: '2022-12-01T18:37:03.995Z'
                    updated_at: '2022-12-01T18:37:03.995Z'
                    custom_data: {}
                    url: http://www.example.com/api/lists/14
                    board_url: http://www.example.com/api/boards/33
              schema:
                "$ref": "#/components/schemas/list_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/list_request"
  "/api/lists/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show List
      tags:
      - Lists
      parameters:
      - name: tasks
        in: query
        type: string
        schema:
          "$ref": "#/components/schemas/include_associated_enum"
        required: false
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful with `tasks=all`:
                  summary: successful with `tasks=all`
                  value:
                    id: 15
                    name: cerise
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 34
                    created_at: '2022-12-01T18:37:04.003Z'
                    updated_at: '2022-12-01T18:37:04.003Z'
                    custom_data: {}
                    url: http://www.example.com/api/lists/15
                    board_url: http://www.example.com/api/boards/34
                    tasks:
                    - id: 4
                      name: Viva la Vida or Death and All His Friends
                      pos: 65536.0
                      priority: low
                      spent_time: 0
                      points: 3
                      due_time: '2022-12-08T18:37:04.006Z'
                      list_id: 15
                      deleted_at:
                      url: http://www.example.com/api/tasks/4
                      list_url: http://www.example.com/api/lists/15
                      users:
                      - id: 30
                        name: Chi Nader
                        avatar_url: https://www.gravatar.com/avatar/69a7510c5afa670a708c6dd9f5498ee5
                        role: regular
                        url: http://www.example.com/api/users/30
                      - id: 31
                        name: Dr. Dann Windler
                        avatar_url: https://www.gravatar.com/avatar/116d6039da35491979649b2592eec226
                        role: developer
                        url: http://www.example.com/api/users/31
                      tags:
                      - id: 2
                        name: Marketing
                        colour: "#cba430"
                        url: http://www.example.com/api/tags/2
                      - id: 3
                        name: Government
                        colour: "#326649"
                        url: http://www.example.com/api/tags/3
                    - id: 5
                      name: Spice
                      pos: 65536.0
                      priority: high
                      spent_time: 0
                      points: 1
                      due_time: '2022-12-08T18:37:04.035Z'
                      list_id: 15
                      deleted_at: '2022-12-01T18:37:04.047Z'
                      url: http://www.example.com/api/tasks/5
                      list_url: http://www.example.com/api/lists/15
                      users: []
                      tags: []
                successful with `tasks=visible`:
                  summary: successful with `tasks=visible`
                  value:
                    id: 18
                    name: erin
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 39
                    created_at: '2022-12-01T18:37:04.080Z'
                    updated_at: '2022-12-01T18:37:04.080Z'
                    custom_data: {}
                    url: http://www.example.com/api/lists/18
                    board_url: http://www.example.com/api/boards/39
                    tasks:
                    - id: 6
                      name: Recovery
                      pos: 65536.0
                      priority: medium
                      spent_time: 0
                      points: 2
                      due_time: '2022-12-08T18:37:04.082Z'
                      list_id: 18
                      deleted_at:
                      url: http://www.example.com/api/tasks/6
                      list_url: http://www.example.com/api/lists/18
                      users:
                      - id: 35
                        name: Sheena Sawayn
                        avatar_url: https://www.gravatar.com/avatar/f475cb2e1b1385a87a348bddbf89fc5e
                        role: guest
                        url: http://www.example.com/api/users/35
                      - id: 36
                        name: Marcella Wehner IV
                        avatar_url: https://www.gravatar.com/avatar/09565fa98c9d1c1a8c2c9e55f45541e4
                        role: manager
                        url: http://www.example.com/api/users/36
                      tags:
                      - id: 4
                        name: IT
                        colour: "#784b45"
                        url: http://www.example.com/api/tags/4
                    - id: 7
                      name: Saturday Night Fever
                      pos: 65536.0
                      priority: very_high
                      spent_time: 0
                      points: 5
                      due_time: '2022-12-08T18:37:04.107Z'
                      list_id: 18
                      deleted_at:
                      url: http://www.example.com/api/tasks/7
                      list_url: http://www.example.com/api/lists/18
                      users: []
                      tags: []
                successful with `tasks=archived`:
                  summary: successful with `tasks=archived`
                  value:
                    id: 21
                    name: coral
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 43
                    created_at: '2022-12-01T18:37:04.146Z'
                    updated_at: '2022-12-01T18:37:04.146Z'
                    custom_data: {}
                    url: http://www.example.com/api/lists/21
                    board_url: http://www.example.com/api/boards/43
                    tasks:
                    - id: 8
                      name: 'HIStory: Past, Present and Future, Book I'
                      pos: 65536.0
                      priority: medium
                      spent_time: 0
                      points: 4
                      due_time: '2022-12-08T18:37:04.148Z'
                      list_id: 21
                      deleted_at: '2022-12-01T18:37:04.160Z'
                      url: http://www.example.com/api/tasks/8
                      list_url: http://www.example.com/api/lists/21
                      users: []
                      tags: []
                    - id: 9
                      name: "(What's the Story) Morning Glory?"
                      pos: 65536.0
                      priority: high
                      spent_time: 0
                      points: 3
                      due_time: '2022-12-08T18:37:04.161Z'
                      list_id: 21
                      deleted_at: '2022-12-01T18:37:04.173Z'
                      url: http://www.example.com/api/tasks/9
                      list_url: http://www.example.com/api/lists/21
                      users:
                      - id: 41
                        name: Johnie Cruickshank Sr.
                        avatar_url: https://www.gravatar.com/avatar/2d0e4f479705312bb9fd7e470d12a258
                        role: regular
                        url: http://www.example.com/api/users/41
                      tags:
                      - id: 5
                        name: Manufacturing
                        colour: "#93f4c4"
                        url: http://www.example.com/api/tags/5
                successful:
                  summary: successful
                  value:
                    id: 24
                    name: red
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 47
                    created_at: '2022-12-01T18:37:04.210Z'
                    updated_at: '2022-12-01T18:37:04.210Z'
                    custom_data: {}
                    url: http://www.example.com/api/lists/24
                    board_url: http://www.example.com/api/boards/47
              schema:
                "$ref": "#/components/schemas/list_response"
    put:
      summary: Update list
      tags:
      - Lists
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 25
                    name: New Name
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 48
                    created_at: '2022-12-01T18:37:04.231Z'
                    updated_at: '2022-12-01T18:37:04.248Z'
                    custom_data: {}
                    url: http://www.example.com/api/lists/25
                    board_url: http://www.example.com/api/boards/48
              schema:
                "$ref": "#/components/schemas/list_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/list_request"
    delete:
      summary: Delete list
      tags:
      - Lists
      responses:
        '204':
          description: successful
  "/api/script_runs":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: List script runs
      tags:
      - ScriptRuns
      parameters:
      - name: limit
        in: query
        required: false
        description: Decides how many entities should be returned
        example: 3
        schema:
          type: integer
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - id: 1
                    script_id: 1
                    input: puts 'Hello world'
                    output: Hello world
                    initiator_id: 48
                    state: running
                    delay:
                    script_name: My first Lambdee Script
                    url: http://www.example.com/api/script_runs/1
                  - id: 2
                    script_id: 2
                    input: puts 'Hello world'
                    output: Hello world
                    initiator_id: 50
                    state: running
                    delay:
                    script_name: My first Lambdee Script
                    url: http://www.example.com/api/script_runs/2
                  - id: 3
                    script_id: 3
                    input: puts 'Hello world'
                    output: Hello world
                    initiator_id: 52
                    state: running
                    delay:
                    script_name: My first Lambdee Script
                    url: http://www.example.com/api/script_runs/3
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/script_run_response"
  "/api/scripts/{id}/script_runs":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Script id
      required: true
      schema:
        type: string
    - name: limit
      in: query
      required: false
      description: Decides how many entities should be returned
      example: 3
      schema:
        type: integer
    get:
      summary: List script's script runs
      tags:
      - ScriptRuns
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - id: 4
                    script_id: 4
                    input: puts 'Hello world'
                    output: Hello world
                    initiator_id: 56
                    state: running
                    delay:
                    script_name: My first Lambdee Script
                    url: http://www.example.com/api/script_runs/4
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/script_run_response"
  "/api/script_runs/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show script run
      tags:
      - ScriptRuns
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 5
                    script_id: 5
                    input: puts 'Hello world'
                    output: Hello world
                    initiator_id: 60
                    state: running
                    delay:
                    script_name: My first Lambdee Script
                    url: http://www.example.com/api/script_runs/5
              schema:
                "$ref": "#/components/schemas/script_run_response"
    put:
      summary: Update script run
      tags:
      - ScriptRuns
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 6
                    script_id: 6
                    input: puts 'Hello world'
                    output: example output
                    initiator_id: 64
                    state: executed
                    delay:
                    script_name: My first Lambdee Script
                    url: http://www.example.com/api/script_runs/6
              schema:
                "$ref": "#/components/schemas/script_run_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/script_run_request"
  "/api/script_triggers":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    post:
      summary: Create script trigger
      tags:
      - Script triggers
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 1
                    script_id: 7
                    subject_type: DB::Task
                    subject_id: 10
                    action: destroy
                    delay: 60
                    url: http://www.example.com/api/script_triggers/1
              schema:
                "$ref": "#/components/schemas/script_trigger_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/script_trigger_request"
  "/api/script_triggers/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show script trigger
      tags:
      - Script triggers
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 2
                    script_id: 8
                    subject_type:
                    subject_id:
                    action: create
                    delay: 60
                    url: http://www.example.com/api/script_triggers/2
              schema:
                "$ref": "#/components/schemas/script_trigger_response"
    put:
      summary: Update script trigger
      tags:
      - Script triggers
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 3
                    script_id: 9
                    subject_type:
                    subject_id:
                    action: destroy
                    delay: 60
                    url: http://www.example.com/api/script_triggers/3
              schema:
                "$ref": "#/components/schemas/script_trigger_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/script_trigger_request"
    delete:
      summary: Delete script_trigger
      tags:
      - Script triggers
      responses:
        '204':
          description: successful
  "/api/scripts":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: List scripts
      tags:
      - Scripts
      parameters:
      - name: limit
        in: query
        required: false
        description: Decides how many entities should be returned
        example: 3
        schema:
          type: integer
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - id: 11
                    content: puts 'hello world'
                    name: My first Lambdee Script
                    description: Description of the script
                    author_id: 80
                    url: http://www.example.com/api/scripts/11
                  - id: 12
                    content: puts 'hello world'
                    name: My first Lambdee Script
                    description: Description of the script
                    author_id: 81
                    url: http://www.example.com/api/scripts/12
                  - id: 13
                    content: puts 'hello world'
                    name: My first Lambdee Script
                    description: Description of the script
                    author_id: 82
                    url: http://www.example.com/api/scripts/13
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/script_response"
    post:
      summary: Create Script
      tags:
      - Scripts
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 14
                    content: puts 'Hello world!'
                    name: New Script
                    description: What script does
                    author_id: 85
                    url: http://www.example.com/api/scripts/14
                    script_triggers:
                    - id: 5
                      script_id: 14
                      subject_type:
                      subject_id:
                      action: create
                      delay: 60
                      url: http://www.example.com/api/script_triggers/5
                    - id: 6
                      script_id: 14
                      subject_type: DB::Task
                      subject_id:
                      action: update
                      delay: 60
                      url: http://www.example.com/api/script_triggers/6
                    - id: 7
                      script_id: 14
                      subject_type: DB::Task
                      subject_id: 11
                      action: destroy
                      delay: 60
                      url: http://www.example.com/api/script_triggers/7
              schema:
                "$ref": "#/components/schemas/script_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/script_request"
  "/api/scripts/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show Script
      tags:
      - Scripts
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 15
                    content: puts 'hello world'
                    name: My first Lambdee Script
                    description: Description of the script
                    author_id: 88
                    url: http://www.example.com/api/scripts/15
                    script_triggers: []
              schema:
                "$ref": "#/components/schemas/script_response"
    put:
      summary: Update Script
      tags:
      - Scripts
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 16
                    content: puts 'hello world'
                    name: New Name
                    description: Description of the script
                    author_id: 91
                    url: http://www.example.com/api/scripts/16
                    script_triggers:
                    - id: 9
                      script_id: 16
                      subject_type:
                      subject_id:
                      action: create
                      delay: 60
                      url: http://www.example.com/api/script_triggers/9
              schema:
                "$ref": "#/components/schemas/script_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/script_request"
    delete:
      summary: Delete script
      tags:
      - Scripts
      responses:
        '204':
          description: successful
  "/api/boards/{id}/sprints":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Board id
      required: true
      schema:
        type: string
    get:
      summary: List board's sprints
      tags:
      - Sprints
      parameters:
      - name: page
        in: query
        required: false
        description: Decides which result page should be returned.
        example: 2
        schema:
          type: integer
      - name: per
        in: query
        required: false
        description: Decides how many entities should be returned per one page. **Works
          only, when `page` param is given.**
        example: 2
        schema:
          type: integer
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    sprints:
                    - id: 1
                      board_id: 52
                      name: Busselton
                      description: Omnis molestiae dolor. Eaque rerum ut. Dicta iste
                        officiis.
                      started_at: '2022-12-01T18:37:04.734Z'
                      expected_end_at: '2022-12-08T18:37:04.734Z'
                      ended_at:
                      final_list_name: Done
                      custom_data: {}
                      url: http://www.example.com/api/sprints/1
                    - id: 2
                      board_id: 52
                      name: Bundaberg
                      description: Impedit sunt in. Voluptatibus exercitationem qui.
                        Eveniet qui facilis.
                      started_at: '2022-12-01T18:37:04.738Z'
                      expected_end_at: '2022-12-08T18:37:04.738Z'
                      ended_at:
                      final_list_name: Done
                      custom_data: {}
                      url: http://www.example.com/api/sprints/2
                    - id: 3
                      board_id: 52
                      name: Hobart
                      description: Sint eaque consequatur. Quia dolorem necessitatibus.
                        Veritatis velit architecto.
                      started_at: '2022-12-01T18:37:04.740Z'
                      expected_end_at: '2022-12-08T18:37:04.740Z'
                      ended_at:
                      final_list_name: Done
                      custom_data: {}
                      url: http://www.example.com/api/sprints/3
              schema:
                "$ref": "#/components/schemas/sprint_pages_response"
  "/api/sprints":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: List sprints
      tags:
      - Sprints
      parameters:
      - name: page
        in: query
        required: false
        description: Decides which result page should be returned.
        example: 2
        schema:
          type: integer
      - name: per
        in: query
        required: false
        description: Decides how many entities should be returned per one page. **Works
          only, when `page` param is given.**
        example: 2
        schema:
          type: integer
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    sprints: []
              schema:
                "$ref": "#/components/schemas/sprint_pages_response"
    post:
      summary: Create sprint
      tags:
      - Sprints
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 4
                    board_id: 53
                    name: New Sprint
                    description: Example description of new sprint
                    started_at: '2022-12-01T18:37:04.807Z'
                    expected_end_at: '2025-12-11T23:00:00.000Z'
                    ended_at:
                    final_list_name: Done
                    custom_data: {}
                    url: http://www.example.com/api/sprints/4
              schema:
                "$ref": "#/components/schemas/sprint_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/sprint_request"
  "/api/sprints/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    - name: tasks
      in: query
      example: all
      required: false
      schema:
        type: string
    get:
      summary: Show Sprint
      tags:
      - Sprints
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful with `tasks=all`:
                  summary: successful with `tasks=all`
                  value:
                    id: 5
                    board_id: 54
                    name: Bendigo
                    description: Impedit ratione culpa. Facilis dolorem neque. Sed
                      id ea.
                    started_at: '2022-12-01T18:37:04.823Z'
                    expected_end_at: '2022-12-08T18:37:04.823Z'
                    ended_at:
                    final_list_name: Done
                    custom_data: {}
                    url: http://www.example.com/api/sprints/5
                    tasks:
                    - id: 12
                      name: The Joshua Tree
                      priority: low
                      spent_time: 0
                      points: 1
                      added_at: '2022-12-01T18:37:04.858Z'
                      completed_at:
                      start_state: To Do
                      state: Doing
                successful:
                  summary: successful
                  value:
                    id: 6
                    board_id: 56
                    name: Perth
                    description: Esse cum molestias. Soluta nam ex. Qui ut ad.
                    started_at: '2022-12-01T18:37:04.884Z'
                    expected_end_at: '2022-12-08T18:37:04.884Z'
                    ended_at:
                    final_list_name: Done
                    custom_data: {}
                    url: http://www.example.com/api/sprints/6
              schema:
                "$ref": "#/components/schemas/sprint_response"
    put:
      summary: Update Sprint
      tags:
      - Sprints
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 7
                    board_id: 57
                    name: New Name
                    description: Sequi officia fugiat. Similique iste vel. Voluptatum
                      eos quia.
                    started_at: '2022-12-01T18:37:04.910Z'
                    expected_end_at: '2022-12-08T18:37:04.910Z'
                    ended_at:
                    final_list_name: Done
                    custom_data: {}
                    url: http://www.example.com/api/sprints/7
              schema:
                "$ref": "#/components/schemas/sprint_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/sprint_request"
    delete:
      summary: Delete sprint
      tags:
      - Sprints
      responses:
        '204':
          description: successful
  "/api/sprints/{id}/end":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    put:
      summary: End sprint
      tags:
      - Sprints
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 9
                    board_id: 59
                    name: Launceston
                    description: Itaque odio corrupti. Iste rerum saepe. Voluptas
                      inventore enim.
                    started_at: '2022-12-01T18:37:04.964Z'
                    expected_end_at: '2022-12-08T18:37:04.964Z'
                    ended_at: '2022-12-01T18:37:05.006Z'
                    final_list_name: Done
                    custom_data: {}
                    url: http://www.example.com/api/sprints/9
              schema:
                "$ref": "#/components/schemas/sprint_response"
  "/api/boards/{id}/active_sprint":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show active sprint
      tags:
      - Sprints
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 10
                    board_id: 60
                    name: Canberra
                    description: Sed qui tenetur. Iusto ratione quia. Eum qui voluptates.
                    started_at: '2022-12-01T18:37:05.017Z'
                    expected_end_at: '2022-12-08T18:37:05.017Z'
                    ended_at:
                    final_list_name: Done
                    custom_data: {}
                    url: http://www.example.com/api/sprints/10
              schema:
                "$ref": "#/components/schemas/sprint_response"
  "/api/sprints/{id}/burn_up_chart":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show data for burn up chart
      tags:
      - Sprints
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - name: Work Scope
                    data:
                      '2022-12-01': 0
                      '2022-12-08': 0
                  - name: Completed Work
                    data:
                      '2022-12-01': 0
                      '2022-12-08':
  "/api/boards/{id}/tags":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Board id
      required: true
      schema:
        type: string
    get:
      summary: List board's tags
      tags:
      - Tags
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - id: 6
                    name: Marketing
                    colour: "#21f045"
                    url: http://www.example.com/api/tags/6
                    board_id: 62
                    created_at: '2022-12-01T18:37:05.103Z'
                    updated_at: '2022-12-01T18:37:05.103Z'
                    custom_data: {}
                  - id: 7
                    name: Advertising
                    colour: "#245467"
                    url: http://www.example.com/api/tags/7
                    board_id: 62
                    created_at: '2022-12-01T18:37:05.106Z'
                    updated_at: '2022-12-01T18:37:05.106Z'
                    custom_data: {}
                  - id: 8
                    name: Design
                    colour: "#34c0a8"
                    url: http://www.example.com/api/tags/8
                    board_id: 62
                    created_at: '2022-12-01T18:37:05.108Z'
                    updated_at: '2022-12-01T18:37:05.108Z'
                    custom_data: {}
                  - id: 9
                    name: Healthcare
                    colour: "#be3dc9"
                    url: http://www.example.com/api/tags/9
                    board_id: 62
                    created_at: '2022-12-01T18:37:05.111Z'
                    updated_at: '2022-12-01T18:37:05.111Z'
                    custom_data: {}
                  - id: 10
                    name: Legal
                    colour: "#012079"
                    url: http://www.example.com/api/tags/10
                    board_id: 62
                    created_at: '2022-12-01T18:37:05.114Z'
                    updated_at: '2022-12-01T18:37:05.114Z'
                    custom_data: {}
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/tag_response"
    post:
      summary: Create tag
      tags:
      - Tags
      parameters:
      - name: id
        in: path
        description: Board id
        required: true
        schema:
          type: string
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 11
                    name: New Tag
                    colour: "#fff000"
                    url: http://www.example.com/api/tags/11
                    board_id: 63
                    created_at: '2022-12-01T18:37:05.171Z'
                    updated_at: '2022-12-01T18:37:05.171Z'
                    custom_data: {}
              schema:
                "$ref": "#/components/schemas/tag_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/tag_request"
  "/api/tags":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    post:
      summary: Create tag
      tags:
      - Tags
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 12
                    name: New Tag
                    colour: "#fff000"
                    url: http://www.example.com/api/tags/12
                    board_id: 64
                    created_at: '2022-12-01T18:37:05.218Z'
                    updated_at: '2022-12-01T18:37:05.218Z'
                    custom_data: {}
              schema:
                "$ref": "#/components/schemas/tag_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/tag_request"
  "/api/tasks/{id}/tags":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Task id
      required: true
      schema:
        type: string
    get:
      summary: List task's tags
      tags:
      - Tags
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - id: 13
                    name: Marketing
                    colour: "#491246"
                    url: http://www.example.com/api/tags/13
                    board_id: 65
                    created_at: '2022-12-01T18:37:05.244Z'
                    updated_at: '2022-12-01T18:37:05.244Z'
                    custom_data: {}
                  - id: 14
                    name: IT
                    colour: "#a56316"
                    url: http://www.example.com/api/tags/14
                    board_id: 65
                    created_at: '2022-12-01T18:37:05.248Z'
                    updated_at: '2022-12-01T18:37:05.248Z'
                    custom_data: {}
                  - id: 15
                    name: Community-Services
                    colour: "#1c0e02"
                    url: http://www.example.com/api/tags/15
                    board_id: 65
                    created_at: '2022-12-01T18:37:05.251Z'
                    updated_at: '2022-12-01T18:37:05.251Z'
                    custom_data: {}
                  - id: 16
                    name: Accounting
                    colour: "#b953f5"
                    url: http://www.example.com/api/tags/16
                    board_id: 65
                    created_at: '2022-12-01T18:37:05.256Z'
                    updated_at: '2022-12-01T18:37:05.256Z'
                    custom_data: {}
                  - id: 17
                    name: Banking
                    colour: "#045cc6"
                    url: http://www.example.com/api/tags/17
                    board_id: 65
                    created_at: '2022-12-01T18:37:05.259Z'
                    updated_at: '2022-12-01T18:37:05.259Z'
                    custom_data: {}
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/tag_response"
    post:
      summary: Create tag (associated with given task and task's board)
      tags:
      - Tags
      parameters:
      - name: id
        in: path
        description: Task id
        required: true
        schema:
          type: string
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 18
                    name: New Tag
                    colour: "#fff000"
                    url: http://www.example.com/api/tags/18
                    board_id: 66
                    created_at: '2022-12-01T18:37:05.327Z'
                    updated_at: '2022-12-01T18:37:05.327Z'
                    custom_data: {}
              schema:
                "$ref": "#/components/schemas/tag_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/tag_request"
  "/api/tags/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show Tags
      tags:
      - Tags
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 19
                    name: Technology
                    colour: "#d94bcd"
                    url: http://www.example.com/api/tags/19
                    board_id: 67
                    created_at: '2022-12-01T18:37:05.344Z'
                    updated_at: '2022-12-01T18:37:05.344Z'
                    custom_data: {}
              schema:
                "$ref": "#/components/schemas/tag_response"
    put:
      summary: Update Tag
      tags:
      - Tags
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 20
                    name: New Name
                    colour: "#2c6237"
                    url: http://www.example.com/api/tags/20
                    board_id: 68
                    created_at: '2022-12-01T18:37:05.374Z'
                    updated_at: '2022-12-01T18:37:05.388Z'
                    custom_data: {}
              schema:
                "$ref": "#/components/schemas/tag_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/tag_request"
    delete:
      summary: Delete tag
      tags:
      - Tags
      responses:
        '204':
          description: successful
  "/api/tasks":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: List tasks
      tags:
      - Tasks
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - id: 16
                    name: Appetite for Destruction
                    pos: 65536.0
                    priority: high
                    spent_time: 0
                    points: 3
                    due_time: '2022-12-08T18:37:05.417Z'
                    list_id: 33
                    deleted_at:
                    url: http://www.example.com/api/tasks/16
                    list_url: http://www.example.com/api/lists/33
                    description: |-
                      #### Qui
                      Dignissimos labore enim. Repellat quidem fuga. Adipisci unde accusantium. Provident beatae mollitia. Ut voluptatem blanditiis. Occaecati labore delectus.
                      ```ruby
                      Molestias.
                      ```
                    created_at: '2022-12-01T18:37:05.426Z'
                    updated_at: '2022-12-01T18:37:05.426Z'
                  - id: 17
                    name: 'Titanic: Music from the Motion Picture'
                    pos: 65536.0
                    priority: very_high
                    spent_time: 0
                    points: 1
                    due_time: '2022-12-08T18:37:05.428Z'
                    list_id: 34
                    deleted_at:
                    url: http://www.example.com/api/tasks/17
                    list_url: http://www.example.com/api/lists/34
                    description: |-
                      #### Deserunt
                      Aperiam id voluptate. Qui non qui. Optio dolores omnis. Maxime odit perspiciatis. Voluptas vitae ut.
                      Tenetur voluptatem _esse._ Et voluptas enim. Earum tenetur tempore.
                    created_at: '2022-12-01T18:37:05.436Z'
                    updated_at: '2022-12-01T18:37:05.436Z'
                  - id: 18
                    name: Thriller
                    pos: 65536.0
                    priority: very_high
                    spent_time: 0
                    points: 4
                    due_time: '2022-12-08T18:37:05.438Z'
                    list_id: 35
                    deleted_at:
                    url: http://www.example.com/api/tasks/18
                    list_url: http://www.example.com/api/lists/35
                    description: |-
                      ##### Est
                      Facere vel maxime. Qui dignissimos ducimus. Sunt qui quas. Est dolore repudiandae. Ut maiores sed. Provident dicta ut.
                      ##### Perspiciatis
                    created_at: '2022-12-01T18:37:05.446Z'
                    updated_at: '2022-12-01T18:37:05.446Z'
                  - id: 19
                    name: Hybrid Theory
                    pos: 65536.0
                    priority: very_high
                    spent_time: 0
                    points: 2
                    due_time: '2022-12-08T18:37:05.449Z'
                    list_id: 36
                    deleted_at:
                    url: http://www.example.com/api/tasks/19
                    list_url: http://www.example.com/api/lists/36
                    description: |-
                      ##### Quibusdam
                      Veniam ipsam debitis. Harum sed dignissimos. Aut repellat est. Quisquam doloribus laudantium. Perferendis culpa sed.
                      ```ruby
                      Dolores.
                      ```
                    created_at: '2022-12-01T18:37:05.456Z'
                    updated_at: '2022-12-01T18:37:05.456Z'
                  - id: 20
                    name: Metallica
                    pos: 65536.0
                    priority: high
                    spent_time: 0
                    points: 3
                    due_time: '2022-12-08T18:37:05.458Z'
                    list_id: 37
                    deleted_at:
                    url: http://www.example.com/api/tasks/20
                    list_url: http://www.example.com/api/lists/37
                    description: |-
                      ##### Aperiam
                      Expedita odit soluta. Similique mollitia voluptas. Molestiae sint eveniet. Et dolores et. Rerum id atque.
                      ## Sunt
                    created_at: '2022-12-01T18:37:05.467Z'
                    updated_at: '2022-12-01T18:37:05.467Z'
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/task_response"
    post:
      summary: Create Task
      tags:
      - Tasks
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 21
                    name: New Task
                    pos: 65536.0
                    priority:
                    spent_time: 0
                    points:
                    due_time:
                    list_id: 38
                    deleted_at:
                    url: http://www.example.com/api/tasks/21
                    list_url: http://www.example.com/api/lists/38
                    description:
                    created_at: '2022-12-01T18:37:05.515Z'
                    updated_at: '2022-12-01T18:37:05.515Z'
              schema:
                "$ref": "#/components/schemas/task_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/task_request"
  "/api/tasks/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Task id
      required: true
      schema:
        type: string
    get:
      summary: Show Taks
      parameters:
      - name: include_associations
        in: query
        required: false
        description: If true, extended object with all associations is returned.
        schema:
          type: string
      tags:
      - Tasks
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful with `include_associations=true`:
                  summary: successful with `include_associations=true`
                  value:
                    id: 22
                    name: Jagged Little Pill
                    pos: 65536.0
                    priority: very_low
                    spent_time: 0
                    points: 3
                    due_time: '2022-12-08T18:37:05.523Z'
                    list_id: 39
                    deleted_at:
                    url: http://www.example.com/api/tasks/22
                    list_url: http://www.example.com/api/lists/39
                    description: "### Qui\nFugit dolorum dignissimos. Minus quisquam
                      soluta. Velit fuga recusandae. Cumque doloribus et. Et atque
                      quae.\n0. Dignissimos. \n1. Labore. \n2. Dicta. \n3. Vitae.
                      \n4. Quia. \n5. Blanditiis. \n6. Numquam. \n7. Voluptates. \n"
                    created_at: '2022-12-01T18:37:05.532Z'
                    updated_at: '2022-12-01T18:37:05.532Z'
                    list:
                      id: 39
                      name: bronze
                      pos: 65536.0
                      visible: false
                      deleted_at:
                      board_id: 76
                      created_at: '2022-12-01T18:37:05.526Z'
                      updated_at: '2022-12-01T18:37:05.526Z'
                      custom_data: {}
                      url: http://www.example.com/api/lists/39
                      board_url: http://www.example.com/api/boards/76
                    author:
                      id: 144
                      name: Season Swift
                      avatar_url: https://www.gravatar.com/avatar/377728bd3018a4c0106cfb001d0a4332
                      role: regular
                      url: http://www.example.com/api/users/144
                      email: season_swift.1669919825@example.com
                      created_at: '2022-12-01T18:37:05.530Z'
                      updated_at: '2022-12-01T18:37:05.530Z'
                      custom_data: {}
                    users:
                    - id: 145
                      name: Kali Wolff DVM
                      avatar_url: https://www.gravatar.com/avatar/bbf6768772a28038f31027e665da3a3a
                      role: guest
                      url: http://www.example.com/api/users/145
                      email: kali_wolff_dvm.1669919825@example.com
                      created_at: '2022-12-01T18:37:05.535Z'
                      updated_at: '2022-12-01T18:37:05.535Z'
                      custom_data: {}
                    - id: 146
                      name: Fredric Witting VM
                      avatar_url: https://www.gravatar.com/avatar/ec839038b7e16c766dfdf78a1e2d91a2
                      role: developer
                      url: http://www.example.com/api/users/146
                      email: fredric_witting_vm.1669919825@example.com
                      created_at: '2022-12-01T18:37:05.540Z'
                      updated_at: '2022-12-01T18:37:05.540Z'
                      custom_data: {}
                    tags:
                    - id: 22
                      name: Consulting
                      colour: "#9708c3"
                      url: http://www.example.com/api/tags/22
                      board_id: 77
                      created_at: '2022-12-01T18:37:05.550Z'
                      updated_at: '2022-12-01T18:37:05.550Z'
                      custom_data: {}
                    - id: 23
                      name: Advertising
                      colour: "#c66301"
                      url: http://www.example.com/api/tags/23
                      board_id: 78
                      created_at: '2022-12-01T18:37:05.555Z'
                      updated_at: '2022-12-01T18:37:05.555Z'
                      custom_data: {}
                    - id: 24
                      name: Administration
                      colour: "#4b8035"
                      url: http://www.example.com/api/tags/24
                      board_id: 79
                      created_at: '2022-12-01T18:37:05.560Z'
                      updated_at: '2022-12-01T18:37:05.560Z'
                      custom_data: {}
                successful:
                  summary: successful
                  value:
                    id: 23
                    name: Appetite for Destruction
                    pos: 65536.0
                    priority: very_high
                    spent_time: 0
                    points: 5
                    due_time: '2022-12-08T18:37:05.586Z'
                    list_id: 40
                    deleted_at:
                    url: http://www.example.com/api/tasks/23
                    list_url: http://www.example.com/api/lists/40
                    description: |-
                      #### Voluptatem
                      Dolorem quas qui. Expedita quam temporibus. Dolorum deleniti ad.
                      ~Dolorum~ temporibus et. Voluptas minima dolor. Consequatur repellat error.
                    created_at: '2022-12-01T18:37:05.595Z'
                    updated_at: '2022-12-01T18:37:05.595Z'
              schema:
                "$ref": "#/components/schemas/task_response"
    put:
      summary: Update Task
      tags:
      - Tasks
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 24
                    name: New Name
                    pos: 65536.0
                    priority: high
                    spent_time: 0
                    points: 5
                    due_time: '2022-12-08T18:37:05.614Z'
                    list_id: 41
                    deleted_at:
                    url: http://www.example.com/api/tasks/24
                    list_url: http://www.example.com/api/lists/41
                    description: |-
                      ## Blanditiis
                      Accusantium vitae vero. Ducimus delectus ad. Et voluptatem voluptatum.
                      `Optio.`
                    created_at: '2022-12-01T18:37:05.623Z'
                    updated_at: '2022-12-01T18:37:05.639Z'
              schema:
                "$ref": "#/components/schemas/task_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/task_request"
    delete:
      summary: Delete Task
      tags:
      - Tasks
      responses:
        '204':
          description: successful
  "/api/tasks/{id}/add_time":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Task id
      required: true
      schema:
        type: string
    put:
      summary: Add time
      tags:
      - Tasks
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 26
                    name: The Wall
                    pos: 65536.0
                    priority: medium
                    spent_time: 1200
                    points: 5
                    due_time: '2022-12-08T18:37:05.673Z'
                    list_id: 43
                    deleted_at:
                    url: http://www.example.com/api/tasks/26
                    list_url: http://www.example.com/api/lists/43
                    description: "### Et\nEst aut qui. Voluptas et impedit. Totam
                      fuga voluptatum. Omnis in et.\n0. At. \n1. Iure. \n"
                    created_at: '2022-12-01T18:37:05.683Z'
                    updated_at: '2022-12-01T18:37:05.702Z'
        '422':
          description: non integer time
          content:
            application/json:
              examples:
                incorrect unit:
                  summary: incorrect unit
                  value:
                    unit:
                    - is not included in the list
                negative time:
                  summary: negative time
                  value:
                    time:
                    - must be greater than 0
                non integer time:
                  summary: non integer time
                  value:
                    time:
                    - must be greater than 0
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                time:
                  type: integer
                unit:
                  type: string
                  enum: "#<Set: {:day, :hour, :minute, :second}>"
  "/api/tasks/{id}/attach_tag":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Task id
      required: true
      schema:
        type: string
    post:
      summary: Attach Tag
      tags:
      - Tasks
      parameters: []
      responses:
        '204':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                tag_id:
                  type: integer
  "/api/tasks/{id}/detach_tag":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Task id
      required: true
      schema:
        type: string
    post:
      summary: Detach Tag
      tags:
      - Tasks
      parameters: []
      responses:
        '204':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                tag_id:
                  type: integer
  "/api/tasks/{id}/assign_user":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Task id
      required: true
      schema:
        type: string
    post:
      summary: Assign User
      tags:
      - Tasks
      parameters: []
      responses:
        '204':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
  "/api/tasks/{id}/unassign_user":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Task id
      required: true
      schema:
        type: string
    post:
      summary: Unassign User
      tags:
      - Tasks
      parameters: []
      responses:
        '204':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
  "/api/workspaces/{id}/users":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: List users of workspace
      tags:
      - Users
      parameters:
      - name: id
        in: path
        description: Workspace id
        required: true
        schema:
          type: string
      - name: page
        in: query
        required: false
        description: Decides which result page should be returned.
        example: 2
        schema:
          type: integer
      - name: role
        in: query
        required: false
        schema:
          "$ref": "#/components/schemas/user_request/properties/role"
        example: admin
      - name: created_at_from
        in: query
        required: false
        description: Date with format YYYY.MM.DD
        example: 2010.01.25
        schema:
          type: string
      - name: created_at_to
        in: query
        required: false
        description: Date with format YYYY.MM.DD
        example: 2010.01.25
        schema:
          type: string
      - name: search
        in: query
        required: false
        description: Searches for users by name and e-mail.
        example: michael
        schema:
          type: string
      - name: per
        in: query
        required: false
        description: Decides how many entities should be returned per one page. **Works
          only, when `page` param is given.**
        example: 2
        schema:
          type: integer
      - name: limit
        in: query
        required: false
        description: Decides how many entities should be returned.
        example: 3
        schema:
          type: integer
      responses:
        '200':
          description: successful with pages
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    users:
                    - id: 172
                      name: Rev. Eldon Borer
                      avatar_url: https://www.gravatar.com/avatar/a2451260cc66e87d126a16c8719f1894
                      role: regular
                      url: http://www.example.com/api/users/172
                      email: rev_eldon_borer.1669919825@example.com
                      created_at: '2022-12-01T18:37:05.924Z'
                      updated_at: '2022-12-01T18:37:05.924Z'
                      custom_data: {}
                    - id: 173
                      name: Buster Deckow
                      avatar_url: https://www.gravatar.com/avatar/215289830514b8cfdfd4c3fc68c6f6a5
                      role: guest
                      url: http://www.example.com/api/users/173
                      email: buster_deckow.1669919825@example.com
                      created_at: '2022-12-01T18:37:05.934Z'
                      updated_at: '2022-12-01T18:37:05.934Z'
                      custom_data: {}
                    - id: 174
                      name: Hunter O'Connell
                      avatar_url: https://www.gravatar.com/avatar/38e56cad4f66f8612993a9426b54c44f
                      role: guest
                      url: http://www.example.com/api/users/174
                      email: hunter_o'connell.1669919825@example.com
                      created_at: '2022-12-01T18:37:05.939Z'
                      updated_at: '2022-12-01T18:37:05.939Z'
                      custom_data: {}
                successful with pages:
                  summary: successful with pages
                  value:
                    users:
                    - id: 176
                      name: Lacy Hudson
                      avatar_url: https://www.gravatar.com/avatar/8623b59603446e2faf444c4860b7c16b
                      role: manager
                      url: http://www.example.com/api/users/176
                      email: lacy_hudson.1669919825@example.com
                      created_at: '2022-12-01T18:37:05.965Z'
                      updated_at: '2022-12-01T18:37:05.965Z'
                      custom_data: {}
                    - id: 177
                      name: Annabel Streich
                      avatar_url: https://www.gravatar.com/avatar/d1a21bc3e4516326ee19c07960f40532
                      role: manager
                      url: http://www.example.com/api/users/177
                      email: annabel_streich.1669919825@example.com
                      created_at: '2022-12-01T18:37:05.972Z'
                      updated_at: '2022-12-01T18:37:05.972Z'
                      custom_data: {}
                    - id: 178
                      name: Teresia Schaden
                      avatar_url: https://www.gravatar.com/avatar/3e8158b6379af3dda3f151c54ea9b849
                      role: regular
                      url: http://www.example.com/api/users/178
                      email: teresia_schaden.1669919825@example.com
                      created_at: '2022-12-01T18:37:05.977Z'
                      updated_at: '2022-12-01T18:37:05.977Z'
                      custom_data: {}
                    total_pages: 1
              schema:
                "$ref": "#/components/schemas/user_pages_response"
  "/api/users":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: List users
      tags:
      - Users
      parameters:
      - name: role_collection
        in: query
        schema:
          type: array
          items:
            "$ref": "#/components/schemas/user_request/properties/role"
        example:
        - admin
      - name: role
        in: query
        required: false
        schema:
          "$ref": "#/components/schemas/user_request/properties/role"
        example: admin
      - name: created_at_from
        in: query
        required: false
        description: Date with format YYYY.MM.DD
        example: 2010.01.25
        schema:
          type: string
      - name: created_at_to
        in: query
        required: false
        description: Date with format YYYY.MM.DD
        example: 2010.01.25
        schema:
          type: string
      - name: workspace_id
        in: query
        required: false
        example: 1
        schema:
          type: integer
      - name: search
        in: query
        required: false
        description: Searches for users by name and e-mail.
        example: michael
        schema:
          type: string
      - name: page
        in: query
        required: false
        description: Decides which result page should be returned.
        example: 2
        schema:
          type: integer
      - name: per
        in: query
        required: false
        description: Decides how many entities should be returned per one page. **Works
          only, when `page` param is given.**
        example: 2
        schema:
          type: integer
      - name: limit
        in: query
        required: false
        description: Decides how many entities should be returned.
        example: 3
        schema:
          type: integer
      responses:
        '200':
          description: successful with pages
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    users:
                    - id: 180
                      name: Kyong Haley
                      avatar_url: https://www.gravatar.com/avatar/332a5b9be534bf56d073a2de55ee6ee2
                      role: regular
                      url: http://www.example.com/api/users/180
                      email: kyong_haley.1669919825@example.com
                      created_at: '2022-12-01T18:37:06.001Z'
                      updated_at: '2022-12-01T18:37:06.001Z'
                      custom_data: {}
                    - id: 181
                      name: Cornelius Fay
                      avatar_url: https://www.gravatar.com/avatar/b437ebc3e9d89fbd70ad68fd42fd8346
                      role: regular
                      url: http://www.example.com/api/users/181
                      email: cornelius_fay.1669919826@example.com
                      created_at: '2022-12-01T18:37:06.008Z'
                      updated_at: '2022-12-01T18:37:06.008Z'
                      custom_data: {}
                    - id: 182
                      name: Charlena Larson
                      avatar_url: https://www.gravatar.com/avatar/8ba586e96adf324a4cb55ac80bc6da6c
                      role: regular
                      url: http://www.example.com/api/users/182
                      email: charlena_larson.1669919826@example.com
                      created_at: '2022-12-01T18:37:06.011Z'
                      updated_at: '2022-12-01T18:37:06.011Z'
                      custom_data: {}
                    - id: 183
                      name: Miss Jennine West
                      avatar_url: https://www.gravatar.com/avatar/4e7aa2568212fcc7204f16e6a3e5f274
                      role: manager
                      url: http://www.example.com/api/users/183
                      email: miss_jennine_west.1669919826@example.com
                      created_at: '2022-12-01T18:37:06.017Z'
                      updated_at: '2022-12-01T18:37:06.017Z'
                      custom_data: {}
                    - id: 184
                      name: Winston Schulist MD
                      avatar_url: https://www.gravatar.com/avatar/678a646f0a37741426456d12b9ecef31
                      role: developer
                      url: http://www.example.com/api/users/184
                      email: winston_schulist_md.1669919826@example.com
                      created_at: '2022-12-01T18:37:06.020Z'
                      updated_at: '2022-12-01T18:37:06.020Z'
                      custom_data: {}
                    - id: 185
                      name: Jessika Gorczany MD
                      avatar_url: https://www.gravatar.com/avatar/5369e4bf50d31443f286a090dc7caab5
                      role: admin
                      url: http://www.example.com/api/users/185
                      email: jessika_gorczany_md.1669919826@example.com
                      created_at: '2022-12-01T18:37:06.024Z'
                      updated_at: '2022-12-01T18:37:06.024Z'
                      custom_data: {}
                successful with pages:
                  summary: successful with pages
                  value:
                    users:
                    - id: 186
                      name: Theo Mills
                      avatar_url: https://www.gravatar.com/avatar/329cf4c8b9e40cfb0ef22e71081cbac1
                      role: regular
                      url: http://www.example.com/api/users/186
                      email: theo_mills.1669919826@example.com
                      created_at: '2022-12-01T18:37:06.045Z'
                      updated_at: '2022-12-01T18:37:06.045Z'
                      custom_data: {}
                    - id: 187
                      name: Milford O'Conner DDS
                      avatar_url: https://www.gravatar.com/avatar/077d4c185dd8d5c8ea905c5d420938eb
                      role: guest
                      url: http://www.example.com/api/users/187
                      email: milford_o'conner_dds.1669919826@example.com
                      created_at: '2022-12-01T18:37:06.049Z'
                      updated_at: '2022-12-01T18:37:06.049Z'
                      custom_data: {}
                    - id: 188
                      name: Lennie Powlowski
                      avatar_url: https://www.gravatar.com/avatar/67649a5f1dd57aa473cacc36e366bba2
                      role: developer
                      url: http://www.example.com/api/users/188
                      email: lennie_powlowski.1669919826@example.com
                      created_at: '2022-12-01T18:37:06.052Z'
                      updated_at: '2022-12-01T18:37:06.052Z'
                      custom_data: {}
                    - id: 189
                      name: Otto Howe
                      avatar_url: https://www.gravatar.com/avatar/11afb034d9e568a938e0a4a5ad2443c2
                      role: guest
                      url: http://www.example.com/api/users/189
                      email: otto_howe.1669919826@example.com
                      created_at: '2022-12-01T18:37:06.055Z'
                      updated_at: '2022-12-01T18:37:06.055Z'
                      custom_data: {}
                    - id: 190
                      name: Hedy Beier
                      avatar_url: https://www.gravatar.com/avatar/b5f92751b884e899077fca3ac355868e
                      role: regular
                      url: http://www.example.com/api/users/190
                      email: hedy_beier.1669919826@example.com
                      created_at: '2022-12-01T18:37:06.058Z'
                      updated_at: '2022-12-01T18:37:06.058Z'
                      custom_data: {}
                    - id: 191
                      name: Fr. Grady Bednar
                      avatar_url: https://www.gravatar.com/avatar/fea9bf986facbec8a6f7cefb9e8fa700
                      role: admin
                      url: http://www.example.com/api/users/191
                      email: fr_grady_bednar.1669919826@example.com
                      created_at: '2022-12-01T18:37:06.061Z'
                      updated_at: '2022-12-01T18:37:06.061Z'
                      custom_data: {}
                    total_pages: 1
              schema:
                "$ref": "#/components/schemas/user_pages_response"
    post:
      summary: Create a user
      tags:
      - Users
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 193
                    name: New User
                    created_at: '2022-12-01T18:37:06.094Z'
                    updated_at: '2022-12-01T18:37:06.094Z'
                    email: new_user@example.com
                    role: developer
                    deleted_at:
                    recent_boards: []
                    custom_data: {}
              schema:
                "$ref": "#/components/schemas/user_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/user_request"
    put:
      summary: Update current user
      tags:
      - Users
      parameters: []
      responses:
        '204':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/user_update_request"
    delete:
      summary: Delete current user
      tags:
      - Users
      responses:
        '204':
          description: successful
  "/api/users/current":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: Show the currently signed in user
      tags:
      - Users
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 196
                    name: Loyd Johnston Ret.
                    avatar_url: https://www.gravatar.com/avatar/2c4359925f0d9577055ee7afd3235cd0
                    role: admin
                    url: http://www.example.com/api/users/196
                    email: loyd_johnston_ret.1669919826@example.com
                    created_at: '2022-12-01T18:37:06.139Z'
                    updated_at: '2022-12-01T18:37:06.139Z'
                    custom_data: {}
              schema:
                "$ref": "#/components/schemas/user_response"
  "/api/users/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show a user
      tags:
      - Users
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 197
                    name: Fr. Dewey Bailey
                    avatar_url: https://www.gravatar.com/avatar/385c5d8b5489539083ff7202b6db817e
                    role: regular
                    url: http://www.example.com/api/users/197
                    email: fr_dewey_bailey.1669919826@example.com
                    created_at: '2022-12-01T18:37:06.155Z'
                    updated_at: '2022-12-01T18:37:06.155Z'
                    custom_data: {}
              schema:
                "$ref": "#/components/schemas/user_response"
  "/api/users/sign_in":
    post:
      summary: Sign in
      tags:
      - Users
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 199
                    name: Alan Mertz
                    created_at: '2022-12-01T18:37:06.173Z'
                    updated_at: '2022-12-01T18:37:06.173Z'
                    email: email@example.com
                    role: developer
                    deleted_at:
                    recent_boards: []
                    custom_data: {}
              schema:
                "$ref": "#/components/schemas/user_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/user_sign_in_request"
  "/api/users/sign_out":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    delete:
      summary: Sign out
      tags:
      - Users
      responses:
        '204':
          description: successful
  "/api/workspaces":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: list workspaces
      tags:
      - Workspaces
      security:
      - Bearer: {}
      parameters:
      - name: limit
        in: query
        description: Decides how many entities should be returned
        example: 3
        required: false
        schema:
          type: integer
      - name: boards
        in: query
        type: string
        schema:
          "$ref": "#/components/schemas/include_associated_enum"
        required: false
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful with `boards=all`:
                  summary: successful with `boards=all`
                  value:
                  - id: 95
                    name: Zamit
                    created_at: '2022-12-01T18:37:06.213Z'
                    updated_at: '2022-12-01T18:37:06.213Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/workspaces/95
                    boards:
                    - id: 93
                      name: Ruthenium
                      colour: "#2ef3df"
                      workspace_id: 95
                      created_at: '2022-12-01T18:37:06.216Z'
                      updated_at: '2022-12-01T18:37:06.216Z'
                      deleted_at:
                      custom_data: {}
                      url: http://www.example.com/api/boards/93
                      workspace_url: http://www.example.com/api/workspaces/95
                    - id: 94
                      name: Copernicium
                      colour: "#1c6063"
                      workspace_id: 95
                      created_at: '2022-12-01T18:37:06.217Z'
                      updated_at: '2022-12-01T18:37:06.217Z'
                      deleted_at:
                      custom_data: {}
                      url: http://www.example.com/api/boards/94
                      workspace_url: http://www.example.com/api/workspaces/95
                    - id: 95
                      name: Uranium
                      colour: "#033926"
                      workspace_id: 95
                      created_at: '2022-12-01T18:37:06.219Z'
                      updated_at: '2022-12-01T18:37:06.219Z'
                      deleted_at:
                      custom_data: {}
                      url: http://www.example.com/api/boards/95
                      workspace_url: http://www.example.com/api/workspaces/95
                    - id: 96
                      name: Oxygen
                      colour: "#c4e18f"
                      workspace_id: 95
                      created_at: '2022-12-01T18:37:06.220Z'
                      updated_at: '2022-12-01T18:37:06.220Z'
                      deleted_at:
                      custom_data: {}
                      url: http://www.example.com/api/boards/96
                      workspace_url: http://www.example.com/api/workspaces/95
                    - id: 97
                      name: Meitnerium
                      colour: "#f050e8"
                      workspace_id: 95
                      created_at: '2022-12-01T18:37:06.221Z'
                      updated_at: '2022-12-01T18:37:06.221Z'
                      deleted_at:
                      custom_data: {}
                      url: http://www.example.com/api/boards/97
                      workspace_url: http://www.example.com/api/workspaces/95
                  - id: 96
                    name: Keylex
                    created_at: '2022-12-01T18:37:06.222Z'
                    updated_at: '2022-12-01T18:37:06.222Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/workspaces/96
                    boards: []
                successful:
                  summary: successful
                  value:
                  - id: 97
                    name: Keylex
                    created_at: '2022-12-01T18:37:06.248Z'
                    updated_at: '2022-12-01T18:37:06.248Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/workspaces/97
                  - id: 98
                    name: Ronstring
                    created_at: '2022-12-01T18:37:06.251Z'
                    updated_at: '2022-12-01T18:37:06.251Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/workspaces/98
                  - id: 99
                    name: Zaam-Dox
                    created_at: '2022-12-01T18:37:06.253Z'
                    updated_at: '2022-12-01T18:37:06.253Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/workspaces/99
                  - id: 100
                    name: Regrant
                    created_at: '2022-12-01T18:37:06.256Z'
                    updated_at: '2022-12-01T18:37:06.256Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/workspaces/100
                  - id: 101
                    name: Zaam-Dox
                    created_at: '2022-12-01T18:37:06.258Z'
                    updated_at: '2022-12-01T18:37:06.258Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/workspaces/101
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/workspace_response"
    post:
      summary: create workspace
      tags:
      - Workspaces
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 102
                    name: New Workspace
                    created_at: '2022-12-01T18:37:06.294Z'
                    updated_at: '2022-12-01T18:37:06.294Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/workspaces/102
              schema:
                "$ref": "#/components/schemas/workspace_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/workspace_request"
  "/api/workspaces/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show workspace
      parameters:
      - name: boards
        in: query
        type: string
        schema:
          "$ref": "#/components/schemas/include_associated_enum"
        required: false
      tags:
      - Workspaces
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful with `boards=all`:
                  summary: successful with `boards=all`
                  value:
                    id: 103
                    name: Asoka
                    created_at: '2022-12-01T18:37:06.304Z'
                    updated_at: '2022-12-01T18:37:06.304Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/workspaces/103
                    boards:
                    - id: 98
                      name: Lead
                      colour: "#1b7aa2"
                      workspace_id: 103
                      created_at: '2022-12-01T18:37:06.306Z'
                      updated_at: '2022-12-01T18:37:06.307Z'
                      deleted_at:
                      custom_data: {}
                      url: http://www.example.com/api/boards/98
                      workspace_url: http://www.example.com/api/workspaces/103
                    - id: 99
                      name: Copper
                      colour: "#4dbb03"
                      workspace_id: 103
                      created_at: '2022-12-01T18:37:06.310Z'
                      updated_at: '2022-12-01T18:37:06.311Z'
                      deleted_at:
                      custom_data: {}
                      url: http://www.example.com/api/boards/99
                      workspace_url: http://www.example.com/api/workspaces/103
                successful:
                  summary: successful
                  value:
                    id: 106
                    name: Andalax
                    created_at: '2022-12-01T18:37:06.333Z'
                    updated_at: '2022-12-01T18:37:06.333Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/workspaces/106
              schema:
                "$ref": "#/components/schemas/workspace_response"
    put:
      summary: update workspace
      tags:
      - Workspaces
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 107
                    name: New Name
                    created_at: '2022-12-01T18:37:06.354Z'
                    updated_at: '2022-12-01T18:37:06.368Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/workspaces/107
              schema:
                "$ref": "#/components/schemas/workspace_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/workspace_request"
    delete:
      summary: delete workspace
      tags:
      - Workspaces
      responses:
        '204':
          description: successful
  "/api/workspaces/{id}/assign_user":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Workspace id
      required: true
      schema:
        type: string
    post:
      summary: Assign User
      tags:
      - Workspaces
      parameters: []
      responses:
        '204':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
  "/api/workspaces/{id}/unassign_user":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Workspace id
      required: true
      schema:
        type: string
    post:
      summary: Unassign User
      tags:
      - Workspaces
      parameters: []
      responses:
        '204':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
components:
  schemas:
    authorization:
      name: Authorization
      in: header
      type: string
      description: JWT token
      example: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiZGV2ZWxvcGVyIiwic3ViIjoiMSIsInNjcCI6InVzZXIiLCJhdWQiOm51bGwsImlhdCI6MTY2NjE4MDIzMiwiZXhwIjoxNjY3NDc2MjMyLCJqdGkiOiJhMzdlZTA5MC0zZGJmLTRhMzgtOTFiNy1mZTJlM2FiYjlkY2QifQ.tGGjFHfMszfGCfNZS6I-hQNLSu_2Xfs3W4hI8IT4CW0
      required: true
    include_associated_enum:
      type: string
      enum:
      - visible
      - invisible
      - non-archived
      - archived
      - all
    lambdee_models_enum:
      type: string
      enum:
      - DB::User
      - DB::Workspace
      - DB::Board
      - DB::List
      - DB::Task
      - DB::Comment
      - DB::Tag
      - DB::Sprint
      - DB::UserWorkspace
      - DB::TaskUser
      - DB::TaskTag
      - DB::SprintTask
    user_pages_response:
      type: object
      properties:
        users:
          type: array
          items:
            "$ref": "#components/schemas/user_response"
        total_pages:
          type: integer
      required:
      - users
    user_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        avatar_url:
          type: string
        url:
          type: string
        role:
          type: string
      required:
      - id
      - name
    user_request:
      type: object
      properties:
        user:
          type: object
          properties:
            name:
              type: string
            email:
              type: string
            password:
              type: string
            role:
              type: string
              enum:
              - guest
              - regular
              - developer
              - admin
              - manager
      required:
      - name
      - email
    user_update_request:
      type: object
      properties:
        user:
          type: object
          properties:
            name:
              type: string
            email:
              type: string
            password:
              type: string
            current_password:
              type: string
            role:
              type: string
              enum:
              - guest
              - regular
              - developer
              - admin
              - manager
      required:
      - current_password
    user_sign_in_request:
      type: object
      properties:
        user:
          type: object
          properties:
            email:
              type: string
            password:
              type: string
      required:
      - email
      - password
    comment_response:
      type: object
      properties:
        id:
          type: integer
        body:
          type: string
        deleted_at:
          type:
          - string
          - 'null'
          format: date_time
        author_id:
          type: integer
        task_id:
          type: integer
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        url:
          type: string
        users:
          type: array
          items:
            "$ref": "#/components/schemas/user_response"
          nullable: true
      required:
      - id
      - body
      - deleted_at
      - url
    tag_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        colour:
          type: string
        board_id:
          type: integer
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        url:
          type: string
        board_url:
          type: string
      required:
      - id
    tag_request:
      type: object
      properties:
        name:
          type: string
        colour:
          type: string
        board_id:
          type: integer
        task_id:
          type: integer
      required: []
    sprint_pages_response:
      type: object
      properties:
        sprints:
          type: array
          items:
            "$ref": "#components/schemas/sprint_response"
        total_pages:
          type: integer
      required:
      - sprints
    sprint_response:
      type: object
      properties:
        id:
          type: integer
        board_id:
          type: integer
        name:
          type: string
        description:
          type:
          - string
          - 'null'
        started_at:
          type: string
          format: date_time
        expected_end_at:
          type: string
          format: date_time
        ended_at:
          type:
          - string
          - 'null'
          format: date_time
        final_list_name:
          type: string
        url:
          type: string
        tasks:
          type: array
          items:
            "$ref": "#/components/schemas/task_with_sprint_task_response"
          nullable: true
      required:
      - id
      - name
    task_with_sprint_task_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        priority:
          type: string
        spent_time:
          type: integer
        points:
          type: integer
        added_at:
          type: string
          format: date_time
        completed_at:
          type:
          - string
          - 'null'
          format: date_time
        start_state:
          type: string
        state:
          type: string
      required:
      - id
    sprint_request:
      type: object
      properties:
        board_id:
          type: integer
        name:
          type: string
        description:
          type: string
        started_at:
          type: string
          format: date_time
          example: '2025-12-11T23:00:00'
        expected_end_at:
          type: string
          format: date_time
          example: '2025-12-18T23:00:00'
      required:
      - name
      - expected_end_at
    task_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type:
          - string
          - 'null'
        due_time:
          type:
          - string
          - 'null'
          format: date_time
        pos:
          type:
          - number
          - 'null'
          format: float
        priority:
          type:
          - string
          - 'null'
        points:
          type:
          - number
          - 'null'
          format: float
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        deleted_at:
          type:
          - string
          - 'null'
          format: date_time
        list_id:
          type: integer
        list_url:
          type: string
        url:
          type: string
        users:
          type: array
          items:
            "$ref": "#/components/schemas/user_response"
          nullable: true
        tags:
          type: array
          items:
            "$ref": "#/components/schemas/tag_response"
          nullable: true
        author:
          type: object
          schema:
            "$ref": "#/components/schemas/user_response"
          nullable: true
      required:
      - id
      - name
      - pos
      - priority
      - points
      - list_id
      - deleted_at
    task_request:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        due_time:
          type: string
          format: date_time
          example: '2025-12-18T23:00:00'
        pos:
          type: number
          format: float
          description: If not given, value will be set as for the last item in the
            list.
        priority:
          type: string
          enum:
          - very_low
          - low
          - medium
          - high
          - very_high
        points:
          type: number
          format: float
        list_id:
          type: integer
        author_id:
          type: integer
      required:
      - name
      - list_id
      - author_id
    list_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        pos:
          type: number
          format: float
        visible:
          type:
          - boolean
          - 'null'
        deleted_at:
          type:
          - string
          - 'null'
          format: date_time
        board_id:
          type: integer
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        url:
          type: string
        board_url:
          type: string
        tasks:
          type: array
          items:
            "$ref": "#/components/schemas/task_response"
          nullable: true
      required:
      - id
      - name
      - pos
      - visible
      - board_id
      - created_at
      - updated_at
      - deleted_at
    list_request:
      type: object
      properties:
        name:
          type: string
        pos:
          type: number
          format: float
        visible:
          type: boolean
        board_id:
          type: integer
      required:
      - name
      - board_id
    board_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        workspace_id:
          type: integer
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        deleted_at:
          type:
          - string
          - 'null'
          format: date_time
        url:
          type: string
        workspace_url:
          type: string
        lists:
          type: array
          items:
            "$ref": "#/components/schemas/list_response"
          nullable: true
      required:
      - id
      - name
      - workspace_id
      - created_at
      - updated_at
      - deleted_at
    board_request:
      type: object
      properties:
        name:
          type: string
        workspace_id:
          type: integer
      required:
      - name
      - workspace_id
    workspace_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        deleted_at:
          type:
          - string
          - 'null'
          format: date_time
        url:
          type: string
        boards:
          type: array
          items:
            "$ref": "#/components/schemas/board_response"
          nullable: true
      required:
      - id
      - name
      - created_at
      - updated_at
      - deleted_at
    workspace_request:
      type: object
      properties:
        name:
          type: string
      required:
      - name
    script_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        content:
          type: string
        url:
          type: string
        script_triggers:
          type: array
          items:
            "$ref": "#/components/schemas/nested_script_trigger_response"
      required: []
    script_request:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        content:
          type: string
        script_triggers_attributes:
          type: array
          items:
            "$ref": "#/components/schemas/nested_script_trigger_request"
      required:
      - name
    nested_script_trigger_response:
      type: object
      properties:
        id:
          type: integer
        script_id:
          type:
          - integer
          - 'null'
        subject_type:
          type:
          - string
          - 'null'
        subject_id:
          type:
          - integer
          - 'null'
        action:
          type: string
        delay:
          type: integer
        url:
          type: string
      required: []
    nested_script_trigger_request:
      type: object
      properties:
        id:
          type: integer
          description: Needed only for updates and destroys.
        script_id:
          type: integer
        subject_type:
          "$ref": "#/components/schemas/lambdee_models_enum"
        subject_id:
          type: integer
        action:
          type: string
          enum:
          - create
          - update
          - destroy
        delay:
          type: integer
          description: Number of seconds of script execution delay
        _destroy:
          type: boolean
          description: If `true` callback for given `id` will be destroyed. Works
            only nested in sprint.
      required:
      - action
    script_trigger_response:
      type: object
      properties:
        id:
          type: integer
        script_id:
          type: integer
        subject_type:
          type:
          - string
          - 'null'
        subject_id:
          type:
          - integer
          - 'null'
        action:
          type: string
        delay:
          type: integer
        url:
          type: string
      required: []
    script_trigger_request:
      type: object
      properties:
        script_id:
          type: integer
        subject_type:
          "$ref": "#/components/schemas/lambdee_models_enum"
        subject_id:
          type: integer
        action:
          type: string
        delay:
          type: integer
          description: Number of seconds of script execution delay
      required:
      - script_id
      - action
    script_run_response:
      type: object
      properties:
        id:
          type: integer
        script_id:
          type: integer
        script_name:
          type: string
        initiator_id:
          type: integer
        input:
          type:
          - string
          - 'null'
        output:
          type: string
        state:
          type: string
        delay:
          type:
          - integer
          - 'null'
        url:
          type: string
      required: []
    script_run_request:
      type: object
      properties:
        output:
          type: string
        state:
          type: string
          enum:
          - running
          - executed
          - failed
          - timed_out
          - connection_failed
      required: []
servers:
- url: "{defaultProtocol}://{defaultHost}"
  variables:
    defaultProtocol:
      default: http
    defaultHost:
      default: localhost:3000
