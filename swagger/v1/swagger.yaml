---
openapi: 3.0.1
info:
  title: Lambdee API V1
  version: v1
paths:
  "/api/boards":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: list boards
      tags:
      - Boards
      parameters:
      - name: limit
        in: query
        required: false
        description: Decides how many entities should be returned
        example: 3
        schema:
          type: integer
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - id: 1
                    name: Rutherfordium
                    colour: "#c7c7bf"
                    workspace_id: 1
                    created_at: '2022-11-14T22:05:33.607Z'
                    updated_at: '2022-11-14T22:05:33.607Z'
                    deleted_at:
                    url: http://www.example.com/api/boards/1
                    workspace_url: http://www.example.com/api/workspaces/1
                  - id: 2
                    name: Selenium
                    colour: "#21da0a"
                    workspace_id: 2
                    created_at: '2022-11-14T22:05:33.608Z'
                    updated_at: '2022-11-14T22:05:33.608Z'
                    deleted_at:
                    url: http://www.example.com/api/boards/2
                    workspace_url: http://www.example.com/api/workspaces/2
                  - id: 3
                    name: Samarium
                    colour: "#db909b"
                    workspace_id: 3
                    created_at: '2022-11-14T22:05:33.610Z'
                    updated_at: '2022-11-14T22:05:33.610Z'
                    deleted_at:
                    url: http://www.example.com/api/boards/3
                    workspace_url: http://www.example.com/api/workspaces/3
                  - id: 4
                    name: Bismuth
                    colour: "#207df8"
                    workspace_id: 4
                    created_at: '2022-11-14T22:05:33.611Z'
                    updated_at: '2022-11-14T22:05:33.611Z'
                    deleted_at:
                    url: http://www.example.com/api/boards/4
                    workspace_url: http://www.example.com/api/workspaces/4
                  - id: 5
                    name: Tin
                    colour: "#c39533"
                    workspace_id: 5
                    created_at: '2022-11-14T22:05:33.612Z'
                    updated_at: '2022-11-14T22:05:33.612Z'
                    deleted_at:
                    url: http://www.example.com/api/boards/5
                    workspace_url: http://www.example.com/api/workspaces/5
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/board_response"
    post:
      summary: create board
      tags:
      - Boards
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 6
                    name: New Board
                    colour:
                    workspace_id: 6
                    created_at: '2022-11-14T22:05:33.684Z'
                    updated_at: '2022-11-14T22:05:33.684Z'
                    deleted_at:
                    url: http://www.example.com/api/boards/6
                    workspace_url: http://www.example.com/api/workspaces/6
              schema:
                "$ref": "#/components/schemas/board_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/board_request"
  "/api/boards/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show board
      tags:
      - Boards
      parameters:
      - name: tasks
        in: query
        type: string
        schema:
          "$ref": "#/components/schemas/include_associated_enum"
        required: false
      - name: lists
        in: query
        type: string
        schema:
          "$ref": "#/components/schemas/include_associated_enum"
        required: false
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful with `lists=all`:
                  summary: successful with `lists=all`
                  value:
                    id: 7
                    name: Livermorium
                    colour: "#5b6bf1"
                    workspace_id: 7
                    created_at: '2022-11-14T22:05:33.694Z'
                    updated_at: '2022-11-14T22:05:33.694Z'
                    deleted_at:
                    url: http://www.example.com/api/boards/7
                    workspace_url: http://www.example.com/api/workspaces/7
                    lists:
                    - id: 1
                      name: purple
                      pos: 65536.0
                      visible: false
                      deleted_at: '2022-11-14T22:05:33.710Z'
                      board_id: 7
                      created_at: '2022-11-14T22:05:33.704Z'
                      updated_at: '2022-11-14T22:05:33.706Z'
                      url: http://www.example.com/api/lists/1
                      board_url: http://www.example.com/api/boards/7
                    - id: 2
                      name: indigo
                      pos: 65536.0
                      visible: false
                      deleted_at:
                      board_id: 7
                      created_at: '2022-11-14T22:05:33.713Z'
                      updated_at: '2022-11-14T22:05:33.714Z'
                      url: http://www.example.com/api/lists/2
                      board_url: http://www.example.com/api/boards/7
                successful with `lists=visible`:
                  summary: successful with `lists=visible`
                  value:
                    id: 10
                    name: Americium
                    colour: "#0d70c4"
                    workspace_id: 10
                    created_at: '2022-11-14T22:05:33.741Z'
                    updated_at: '2022-11-14T22:05:33.741Z'
                    deleted_at:
                    url: http://www.example.com/api/boards/10
                    workspace_url: http://www.example.com/api/workspaces/10
                    lists: []
                successful with `lists=archived`:
                  summary: successful with `lists=archived`
                  value:
                    id: 12
                    name: Hydrogen
                    colour: "#50da9e"
                    workspace_id: 12
                    created_at: '2022-11-14T22:05:33.768Z'
                    updated_at: '2022-11-14T22:05:33.768Z'
                    deleted_at:
                    url: http://www.example.com/api/boards/12
                    workspace_url: http://www.example.com/api/workspaces/12
                    lists:
                    - id: 4
                      name: scarlet
                      pos: 65536.0
                      visible: false
                      deleted_at: '2022-11-14T22:05:33.773Z'
                      board_id: 12
                      created_at: '2022-11-14T22:05:33.771Z'
                      updated_at: '2022-11-14T22:05:33.772Z'
                      url: http://www.example.com/api/lists/4
                      board_url: http://www.example.com/api/boards/12
                    - id: 5
                      name: raspberry
                      pos: 65536.0
                      visible: false
                      deleted_at: '2022-11-14T22:05:33.778Z'
                      board_id: 12
                      created_at: '2022-11-14T22:05:33.776Z'
                      updated_at: '2022-11-14T22:05:33.777Z'
                      url: http://www.example.com/api/lists/5
                      board_url: http://www.example.com/api/boards/12
                successful:
                  summary: successful
                  value:
                    id: 15
                    name: Calcium
                    colour: "#a4ea32"
                    workspace_id: 15
                    created_at: '2022-11-14T22:05:33.803Z'
                    updated_at: '2022-11-14T22:05:33.803Z'
                    deleted_at:
                    url: http://www.example.com/api/boards/15
                    workspace_url: http://www.example.com/api/workspaces/15
              schema:
                "$ref": "#/components/schemas/board_response"
    put:
      summary: update board
      tags:
      - Boards
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 16
                    name: New Name
                    colour: "#aaf75e"
                    workspace_id: 16
                    created_at: '2022-11-14T22:05:33.825Z'
                    updated_at: '2022-11-14T22:05:33.838Z'
                    deleted_at:
                    url: http://www.example.com/api/boards/16
                    workspace_url: http://www.example.com/api/workspaces/16
              schema:
                "$ref": "#/components/schemas/board_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/board_request"
    delete:
      summary: delete board
      tags:
      - Boards
      responses:
        '204':
          description: successful
  "/api/boards/{id}/user_tasks":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: list current user tasks including board, lists, tags, users and author
      tags:
      - Boards
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 18
                    name: Yttrium
                    colour: "#64c53b"
                    workspace_id: 18
                    created_at: '2022-11-14T22:05:33.869Z'
                    updated_at: '2022-11-14T22:05:33.869Z'
                    deleted_at:
                    url: http://www.example.com/api/boards/18
                    workspace_url: http://www.example.com/api/workspaces/18
                    lists: []
              schema:
                "$ref": "#/components/schemas/board_response"
  "/api/boards/recently_viewed":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: list current user recently viewed boards (max 6)
      tags:
      - Boards
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value: []
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/board_response"
  "/api/tasks/{id}/comments":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Task id
      required: true
      schema:
        type: string
    get:
      summary: List task's comments
      tags:
      - Comments
      parameters:
      - name: with_author
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful with `with_author=true`:
                  summary: successful with `with_author=true`
                  value:
                  - id: 5
                    body: |-
                      ### Beatae
                      Quia tempore et. Maxime nesciunt facere.
                      omnis | soluta | perferendis
                      ---- | ---- | ----
                      odio | neque | neque
                      soluta | voluptatem | eum
                    deleted_at:
                    author_id: 22
                    task_id: 2
                    created_at: '2022-11-14T22:05:34.018Z'
                    updated_at: '2022-11-14T22:05:34.018Z'
                    url: http://www.example.com/api/comments/5
                    author:
                      id: 22
                      name: Henriette Gislason
                      avatar_url: https://www.gravatar.com/avatar/433148bbc76a20fc2cb0436923329335
                      role: guest
                      url: http://www.example.com/api/users/22
                      email: henriette_gislason.1668463534@example.com
                      created_at: '2022-11-14T22:05:34.005Z'
                      updated_at: '2022-11-14T22:05:34.005Z'
                  - id: 4
                    body: |-
                      #### Deleniti
                      Ut eos voluptatem. Et laudantium amet. Temporibus quia hic.
                      ### Qui
                    deleted_at:
                    author_id: 22
                    task_id: 2
                    created_at: '2022-11-14T22:05:34.017Z'
                    updated_at: '2022-11-14T22:05:34.017Z'
                    url: http://www.example.com/api/comments/4
                    author:
                      id: 22
                      name: Henriette Gislason
                      avatar_url: https://www.gravatar.com/avatar/433148bbc76a20fc2cb0436923329335
                      role: guest
                      url: http://www.example.com/api/users/22
                      email: henriette_gislason.1668463534@example.com
                      created_at: '2022-11-14T22:05:34.005Z'
                      updated_at: '2022-11-14T22:05:34.005Z'
                  - id: 3
                    body: |-
                      ## Molestiae
                      Excepturi eveniet commodi. Sint ducimus unde. Veritatis delectus ipsam.
                      aut | minima | repudiandae
                      ---- | ---- | ----
                      sunt | quis | veritatis
                      iste | autem | est
                    deleted_at:
                    author_id: 22
                    task_id: 2
                    created_at: '2022-11-14T22:05:34.016Z'
                    updated_at: '2022-11-14T22:05:34.016Z'
                    url: http://www.example.com/api/comments/3
                    author:
                      id: 22
                      name: Henriette Gislason
                      avatar_url: https://www.gravatar.com/avatar/433148bbc76a20fc2cb0436923329335
                      role: guest
                      url: http://www.example.com/api/users/22
                      email: henriette_gislason.1668463534@example.com
                      created_at: '2022-11-14T22:05:34.005Z'
                      updated_at: '2022-11-14T22:05:34.005Z'
                  - id: 2
                    body: |-
                      # Molestiae
                      Et rem sunt. Sit non ut.
                      Dolores quibusdam id. ~Reprehenderit~ est quidem. Nostrum quisquam et.
                    deleted_at:
                    author_id: 22
                    task_id: 2
                    created_at: '2022-11-14T22:05:34.015Z'
                    updated_at: '2022-11-14T22:05:34.015Z'
                    url: http://www.example.com/api/comments/2
                    author:
                      id: 22
                      name: Henriette Gislason
                      avatar_url: https://www.gravatar.com/avatar/433148bbc76a20fc2cb0436923329335
                      role: guest
                      url: http://www.example.com/api/users/22
                      email: henriette_gislason.1668463534@example.com
                      created_at: '2022-11-14T22:05:34.005Z'
                      updated_at: '2022-11-14T22:05:34.005Z'
                  - id: 1
                    body: "## Reprehenderit\nFacilis sed veniam.\n0. Non. \n1. Ipsum.
                      \n2. Culpa. \n"
                    deleted_at:
                    author_id: 22
                    task_id: 2
                    created_at: '2022-11-14T22:05:34.013Z'
                    updated_at: '2022-11-14T22:05:34.013Z'
                    url: http://www.example.com/api/comments/1
                    author:
                      id: 22
                      name: Henriette Gislason
                      avatar_url: https://www.gravatar.com/avatar/433148bbc76a20fc2cb0436923329335
                      role: guest
                      url: http://www.example.com/api/users/22
                      email: henriette_gislason.1668463534@example.com
                      created_at: '2022-11-14T22:05:34.005Z'
                      updated_at: '2022-11-14T22:05:34.005Z'
                successful:
                  summary: successful
                  value:
                  - id: 10
                    body: |-
                      ### Vel
                      A velit aut. Harum aut praesentium.
                      ```ruby
                      Itaque.
                      ```
                    deleted_at:
                    author_id: 25
                    task_id: 3
                    created_at: '2022-11-14T22:05:34.062Z'
                    updated_at: '2022-11-14T22:05:34.062Z'
                    url: http://www.example.com/api/comments/10
                  - id: 9
                    body: |-
                      # Voluptas
                      Eum magnam molestias.
                      laboriosam | minima | et
                      ---- | ---- | ----
                      omnis | eaque | sunt
                      officia | velit | et
                    deleted_at:
                    author_id: 25
                    task_id: 3
                    created_at: '2022-11-14T22:05:34.061Z'
                    updated_at: '2022-11-14T22:05:34.061Z'
                    url: http://www.example.com/api/comments/9
                  - id: 8
                    body: |-
                      # Modi
                      Odio sint dolorum. Voluptatibus nihil provident.
                      est | aut | voluptatum
                      ---- | ---- | ----
                      veniam | dolor | praesentium
                      unde | iste | id
                    deleted_at:
                    author_id: 25
                    task_id: 3
                    created_at: '2022-11-14T22:05:34.060Z'
                    updated_at: '2022-11-14T22:05:34.060Z'
                    url: http://www.example.com/api/comments/8
                  - id: 7
                    body: |-
                      ### Ipsam
                      Illum omnis ut.
                      ```ruby
                      Atque.
                      ```
                    deleted_at:
                    author_id: 25
                    task_id: 3
                    created_at: '2022-11-14T22:05:34.059Z'
                    updated_at: '2022-11-14T22:05:34.059Z'
                    url: http://www.example.com/api/comments/7
                  - id: 6
                    body: "###### Provident\nEaque dolorem temporibus. In voluptatum
                      sed. Corrupti harum vitae.\n* Qui. \n* Aut. \n* Quam. \n* Repellendus.
                      \n* Iusto. \n* Vitae. \n* Ullam. \n* Rerum. \n* Occaecati. \n"
                    deleted_at:
                    author_id: 25
                    task_id: 3
                    created_at: '2022-11-14T22:05:34.057Z'
                    updated_at: '2022-11-14T22:05:34.057Z'
                    url: http://www.example.com/api/comments/6
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/comment_response"
  "/api/lists":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: List lists
      tags:
      - Lists
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - id: 9
                    name: blush
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 28
                    created_at: '2022-11-14T22:05:34.083Z'
                    updated_at: '2022-11-14T22:05:34.083Z'
                    url: http://www.example.com/api/lists/9
                    board_url: http://www.example.com/api/boards/28
                  - id: 10
                    name: viridian
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 29
                    created_at: '2022-11-14T22:05:34.086Z'
                    updated_at: '2022-11-14T22:05:34.086Z'
                    url: http://www.example.com/api/lists/10
                    board_url: http://www.example.com/api/boards/29
                  - id: 11
                    name: scarlet
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 30
                    created_at: '2022-11-14T22:05:34.089Z'
                    updated_at: '2022-11-14T22:05:34.089Z'
                    url: http://www.example.com/api/lists/11
                    board_url: http://www.example.com/api/boards/30
                  - id: 12
                    name: gray
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 31
                    created_at: '2022-11-14T22:05:34.091Z'
                    updated_at: '2022-11-14T22:05:34.091Z'
                    url: http://www.example.com/api/lists/12
                    board_url: http://www.example.com/api/boards/31
                  - id: 13
                    name: coral
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 32
                    created_at: '2022-11-14T22:05:34.094Z'
                    updated_at: '2022-11-14T22:05:34.094Z'
                    url: http://www.example.com/api/lists/13
                    board_url: http://www.example.com/api/boards/32
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/list_response"
    post:
      summary: Create List
      tags:
      - Lists
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 14
                    name: New List
                    pos: 1212.0
                    visible: false
                    deleted_at:
                    board_id: 33
                    created_at: '2022-11-14T22:05:34.132Z'
                    updated_at: '2022-11-14T22:05:34.132Z'
                    url: http://www.example.com/api/lists/14
                    board_url: http://www.example.com/api/boards/33
              schema:
                "$ref": "#/components/schemas/list_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/list_request"
  "/api/lists/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show List
      tags:
      - Lists
      parameters:
      - name: tasks
        in: query
        type: string
        schema:
          "$ref": "#/components/schemas/include_associated_enum"
        required: false
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful with `tasks=all`:
                  summary: successful with `tasks=all`
                  value:
                    id: 15
                    name: amber
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 34
                    created_at: '2022-11-14T22:05:34.139Z'
                    updated_at: '2022-11-14T22:05:34.139Z'
                    url: http://www.example.com/api/lists/15
                    board_url: http://www.example.com/api/boards/34
                    tasks:
                    - id: 4
                      name: Oops!... I Did It Again
                      pos: 65536.0
                      priority: very_high
                      spent_time: 0
                      points: 3
                      list_id: 15
                      deleted_at:
                      url: http://www.example.com/api/tasks/4
                      list_url: http://www.example.com/api/lists/15
                      users:
                      - id: 30
                        name: Justin Mayer
                        avatar_url: https://www.gravatar.com/avatar/cb90f97a7470d5dc8823268164835fa8
                        role: guest
                        url: http://www.example.com/api/users/30
                      - id: 31
                        name: Waldo Hackett
                        avatar_url: https://www.gravatar.com/avatar/9797e403abc62f3dc513366a9d02611f
                        role: developer
                        url: http://www.example.com/api/users/31
                      tags:
                      - id: 2
                        name: Healthcare
                        colour: "#ef1cf6"
                        url: http://www.example.com/api/tags/2
                      - id: 3
                        name: Advertising
                        colour: "#4c021d"
                        url: http://www.example.com/api/tags/3
                    - id: 5
                      name: Bad
                      pos: 65536.0
                      priority: very_low
                      spent_time: 0
                      points: 5
                      list_id: 15
                      deleted_at: '2022-11-14T22:05:34.175Z'
                      url: http://www.example.com/api/tasks/5
                      list_url: http://www.example.com/api/lists/15
                      users: []
                      tags: []
                successful with `tasks=visible`:
                  summary: successful with `tasks=visible`
                  value:
                    id: 18
                    name: purple
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 39
                    created_at: '2022-11-14T22:05:34.205Z'
                    updated_at: '2022-11-14T22:05:34.205Z'
                    url: http://www.example.com/api/lists/18
                    board_url: http://www.example.com/api/boards/39
                    tasks:
                    - id: 6
                      name: Brothers in Arms
                      pos: 65536.0
                      priority: very_high
                      spent_time: 0
                      points: 5
                      list_id: 18
                      deleted_at:
                      url: http://www.example.com/api/tasks/6
                      list_url: http://www.example.com/api/lists/18
                      users:
                      - id: 35
                        name: Taylor Klein
                        avatar_url: https://www.gravatar.com/avatar/542faa96a8f13740bd15345475fb2aeb
                        role: manager
                        url: http://www.example.com/api/users/35
                      - id: 36
                        name: Leonard Kemmer
                        avatar_url: https://www.gravatar.com/avatar/79894004dc5b6ddab77e9b4434d4a3f5
                        role: guest
                        url: http://www.example.com/api/users/36
                      tags:
                      - id: 4
                        name: Sales
                        colour: "#d9a182"
                        url: http://www.example.com/api/tags/4
                    - id: 7
                      name: Dookie
                      pos: 65536.0
                      priority: very_high
                      spent_time: 0
                      points: 2
                      list_id: 18
                      deleted_at:
                      url: http://www.example.com/api/tasks/7
                      list_url: http://www.example.com/api/lists/18
                      users: []
                      tags: []
                successful with `tasks=archived`:
                  summary: successful with `tasks=archived`
                  value:
                    id: 21
                    name: purple
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 43
                    created_at: '2022-11-14T22:05:34.267Z'
                    updated_at: '2022-11-14T22:05:34.267Z'
                    url: http://www.example.com/api/lists/21
                    board_url: http://www.example.com/api/boards/43
                    tasks:
                    - id: 8
                      name: Brothers in Arms
                      pos: 65536.0
                      priority: very_high
                      spent_time: 0
                      points: 5
                      list_id: 21
                      deleted_at: '2022-11-14T22:05:34.280Z'
                      url: http://www.example.com/api/tasks/8
                      list_url: http://www.example.com/api/lists/21
                      users: []
                      tags: []
                    - id: 9
                      name: Bridge over Troubled Water
                      pos: 65536.0
                      priority: medium
                      spent_time: 0
                      points: 3
                      list_id: 21
                      deleted_at: '2022-11-14T22:05:34.291Z'
                      url: http://www.example.com/api/tasks/9
                      list_url: http://www.example.com/api/lists/21
                      users:
                      - id: 41
                        name: Ronald Macejkovic Esq.
                        avatar_url: https://www.gravatar.com/avatar/c0528f4bc596f375e00d727ccc20f3a5
                        role: developer
                        url: http://www.example.com/api/users/41
                      tags:
                      - id: 5
                        name: Legal
                        colour: "#bcd117"
                        url: http://www.example.com/api/tags/5
                successful:
                  summary: successful
                  value:
                    id: 24
                    name: carmine
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 47
                    created_at: '2022-11-14T22:05:34.325Z'
                    updated_at: '2022-11-14T22:05:34.325Z'
                    url: http://www.example.com/api/lists/24
                    board_url: http://www.example.com/api/boards/47
              schema:
                "$ref": "#/components/schemas/list_response"
    put:
      summary: Update list
      tags:
      - Lists
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 25
                    name: New Name
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 48
                    created_at: '2022-11-14T22:05:34.344Z'
                    updated_at: '2022-11-14T22:05:34.357Z'
                    url: http://www.example.com/api/lists/25
                    board_url: http://www.example.com/api/boards/48
              schema:
                "$ref": "#/components/schemas/list_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/list_request"
    delete:
      summary: Delete list
      tags:
      - Lists
      responses:
        '204':
          description: successful
  "/api/script_runs":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: List script runs
      tags:
      - ScriptRuns
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - id: 1
                    script_id: 1
                    input: puts 'Hello world'
                    output: Hello world
                    initiator_id: 48
                    url: http://www.example.com/api/script_runs/1
                  - id: 2
                    script_id: 2
                    input: puts 'Hello world'
                    output: Hello world
                    initiator_id: 50
                    url: http://www.example.com/api/script_runs/2
                  - id: 3
                    script_id: 3
                    input: puts 'Hello world'
                    output: Hello world
                    initiator_id: 52
                    url: http://www.example.com/api/script_runs/3
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/script_run_response"
  "/api/scripts/{id}/script_runs":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Script id
      required: true
      schema:
        type: string
    get:
      summary: List script's script runs
      tags:
      - ScriptRuns
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - id: 4
                    script_id: 4
                    input: puts 'Hello world'
                    output: Hello world
                    initiator_id: 56
                    url: http://www.example.com/api/script_runs/4
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/script_run_response"
  "/api/script_runs/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show script run
      tags:
      - ScriptRuns
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 5
                    script_id: 5
                    input: puts 'Hello world'
                    output: Hello world
                    initiator_id: 60
                    url: http://www.example.com/api/script_runs/5
              schema:
                "$ref": "#/components/schemas/script_run_response"
    put:
      summary: Update script run
      tags:
      - ScriptRuns
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 6
                    script_id: 6
                    input: puts 'Hello world'
                    output: example output
                    initiator_id: 64
                    url: http://www.example.com/api/script_runs/6
              schema:
                "$ref": "#/components/schemas/script_run_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/script_run_request"
  "/api/scripts":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: List scripts
      tags:
      - Scripts
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - id: 7
                    content: puts 'hello world'
                    name: My first Lambdee Script
                    description: Description of the script
                    author_id: 67
                    url: http://www.example.com/api/scripts/7
                  - id: 8
                    content: puts 'hello world'
                    name: My first Lambdee Script
                    description: Description of the script
                    author_id: 68
                    url: http://www.example.com/api/scripts/8
                  - id: 9
                    content: puts 'hello world'
                    name: My first Lambdee Script
                    description: Description of the script
                    author_id: 69
                    url: http://www.example.com/api/scripts/9
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/script_response"
    post:
      summary: Create Script
      tags:
      - Scripts
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 10
                    content: puts 'Hello world!'
                    name: New Script
                    description: What script does
                    author_id: 72
                    url: http://www.example.com/api/scripts/10
                    script_triggers:
                    - id: 1
                      script_id: 10
                      subject_type:
                      subject_id:
                      action: create
                      url: http://www.example.com/api/script_triggers/1
                    - id: 2
                      script_id: 10
                      subject_type: DB::Task
                      subject_id:
                      action: update
                      url: http://www.example.com/api/script_triggers/2
                    - id: 3
                      script_id: 10
                      subject_type: DB::Task
                      subject_id: 10
                      action: destroy
                      url: http://www.example.com/api/script_triggers/3
              schema:
                "$ref": "#/components/schemas/script_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/script_request"
  "/api/scripts/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show Script
      tags:
      - Scripts
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 11
                    content: puts 'hello world'
                    name: My first Lambdee Script
                    description: Description of the script
                    author_id: 75
                    url: http://www.example.com/api/scripts/11
                    script_triggers: []
              schema:
                "$ref": "#/components/schemas/script_response"
    put:
      summary: Update Script
      tags:
      - Scripts
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 12
                    content: puts 'hello world'
                    name: New Name
                    description: Description of the script
                    author_id: 78
                    url: http://www.example.com/api/scripts/12
                    script_triggers:
                    - id: 5
                      script_id: 12
                      subject_type:
                      subject_id:
                      action: create
                      url: http://www.example.com/api/script_triggers/5
              schema:
                "$ref": "#/components/schemas/script_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/script_request"
    delete:
      summary: Delete script
      tags:
      - Scripts
      responses:
        '204':
          description: successful
  "/api/boards/{id}/sprints":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Board id
      required: true
      schema:
        type: string
    get:
      summary: List board's sprints
      tags:
      - Sprints
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - id: 1
                    board_id: 51
                    name: Mackay
                    description: Sint maxime assumenda. Optio ipsum rerum. Et quisquam
                      dolorum.
                    started_at: '2022-11-14T22:05:34.679Z'
                    expected_end_at: '2022-11-21T22:05:34.679Z'
                    ended_at:
                    final_list_name: Done
                    url: http://www.example.com/api/sprints/1
                  - id: 2
                    board_id: 51
                    name: Warragul – Drouin
                    description: Et consequatur quisquam. Voluptatem mollitia quia.
                      Modi aut assumenda.
                    started_at: '2022-11-14T22:05:34.683Z'
                    expected_end_at: '2022-11-21T22:05:34.683Z'
                    ended_at:
                    final_list_name: Done
                    url: http://www.example.com/api/sprints/2
                  - id: 3
                    board_id: 51
                    name: Mount Gambier
                    description: Eveniet dolores perspiciatis. Deserunt eum illo.
                      Sapiente impedit aut.
                    started_at: '2022-11-14T22:05:34.685Z'
                    expected_end_at: '2022-11-21T22:05:34.685Z'
                    ended_at:
                    final_list_name: Done
                    url: http://www.example.com/api/sprints/3
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/sprint_response"
  "/api/sprints":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    post:
      summary: Create sprint
      tags:
      - Sprints
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 4
                    board_id: 52
                    name: New Sprint
                    description: Example description of new sprint
                    started_at: '2022-11-14T22:05:34.726Z'
                    expected_end_at: '2025-12-11T23:00:00.000Z'
                    ended_at:
                    final_list_name: Done
                    url: http://www.example.com/api/sprints/4
              schema:
                "$ref": "#/components/schemas/sprint_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/sprint_request"
  "/api/sprints/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    - name: tasks
      in: query
      example: all
      required: false
      schema:
        type: string
    get:
      summary: Show Sprint
      tags:
      - Sprints
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful with `tasks=all`:
                  summary: successful with `tasks=all`
                  value:
                    id: 5
                    board_id: 53
                    name: Bowral – Mittagong
                    description: Et explicabo et. Voluptatem consequatur quos. Id
                      omnis vitae.
                    started_at: '2022-11-14T22:05:34.735Z'
                    expected_end_at: '2022-11-21T22:05:34.735Z'
                    ended_at:
                    final_list_name: Done
                    url: http://www.example.com/api/sprints/5
                    tasks:
                    - id: 11
                      name: Abbey Road
                      priority: very_high
                      spent_time: 0
                      points: 5
                      added_at: '2022-11-14T22:05:34.754Z'
                      completed_at:
                      start_state: To Do
                      state: Doing
                successful:
                  summary: successful
                  value:
                    id: 6
                    board_id: 55
                    name: Perth
                    description: Eligendi possimus atque. Voluptas maxime voluptate.
                      Est enim tenetur.
                    started_at: '2022-11-14T22:05:34.779Z'
                    expected_end_at: '2022-11-21T22:05:34.779Z'
                    ended_at:
                    final_list_name: Done
                    url: http://www.example.com/api/sprints/6
              schema:
                "$ref": "#/components/schemas/sprint_response"
    put:
      summary: Update Sprint
      tags:
      - Sprints
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 7
                    board_id: 56
                    name: New Name
                    description: Enim inventore et. Harum minus quaerat. Assumenda
                      qui aut.
                    started_at: '2022-11-14T22:05:34.808Z'
                    expected_end_at: '2022-11-21T22:05:34.808Z'
                    ended_at:
                    final_list_name: Done
                    url: http://www.example.com/api/sprints/7
              schema:
                "$ref": "#/components/schemas/sprint_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/sprint_request"
    delete:
      summary: Delete sprint
      tags:
      - Sprints
      responses:
        '204':
          description: successful
  "/api/sprints/{id}/end":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    put:
      summary: End sprint
      tags:
      - Sprints
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 9
                    board_id: 58
                    name: Orange
                    description: Saepe corrupti doloribus. Et et at. Debitis unde
                      cumque.
                    started_at: '2022-11-14T22:05:34.856Z'
                    expected_end_at: '2022-11-21T22:05:34.856Z'
                    ended_at: '2022-11-14T22:05:34.872Z'
                    final_list_name: Done
                    url: http://www.example.com/api/sprints/9
              schema:
                "$ref": "#/components/schemas/sprint_response"
  "/api/boards/{id}/active_sprint":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show active sprint
      tags:
      - Sprints
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 10
                    board_id: 59
                    name: Bathurst
                    description: Et accusantium nulla. Velit nihil reprehenderit.
                      Corrupti aut facilis.
                    started_at: '2022-11-14T22:05:34.880Z'
                    expected_end_at: '2022-11-21T22:05:34.880Z'
                    ended_at:
                    final_list_name: Done
                    url: http://www.example.com/api/sprints/10
              schema:
                "$ref": "#/components/schemas/sprint_response"
  "/api/sprints/{id}/burn_up_chart":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show data for burn up chart
      tags:
      - Sprints
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - name: Work Scope
                    data:
                      '2022-11-21': 0
                  - name: Completed work
                    data: {}
  "/api/boards/{id}/tags":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Board id
      required: true
      schema:
        type: string
    get:
      summary: List board's tags
      tags:
      - Tags
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - id: 6
                    name: Marketing
                    colour: "#450798"
                    url: http://www.example.com/api/tags/6
                    board_id: 61
                    created_at: '2022-11-14T22:05:34.929Z'
                    updated_at: '2022-11-14T22:05:34.929Z'
                  - id: 7
                    name: Mining
                    colour: "#be2577"
                    url: http://www.example.com/api/tags/7
                    board_id: 61
                    created_at: '2022-11-14T22:05:34.930Z'
                    updated_at: '2022-11-14T22:05:34.930Z'
                  - id: 8
                    name: Retail
                    colour: "#853fe4"
                    url: http://www.example.com/api/tags/8
                    board_id: 61
                    created_at: '2022-11-14T22:05:34.932Z'
                    updated_at: '2022-11-14T22:05:34.932Z'
                  - id: 9
                    name: Design
                    colour: "#45f821"
                    url: http://www.example.com/api/tags/9
                    board_id: 61
                    created_at: '2022-11-14T22:05:34.933Z'
                    updated_at: '2022-11-14T22:05:34.933Z'
                  - id: 10
                    name: Accounting
                    colour: "#67c2f1"
                    url: http://www.example.com/api/tags/10
                    board_id: 61
                    created_at: '2022-11-14T22:05:34.934Z'
                    updated_at: '2022-11-14T22:05:34.934Z'
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/tag_response"
    post:
      summary: Create tag
      tags:
      - Tags
      parameters:
      - name: id
        in: path
        description: Board id
        required: true
        schema:
          type: string
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 11
                    name: New Tag
                    colour: "#fff000"
                    url: http://www.example.com/api/tags/11
                    board_id: 62
                    created_at: '2022-11-14T22:05:34.971Z'
                    updated_at: '2022-11-14T22:05:34.971Z'
              schema:
                "$ref": "#/components/schemas/tag_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/tag_request"
  "/api/tags":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    post:
      summary: Create tag
      tags:
      - Tags
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 12
                    name: New Tag
                    colour: "#fff000"
                    url: http://www.example.com/api/tags/12
                    board_id: 63
                    created_at: '2022-11-14T22:05:35.003Z'
                    updated_at: '2022-11-14T22:05:35.003Z'
              schema:
                "$ref": "#/components/schemas/tag_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/tag_request"
  "/api/tasks/{id}/tags":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Task id
      required: true
      schema:
        type: string
    get:
      summary: List task's tags
      tags:
      - Tags
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - id: 13
                    name: IT
                    colour: "#cdc2d0"
                    url: http://www.example.com/api/tags/13
                    board_id: 64
                    created_at: '2022-11-14T22:05:35.018Z'
                    updated_at: '2022-11-14T22:05:35.018Z'
                  - id: 14
                    name: Marketing
                    colour: "#ebcd77"
                    url: http://www.example.com/api/tags/14
                    board_id: 64
                    created_at: '2022-11-14T22:05:35.020Z'
                    updated_at: '2022-11-14T22:05:35.020Z'
                  - id: 15
                    name: Consulting
                    colour: "#7e1c14"
                    url: http://www.example.com/api/tags/15
                    board_id: 64
                    created_at: '2022-11-14T22:05:35.021Z'
                    updated_at: '2022-11-14T22:05:35.021Z'
                  - id: 16
                    name: IT
                    colour: "#94496d"
                    url: http://www.example.com/api/tags/16
                    board_id: 64
                    created_at: '2022-11-14T22:05:35.022Z'
                    updated_at: '2022-11-14T22:05:35.022Z'
                  - id: 17
                    name: Mining
                    colour: "#f847e4"
                    url: http://www.example.com/api/tags/17
                    board_id: 64
                    created_at: '2022-11-14T22:05:35.024Z'
                    updated_at: '2022-11-14T22:05:35.024Z'
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/tag_response"
    post:
      summary: Create tag (associated with given task and task's board)
      tags:
      - Tags
      parameters:
      - name: id
        in: path
        description: Task id
        required: true
        schema:
          type: string
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 18
                    name: New Tag
                    colour: "#fff000"
                    url: http://www.example.com/api/tags/18
                    board_id: 65
                    created_at: '2022-11-14T22:05:35.074Z'
                    updated_at: '2022-11-14T22:05:35.074Z'
              schema:
                "$ref": "#/components/schemas/tag_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/tag_request"
  "/api/tags/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show Tags
      tags:
      - Tags
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 19
                    name: Consulting
                    colour: "#e44afc"
                    url: http://www.example.com/api/tags/19
                    board_id: 66
                    created_at: '2022-11-14T22:05:35.084Z'
                    updated_at: '2022-11-14T22:05:35.084Z'
              schema:
                "$ref": "#/components/schemas/tag_response"
    put:
      summary: Update Tag
      tags:
      - Tags
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 20
                    name: New Name
                    colour: "#490f3d"
                    url: http://www.example.com/api/tags/20
                    board_id: 67
                    created_at: '2022-11-14T22:05:35.107Z'
                    updated_at: '2022-11-14T22:05:35.120Z'
              schema:
                "$ref": "#/components/schemas/tag_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/tag_request"
    delete:
      summary: Delete tag
      tags:
      - Tags
      responses:
        '204':
          description: successful
  "/api/tasks":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: List tasks
      tags:
      - Tasks
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - id: 15
                    name: The Joshua Tree
                    pos: 65536.0
                    priority: low
                    spent_time: 0
                    points: 2
                    list_id: 32
                    deleted_at:
                    url: http://www.example.com/api/tasks/15
                    list_url: http://www.example.com/api/lists/32
                    description: "### Et\nAutem architecto recusandae. Et qui dignissimos.
                      Sunt natus qui. Inventore voluptas cupiditate. Ea vel explicabo.
                      Iusto tenetur voluptate.\n0. Quo. \n1. Et. \n2. Id. \n3. Aspernatur.
                      \n4. Delectus. \n"
                    created_at: '2022-11-14T22:05:35.151Z'
                    updated_at: '2022-11-14T22:05:35.151Z'
                  - id: 16
                    name: The Eminem Show
                    pos: 65536.0
                    priority: high
                    spent_time: 0
                    points: 4
                    list_id: 33
                    deleted_at:
                    url: http://www.example.com/api/tasks/16
                    list_url: http://www.example.com/api/lists/33
                    description: |-
                      ### Error
                      Qui ut dolor. Magni molestiae necessitatibus. Assumenda atque explicabo. Beatae fugiat non. Eaque voluptatum fugiat.
                      Placeat esse aspernatur. Magni nisi consequatur. ~Mollitia~ odit est.
                    created_at: '2022-11-14T22:05:35.159Z'
                    updated_at: '2022-11-14T22:05:35.159Z'
                  - id: 17
                    name: Appetite for Destruction
                    pos: 65536.0
                    priority: low
                    spent_time: 0
                    points: 4
                    list_id: 34
                    deleted_at:
                    url: http://www.example.com/api/tasks/17
                    list_url: http://www.example.com/api/lists/34
                    description: |-
                      ###### At
                      Sequi non aspernatur. Sed temporibus ducimus. Quasi et accusantium.
                      ```ruby
                      Officia.
                      ```
                    created_at: '2022-11-14T22:05:35.167Z'
                    updated_at: '2022-11-14T22:05:35.167Z'
                  - id: 18
                    name: No Jacket Required
                    pos: 65536.0
                    priority: medium
                    spent_time: 0
                    points: 1
                    list_id: 35
                    deleted_at:
                    url: http://www.example.com/api/tasks/18
                    list_url: http://www.example.com/api/lists/35
                    description: |-
                      #### Est
                      Eum maiores enim. Voluptatum et eos. Ab ullam assumenda. Et doloribus expedita. Vero officiis eum.
                      Enim est excepturi. Aut et voluptas. Saepe beatae **qui.**
                    created_at: '2022-11-14T22:05:35.175Z'
                    updated_at: '2022-11-14T22:05:35.175Z'
                  - id: 19
                    name: 'HIStory: Past, Present and Future, Book I'
                    pos: 65536.0
                    priority: very_high
                    spent_time: 0
                    points: 4
                    list_id: 36
                    deleted_at:
                    url: http://www.example.com/api/tasks/19
                    list_url: http://www.example.com/api/lists/36
                    description: |-
                      ###### Optio
                      Sint et labore. Assumenda consectetur mollitia. Aut sit odio. Eaque soluta tenetur.
                      ```ruby
                      Iure.
                      ```
                    created_at: '2022-11-14T22:05:35.183Z'
                    updated_at: '2022-11-14T22:05:35.183Z'
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/task_response"
    post:
      summary: Create Task
      tags:
      - Tasks
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 20
                    name: New Task
                    pos: 65536.0
                    priority:
                    spent_time: 0
                    points:
                    list_id: 37
                    deleted_at:
                    url: http://www.example.com/api/tasks/20
                    list_url: http://www.example.com/api/lists/37
                    description:
                    created_at: '2022-11-14T22:05:35.223Z'
                    updated_at: '2022-11-14T22:05:35.223Z'
              schema:
                "$ref": "#/components/schemas/task_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/task_request"
  "/api/tasks/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Task id
      required: true
      schema:
        type: string
    get:
      summary: Show Taks
      parameters:
      - name: include_associations
        in: query
        required: false
        description: If true, extended object with all associations is returned.
        schema:
          type: string
      tags:
      - Tasks
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful with `include_associations=true`:
                  summary: successful with `include_associations=true`
                  value:
                    id: 21
                    name: Music Box
                    pos: 65536.0
                    priority: low
                    spent_time: 0
                    points: 4
                    list_id: 38
                    deleted_at:
                    url: http://www.example.com/api/tasks/21
                    list_url: http://www.example.com/api/lists/38
                    description: |-
                      ###### Officia
                      Quod nostrum doloremque. Est dolor repellendus. Amet voluptatem ipsum. Illo necessitatibus vel. Est sed porro. Quod non fugit.
                      `Quam.`
                    created_at: '2022-11-14T22:05:35.236Z'
                    updated_at: '2022-11-14T22:05:35.236Z'
                    list:
                      id: 38
                      name: gray
                      pos: 65536.0
                      visible: false
                      deleted_at:
                      board_id: 75
                      created_at: '2022-11-14T22:05:35.232Z'
                      updated_at: '2022-11-14T22:05:35.232Z'
                      url: http://www.example.com/api/lists/38
                      board_url: http://www.example.com/api/boards/75
                    author:
                      id: 129
                      name: Alan Kassulke
                      avatar_url: https://www.gravatar.com/avatar/7da04accacf56ec3eaf7fc0229deb480
                      role: regular
                      url: http://www.example.com/api/users/129
                      email: alan_kassulke.1668463535@example.com
                      created_at: '2022-11-14T22:05:35.235Z'
                      updated_at: '2022-11-14T22:05:35.235Z'
                    users:
                    - id: 130
                      name: Lourdes Simonis
                      avatar_url: https://www.gravatar.com/avatar/51555200c95c85a297552df6407bd788
                      role: developer
                      url: http://www.example.com/api/users/130
                      email: lourdes_simonis.1668463535@example.com
                      created_at: '2022-11-14T22:05:35.240Z'
                      updated_at: '2022-11-14T22:05:35.240Z'
                    - id: 131
                      name: Fr. Tod Mayer
                      avatar_url: https://www.gravatar.com/avatar/97fedae230c86c9e842d162e3127a194
                      role: regular
                      url: http://www.example.com/api/users/131
                      email: fr_tod_mayer.1668463535@example.com
                      created_at: '2022-11-14T22:05:35.243Z'
                      updated_at: '2022-11-14T22:05:35.243Z'
                    tags:
                    - id: 22
                      name: Farming
                      colour: "#309b07"
                      url: http://www.example.com/api/tags/22
                      board_id: 76
                      created_at: '2022-11-14T22:05:35.246Z'
                      updated_at: '2022-11-14T22:05:35.246Z'
                    - id: 23
                      name: Construction
                      colour: "#80470b"
                      url: http://www.example.com/api/tags/23
                      board_id: 77
                      created_at: '2022-11-14T22:05:35.249Z'
                      updated_at: '2022-11-14T22:05:35.249Z'
                    - id: 24
                      name: Advertising
                      colour: "#59428c"
                      url: http://www.example.com/api/tags/24
                      board_id: 78
                      created_at: '2022-11-14T22:05:35.252Z'
                      updated_at: '2022-11-14T22:05:35.252Z'
                successful:
                  summary: successful
                  value:
                    id: 22
                    name: Whitney Houston
                    pos: 65536.0
                    priority: very_low
                    spent_time: 0
                    points: 1
                    list_id: 39
                    deleted_at:
                    url: http://www.example.com/api/tasks/22
                    list_url: http://www.example.com/api/lists/39
                    description: |-
                      # Neque
                      Occaecati quia a. Iusto rerum reiciendis. Voluptatem quidem tempore. Qui non ut. Voluptatibus ut est.
                      ### In
                    created_at: '2022-11-14T22:05:35.281Z'
                    updated_at: '2022-11-14T22:05:35.281Z'
              schema:
                "$ref": "#/components/schemas/task_response"
    put:
      summary: Update Task
      tags:
      - Tasks
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 23
                    name: New Name
                    pos: 65536.0
                    priority: low
                    spent_time: 0
                    points: 3
                    list_id: 40
                    deleted_at:
                    url: http://www.example.com/api/tasks/23
                    list_url: http://www.example.com/api/lists/40
                    description: |-
                      # Ex
                      Similique quis odit. Accusantium debitis dolore. Quo beatae ut. Voluptatem consequuntur doloribus.
                      # Odio
                    created_at: '2022-11-14T22:05:35.309Z'
                    updated_at: '2022-11-14T22:05:35.324Z'
              schema:
                "$ref": "#/components/schemas/task_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/task_request"
    delete:
      summary: Delete Task
      tags:
      - Tasks
      responses:
        '204':
          description: successful
  "/api/tasks/{id}/add_time":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Task id
      required: true
      schema:
        type: string
    put:
      summary: Add time
      tags:
      - Tasks
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 25
                    name: Hotel California
                    pos: 65536.0
                    priority: low
                    spent_time: 1200
                    points: 1
                    list_id: 42
                    deleted_at:
                    url: http://www.example.com/api/tasks/25
                    list_url: http://www.example.com/api/lists/42
                    description: "## Nostrum\nFuga qui dolore. Repudiandae necessitatibus
                      cumque. Accusantium repellendus consectetur.\n0. Omnis. \n1.
                      Distinctio. \n2. Veritatis. \n3. Dicta. \n4. Itaque. \n5. Soluta.
                      \n6. Quod. \n7. Culpa. \n8. Qui. \n"
                    created_at: '2022-11-14T22:05:35.362Z'
                    updated_at: '2022-11-14T22:05:35.377Z'
        '422':
          description: non integer time
          content:
            application/json:
              examples:
                incorrect unit:
                  summary: incorrect unit
                  value:
                    unit:
                    - is not included in the list
                negative time:
                  summary: negative time
                  value:
                    time:
                    - must be greater than 0
                non integer time:
                  summary: non integer time
                  value:
                    time:
                    - must be greater than 0
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                time:
                  type: integer
                unit:
                  type: string
                  enum: "#<Set: {:day, :hour, :minute, :second}>"
  "/api/tasks/{id}/attach_tag":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Task id
      required: true
      schema:
        type: string
    post:
      summary: Attach Tag
      tags:
      - Tasks
      parameters: []
      responses:
        '204':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                tag_id:
                  type: integer
  "/api/tasks/{id}/detach_tag":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Task id
      required: true
      schema:
        type: string
    post:
      summary: Detach Tag
      tags:
      - Tasks
      parameters: []
      responses:
        '204':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                tag_id:
                  type: integer
  "/api/tasks/{id}/assign_user":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Task id
      required: true
      schema:
        type: string
    post:
      summary: Assign User
      tags:
      - Tasks
      parameters: []
      responses:
        '204':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
  "/api/tasks/{id}/unassign_user":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Task id
      required: true
      schema:
        type: string
    post:
      summary: Unassign User
      tags:
      - Tasks
      parameters: []
      responses:
        '204':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
  "/api/workspaces/{id}/users":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: List users of workspace
      tags:
      - Users
      parameters:
      - name: id
        in: path
        description: Workspace id
        required: true
        schema:
          type: string
      - name: page
        in: query
        required: false
        description: Decides which result page should be returned.
        example: 2
        schema:
          type: integer
      - name: role
        in: query
        required: false
        schema:
          "$ref": "#/components/schemas/user_request/properties/role"
        example: admin
      - name: created_at_from
        in: query
        required: false
        description: Date with format YYYY.MM.DD
        example: 2010.01.25
        schema:
          type: string
      - name: created_at_to
        in: query
        required: false
        description: Date with format YYYY.MM.DD
        example: 2010.01.25
        schema:
          type: string
      - name: search
        in: query
        required: false
        description: Searches for users by name and e-mail.
        example: michael
        schema:
          type: string
      - name: per
        in: query
        required: false
        description: Decides how many entities should be returned per one page. **Works
          only, when `page` param is given.**
        example: 2
        schema:
          type: integer
      - name: limit
        in: query
        required: false
        description: Decides how many entities should be returned.
        example: 3
        schema:
          type: integer
      - name: limit
        in: query
        required: false
        description: Decides how many entities should be returned
        example: 3
        schema:
          type: integer
      responses:
        '200':
          description: successful with pages
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    users:
                    - id: 157
                      name: Zina Franecki
                      avatar_url: https://www.gravatar.com/avatar/bcafcb71bf82e98909d5ed539f5c3f4c
                      role: manager
                      url: http://www.example.com/api/users/157
                      email: zina_franecki.1668463535@example.com
                      created_at: '2022-11-14T22:05:35.626Z'
                      updated_at: '2022-11-14T22:05:35.626Z'
                    - id: 158
                      name: Mrs. Sondra Muller
                      avatar_url: https://www.gravatar.com/avatar/b2e3a9456b5275a835ca2834a86594bc
                      role: developer
                      url: http://www.example.com/api/users/158
                      email: mrs_sondra_muller.1668463535@example.com
                      created_at: '2022-11-14T22:05:35.640Z'
                      updated_at: '2022-11-14T22:05:35.640Z'
                    - id: 159
                      name: Nathanael Adams
                      avatar_url: https://www.gravatar.com/avatar/09c1105d81e1a1884bc5768c5e83389d
                      role: regular
                      url: http://www.example.com/api/users/159
                      email: nathanael_adams.1668463535@example.com
                      created_at: '2022-11-14T22:05:35.648Z'
                      updated_at: '2022-11-14T22:05:35.648Z'
                successful with pages:
                  summary: successful with pages
                  value:
                    users:
                    - id: 161
                      name: Mohamed Boehm
                      avatar_url: https://www.gravatar.com/avatar/483874304a3cbdbef579dc8f66372f62
                      role: manager
                      url: http://www.example.com/api/users/161
                      email: mohamed_boehm.1668463535@example.com
                      created_at: '2022-11-14T22:05:35.685Z'
                      updated_at: '2022-11-14T22:05:35.685Z'
                    - id: 162
                      name: Colleen Kulas
                      avatar_url: https://www.gravatar.com/avatar/f9efa87f5e861af315fc2dca81f9bba7
                      role: manager
                      url: http://www.example.com/api/users/162
                      email: colleen_kulas.1668463535@example.com
                      created_at: '2022-11-14T22:05:35.689Z'
                      updated_at: '2022-11-14T22:05:35.689Z'
                    - id: 163
                      name: Alvin Shanahan
                      avatar_url: https://www.gravatar.com/avatar/1b4ce6f4133a6ddbc9dea43490b6e424
                      role: manager
                      url: http://www.example.com/api/users/163
                      email: alvin_shanahan.1668463535@example.com
                      created_at: '2022-11-14T22:05:35.693Z'
                      updated_at: '2022-11-14T22:05:35.693Z'
                    total_pages: 1
              schema:
                "$ref": "#/components/schemas/user_pages_response"
  "/api/users":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: List users
      tags:
      - Users
      parameters:
      - name: role_collection
        in: query
        schema:
          type: array
          items:
            "$ref": "#/components/schemas/user_request/properties/role"
        example:
        - admin
      - name: role
        in: query
        required: false
        schema:
          "$ref": "#/components/schemas/user_request/properties/role"
        example: admin
      - name: created_at_from
        in: query
        required: false
        description: Date with format YYYY.MM.DD
        example: 2010.01.25
        schema:
          type: string
      - name: created_at_to
        in: query
        required: false
        description: Date with format YYYY.MM.DD
        example: 2010.01.25
        schema:
          type: string
      - name: workspace_id
        in: query
        required: false
        example: 1
        schema:
          type: integer
      - name: search
        in: query
        required: false
        description: Searches for users by name and e-mail.
        example: michael
        schema:
          type: string
      - name: page
        in: query
        required: false
        description: Decides which result page should be returned.
        example: 2
        schema:
          type: integer
      - name: per
        in: query
        required: false
        description: Decides how many entities should be returned per one page. **Works
          only, when `page` param is given.**
        example: 2
        schema:
          type: integer
      - name: limit
        in: query
        required: false
        description: Decides how many entities should be returned.
        example: 3
        schema:
          type: integer
      responses:
        '200':
          description: successful with pages
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    users:
                    - id: 165
                      name: Collen Feest
                      avatar_url: https://www.gravatar.com/avatar/74aca4f68643e843ab00954eeccabbd1
                      role: regular
                      url: http://www.example.com/api/users/165
                      email: collen_feest.1668463535@example.com
                      created_at: '2022-11-14T22:05:35.716Z'
                      updated_at: '2022-11-14T22:05:35.716Z'
                    - id: 166
                      name: Epifania Schneider
                      avatar_url: https://www.gravatar.com/avatar/16815e1b6bb8d754bd865415a47a3049
                      role: manager
                      url: http://www.example.com/api/users/166
                      email: epifania_schneider.1668463535@example.com
                      created_at: '2022-11-14T22:05:35.719Z'
                      updated_at: '2022-11-14T22:05:35.719Z'
                    - id: 167
                      name: Rosemarie Turner
                      avatar_url: https://www.gravatar.com/avatar/828e32ddd40c1a815a26a8604a0dda8e
                      role: regular
                      url: http://www.example.com/api/users/167
                      email: rosemarie_turner.1668463535@example.com
                      created_at: '2022-11-14T22:05:35.722Z'
                      updated_at: '2022-11-14T22:05:35.722Z'
                    - id: 168
                      name: Prof. Stanford Erdman
                      avatar_url: https://www.gravatar.com/avatar/cd7847620d6042f1fd3b8cd904553dce
                      role: manager
                      url: http://www.example.com/api/users/168
                      email: prof_stanford_erdman.1668463535@example.com
                      created_at: '2022-11-14T22:05:35.725Z'
                      updated_at: '2022-11-14T22:05:35.725Z'
                    - id: 169
                      name: Williams Walker
                      avatar_url: https://www.gravatar.com/avatar/d15990a80da5380368d70f83f4808c88
                      role: developer
                      url: http://www.example.com/api/users/169
                      email: williams_walker.1668463535@example.com
                      created_at: '2022-11-14T22:05:35.727Z'
                      updated_at: '2022-11-14T22:05:35.727Z'
                    - id: 170
                      name: Isa Reilly
                      avatar_url: https://www.gravatar.com/avatar/2753d13fd406c53cba45aa44e6d25195
                      role: admin
                      url: http://www.example.com/api/users/170
                      email: isa_reilly.1668463535@example.com
                      created_at: '2022-11-14T22:05:35.730Z'
                      updated_at: '2022-11-14T22:05:35.730Z'
                successful with pages:
                  summary: successful with pages
                  value:
                    users:
                    - id: 171
                      name: Prof. Delaine Barrows
                      avatar_url: https://www.gravatar.com/avatar/b5d1f0d0ff57a39091e3b1a34e12f33f
                      role: regular
                      url: http://www.example.com/api/users/171
                      email: prof_delaine_barrows.1668463535@example.com
                      created_at: '2022-11-14T22:05:35.747Z'
                      updated_at: '2022-11-14T22:05:35.747Z'
                    - id: 172
                      name: Sharmaine Reynolds
                      avatar_url: https://www.gravatar.com/avatar/fd72f536f0ac939e5e3a5f0202cb92ce
                      role: regular
                      url: http://www.example.com/api/users/172
                      email: sharmaine_reynolds.1668463535@example.com
                      created_at: '2022-11-14T22:05:35.750Z'
                      updated_at: '2022-11-14T22:05:35.750Z'
                    - id: 173
                      name: Eugenio Stoltenberg DVM
                      avatar_url: https://www.gravatar.com/avatar/321737333e15532fc08bb53f39e46b0b
                      role: developer
                      url: http://www.example.com/api/users/173
                      email: eugenio_stoltenberg_dvm.1668463535@example.com
                      created_at: '2022-11-14T22:05:35.753Z'
                      updated_at: '2022-11-14T22:05:35.753Z'
                    - id: 174
                      name: Anderson Braun
                      avatar_url: https://www.gravatar.com/avatar/adde32ff42734f752be7831bcc56fa10
                      role: manager
                      url: http://www.example.com/api/users/174
                      email: anderson_braun.1668463535@example.com
                      created_at: '2022-11-14T22:05:35.755Z'
                      updated_at: '2022-11-14T22:05:35.755Z'
                    - id: 175
                      name: Gov. Thersa Bauch
                      avatar_url: https://www.gravatar.com/avatar/a31308e23c32216615c3403b8dea6aee
                      role: developer
                      url: http://www.example.com/api/users/175
                      email: gov_thersa_bauch.1668463535@example.com
                      created_at: '2022-11-14T22:05:35.758Z'
                      updated_at: '2022-11-14T22:05:35.758Z'
                    - id: 176
                      name: Dr. Deidre Oberbrunner
                      avatar_url: https://www.gravatar.com/avatar/0c32ff29ea0ead8bcb8deb3cd914ed40
                      role: admin
                      url: http://www.example.com/api/users/176
                      email: dr_deidre_oberbrunner.1668463535@example.com
                      created_at: '2022-11-14T22:05:35.761Z'
                      updated_at: '2022-11-14T22:05:35.761Z'
                    total_pages: 1
              schema:
                "$ref": "#/components/schemas/user_pages_response"
    post:
      summary: Create a user
      tags:
      - Users
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 178
                    name: New User
                    created_at: '2022-11-14T22:05:35.792Z'
                    updated_at: '2022-11-14T22:05:35.792Z'
                    email: new_user@example.com
                    role: developer
                    deleted_at:
                    recent_boards: []
              schema:
                "$ref": "#/components/schemas/user_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/user_request"
    put:
      summary: Update current user
      tags:
      - Users
      parameters: []
      responses:
        '204':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/user_update_request"
    delete:
      summary: Delete current user
      tags:
      - Users
      responses:
        '204':
          description: successful
  "/api/users/current":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: Show the currently signed in user
      tags:
      - Users
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 181
                    name: Rey Pfannerstill
                    avatar_url: https://www.gravatar.com/avatar/b85de071a15c0c25bb26b240d99fac8e
                    role: admin
                    url: http://www.example.com/api/users/181
                    email: rey_pfannerstill.1668463535@example.com
                    created_at: '2022-11-14T22:05:35.834Z'
                    updated_at: '2022-11-14T22:05:35.834Z'
              schema:
                "$ref": "#/components/schemas/user_response"
  "/api/users/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show a user
      tags:
      - Users
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 182
                    name: Trevor Tremblay
                    avatar_url: https://www.gravatar.com/avatar/14390d8f1e02965cf4b9a71426e710d3
                    role: manager
                    url: http://www.example.com/api/users/182
                    email: trevor_tremblay.1668463535@example.com
                    created_at: '2022-11-14T22:05:35.850Z'
                    updated_at: '2022-11-14T22:05:35.850Z'
              schema:
                "$ref": "#/components/schemas/user_response"
  "/api/users/sign_in":
    post:
      summary: Sign in
      tags:
      - Users
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 184
                    name: Janean Ledner
                    created_at: '2022-11-14T22:05:35.868Z'
                    updated_at: '2022-11-14T22:05:35.868Z'
                    email: email@example.com
                    role: developer
                    deleted_at:
                    recent_boards: []
              schema:
                "$ref": "#/components/schemas/user_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/user_sign_in_request"
  "/api/users/sign_out":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    delete:
      summary: Sign out
      tags:
      - Users
      responses:
        '204':
          description: successful
  "/api/workspaces":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: list workspaces
      tags:
      - Workspaces
      security:
      - Bearer: {}
      parameters:
      - name: limit
        in: query
        description: Decides how many entities should be returned
        example: 3
        required: false
        schema:
          type: integer
      - name: boards
        in: query
        type: string
        schema:
          "$ref": "#/components/schemas/include_associated_enum"
        required: false
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful with `boards=all`:
                  summary: successful with `boards=all`
                  value:
                  - id: 94
                    name: Lotstring
                    created_at: '2022-11-14T22:05:35.907Z'
                    updated_at: '2022-11-14T22:05:35.907Z'
                    deleted_at:
                    url: http://www.example.com/api/workspaces/94
                    boards:
                    - id: 92
                      name: Terbium
                      colour: "#661324"
                      workspace_id: 94
                      created_at: '2022-11-14T22:05:35.909Z'
                      updated_at: '2022-11-14T22:05:35.909Z'
                      deleted_at:
                      url: http://www.example.com/api/boards/92
                      workspace_url: http://www.example.com/api/workspaces/94
                    - id: 93
                      name: Zinc
                      colour: "#7dc50f"
                      workspace_id: 94
                      created_at: '2022-11-14T22:05:35.910Z'
                      updated_at: '2022-11-14T22:05:35.910Z'
                      deleted_at:
                      url: http://www.example.com/api/boards/93
                      workspace_url: http://www.example.com/api/workspaces/94
                    - id: 94
                      name: Copper
                      colour: "#dd47f0"
                      workspace_id: 94
                      created_at: '2022-11-14T22:05:35.911Z'
                      updated_at: '2022-11-14T22:05:35.911Z'
                      deleted_at:
                      url: http://www.example.com/api/boards/94
                      workspace_url: http://www.example.com/api/workspaces/94
                    - id: 95
                      name: Einsteinium
                      colour: "#e71872"
                      workspace_id: 94
                      created_at: '2022-11-14T22:05:35.911Z'
                      updated_at: '2022-11-14T22:05:35.911Z'
                      deleted_at:
                      url: http://www.example.com/api/boards/95
                      workspace_url: http://www.example.com/api/workspaces/94
                    - id: 96
                      name: Sodium
                      colour: "#84960d"
                      workspace_id: 94
                      created_at: '2022-11-14T22:05:35.912Z'
                      updated_at: '2022-11-14T22:05:35.912Z'
                      deleted_at:
                      url: http://www.example.com/api/boards/96
                      workspace_url: http://www.example.com/api/workspaces/94
                  - id: 95
                    name: Stim
                    created_at: '2022-11-14T22:05:35.913Z'
                    updated_at: '2022-11-14T22:05:35.913Z'
                    deleted_at:
                    url: http://www.example.com/api/workspaces/95
                    boards: []
                successful:
                  summary: successful
                  value:
                  - id: 96
                    name: Sub-Ex
                    created_at: '2022-11-14T22:05:35.944Z'
                    updated_at: '2022-11-14T22:05:35.944Z'
                    deleted_at:
                    url: http://www.example.com/api/workspaces/96
                  - id: 97
                    name: Konklab
                    created_at: '2022-11-14T22:05:35.946Z'
                    updated_at: '2022-11-14T22:05:35.946Z'
                    deleted_at:
                    url: http://www.example.com/api/workspaces/97
                  - id: 98
                    name: Flowdesk
                    created_at: '2022-11-14T22:05:35.947Z'
                    updated_at: '2022-11-14T22:05:35.947Z'
                    deleted_at:
                    url: http://www.example.com/api/workspaces/98
                  - id: 99
                    name: Tresom
                    created_at: '2022-11-14T22:05:35.949Z'
                    updated_at: '2022-11-14T22:05:35.949Z'
                    deleted_at:
                    url: http://www.example.com/api/workspaces/99
                  - id: 100
                    name: Stim
                    created_at: '2022-11-14T22:05:35.950Z'
                    updated_at: '2022-11-14T22:05:35.950Z'
                    deleted_at:
                    url: http://www.example.com/api/workspaces/100
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/workspace_response"
    post:
      summary: create workspace
      tags:
      - Workspaces
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 101
                    name: New Workspace
                    created_at: '2022-11-14T22:05:35.984Z'
                    updated_at: '2022-11-14T22:05:35.984Z'
                    deleted_at:
                    url: http://www.example.com/api/workspaces/101
              schema:
                "$ref": "#/components/schemas/workspace_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/workspace_request"
  "/api/workspaces/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show workspace
      parameters:
      - name: boards
        in: query
        type: string
        schema:
          "$ref": "#/components/schemas/include_associated_enum"
        required: false
      tags:
      - Workspaces
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful with `boards=all`:
                  summary: successful with `boards=all`
                  value:
                    id: 102
                    name: Subin
                    created_at: '2022-11-14T22:05:35.994Z'
                    updated_at: '2022-11-14T22:05:35.994Z'
                    deleted_at:
                    url: http://www.example.com/api/workspaces/102
                    boards:
                    - id: 97
                      name: Tin
                      colour: "#cede67"
                      workspace_id: 102
                      created_at: '2022-11-14T22:05:35.996Z'
                      updated_at: '2022-11-14T22:05:35.996Z'
                      deleted_at:
                      url: http://www.example.com/api/boards/97
                      workspace_url: http://www.example.com/api/workspaces/102
                    - id: 98
                      name: Copernicium
                      colour: "#692a31"
                      workspace_id: 102
                      created_at: '2022-11-14T22:05:35.998Z'
                      updated_at: '2022-11-14T22:05:35.998Z'
                      deleted_at:
                      url: http://www.example.com/api/boards/98
                      workspace_url: http://www.example.com/api/workspaces/102
                successful:
                  summary: successful
                  value:
                    id: 105
                    name: Y-Solowarm
                    created_at: '2022-11-14T22:05:36.020Z'
                    updated_at: '2022-11-14T22:05:36.020Z'
                    deleted_at:
                    url: http://www.example.com/api/workspaces/105
              schema:
                "$ref": "#/components/schemas/workspace_response"
    put:
      summary: update workspace
      tags:
      - Workspaces
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 106
                    name: New Name
                    created_at: '2022-11-14T22:05:36.040Z'
                    updated_at: '2022-11-14T22:05:36.053Z'
                    deleted_at:
                    url: http://www.example.com/api/workspaces/106
              schema:
                "$ref": "#/components/schemas/workspace_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/workspace_request"
    delete:
      summary: delete workspace
      tags:
      - Workspaces
      responses:
        '204':
          description: successful
  "/api/workspaces/{id}/assign_user":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Workspace id
      required: true
      schema:
        type: string
    post:
      summary: Assign User
      tags:
      - Workspaces
      parameters: []
      responses:
        '204':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
  "/api/workspaces/{id}/unassign_user":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Workspace id
      required: true
      schema:
        type: string
    post:
      summary: Unassign User
      tags:
      - Workspaces
      parameters: []
      responses:
        '204':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
components:
  schemas:
    authorization:
      name: Authorization
      in: header
      type: string
      description: JWT token
      example: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiZGV2ZWxvcGVyIiwic3ViIjoiMSIsInNjcCI6InVzZXIiLCJhdWQiOm51bGwsImlhdCI6MTY2NjE4MDIzMiwiZXhwIjoxNjY3NDc2MjMyLCJqdGkiOiJhMzdlZTA5MC0zZGJmLTRhMzgtOTFiNy1mZTJlM2FiYjlkY2QifQ.tGGjFHfMszfGCfNZS6I-hQNLSu_2Xfs3W4hI8IT4CW0
      required: true
    include_associated_enum:
      type: string
      enum:
      - visible
      - invisible
      - non-archived
      - archived
      - all
    user_pages_response:
      type: object
      properties:
        users:
          type: array
          items:
            "$ref": "#components/schemas/user_response"
        total_pages:
          type: integer
      required:
      - users
    user_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        avatar_url:
          type: string
        url:
          type: string
        role:
          type: string
      required:
      - id
      - name
    user_request:
      type: object
      properties:
        user:
          type: object
          properties:
            name:
              type: string
            email:
              type: string
            password:
              type: string
            role:
              type: string
              enum:
              - guest
              - regular
              - developer
              - admin
              - manager
      required:
      - name
      - email
    user_update_request:
      type: object
      properties:
        user:
          type: object
          properties:
            name:
              type: string
            email:
              type: string
            password:
              type: string
            current_password:
              type: string
            role:
              type: string
              enum:
              - guest
              - regular
              - developer
              - admin
              - manager
      required:
      - current_password
    user_sign_in_request:
      type: object
      properties:
        user:
          type: object
          properties:
            email:
              type: string
            password:
              type: string
      required:
      - email
      - password
    comment_response:
      type: object
      properties:
        id:
          type: integer
        body:
          type: string
        deleted_at:
          type:
          - string
          - 'null'
          format: date_time
        author_id:
          type: integer
        task_id:
          type: integer
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        url:
          type: string
        users:
          type: array
          items:
            "$ref": "#/components/schemas/user_response"
          nullable: true
      required:
      - id
      - body
      - deleted_at
      - url
    tag_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        colour:
          type: string
        board_id:
          type: integer
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        url:
          type: string
        board_url:
          type: string
      required:
      - id
    tag_request:
      type: object
      properties:
        name:
          type: string
        colour:
          type: string
        board_id:
          type: integer
        task_id:
          type: integer
      required: []
    sprint_response:
      type: object
      properties:
        id:
          type: integer
        board_id:
          type: integer
        name:
          type: string
        description:
          type:
          - string
          - 'null'
        started_at:
          type: string
          format: date_time
        expected_end_at:
          type: string
          format: date_time
        ended_at:
          type:
          - string
          - 'null'
          format: date_time
        final_list_name:
          type: string
        url:
          type: string
        tasks:
          type: array
          items:
            "$ref": "#/components/schemas/task_with_sprint_task_response"
          nullable: true
      required: []
    task_with_sprint_task_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        priority:
          type: string
        spent_time:
          type: integer
        points:
          type: integer
        added_at:
          type: string
          format: date_time
        completed_at:
          type:
          - string
          - 'null'
          format: date_time
        start_state:
          type: string
        state:
          type: string
      required: []
    sprint_request:
      type: object
      properties:
        board_id:
          type: integer
        name:
          type: string
        description:
          type: string
        started_at:
          type: string
          format: date_time
          example: '2025-12-11T23:00:00'
        expected_end_at:
          type: string
          format: date_time
          example: '2025-12-18T23:00:00'
      required:
      - name
      - expected_end_at
    task_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type:
          - string
          - 'null'
        pos:
          type:
          - number
          - 'null'
          format: float
        priority:
          type:
          - string
          - 'null'
        points:
          type:
          - number
          - 'null'
          format: float
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        deleted_at:
          type:
          - string
          - 'null'
          format: date_time
        list_id:
          type: integer
        list_url:
          type: string
        url:
          type: string
        users:
          type: array
          items:
            "$ref": "#/components/schemas/user_response"
          nullable: true
        tags:
          type: array
          items:
            "$ref": "#/components/schemas/tag_response"
          nullable: true
        author:
          type: object
          schema:
            "$ref": "#/components/schemas/user_response"
          nullable: true
      required:
      - id
      - name
      - pos
      - priority
      - points
      - list_id
      - deleted_at
    task_request:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        pos:
          type: number
          format: float
          description: If not given, value will be set as for the last item in the
            list.
        priority:
          type: string
          enum:
          - very_low
          - low
          - medium
          - high
          - very_high
        points:
          type: number
          format: float
        list_id:
          type: integer
        author_id:
          type: integer
      required:
      - name
      - list_id
      - author_id
    list_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        pos:
          type: number
          format: float
        visible:
          type:
          - boolean
          - 'null'
        deleted_at:
          type:
          - string
          - 'null'
          format: date_time
        board_id:
          type: integer
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        url:
          type: string
        board_url:
          type: string
        tasks:
          type: array
          items:
            "$ref": "#/components/schemas/task_response"
          nullable: true
      required:
      - id
      - name
      - pos
      - visible
      - board_id
      - created_at
      - updated_at
      - deleted_at
    list_request:
      type: object
      properties:
        name:
          type: string
        pos:
          type: number
          format: float
        visible:
          type: boolean
        board_id:
          type: integer
      required:
      - name
      - board_id
    board_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        workspace_id:
          type: integer
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        deleted_at:
          type:
          - string
          - 'null'
          format: date_time
        url:
          type: string
        workspace_url:
          type: string
        lists:
          type: array
          items:
            "$ref": "#/components/schemas/list_response"
          nullable: true
      required:
      - id
      - name
      - workspace_id
      - created_at
      - updated_at
      - deleted_at
    board_request:
      type: object
      properties:
        name:
          type: string
        workspace_id:
          type: integer
      required:
      - name
      - workspace_id
    workspace_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        deleted_at:
          type:
          - string
          - 'null'
          format: date_time
        url:
          type: string
        boards:
          type: array
          items:
            "$ref": "#/components/schemas/board_response"
          nullable: true
      required:
      - id
      - name
      - created_at
      - updated_at
      - deleted_at
    workspace_request:
      type: object
      properties:
        name:
          type: string
      required:
      - name
    script_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        content:
          type: string
        url:
          type: string
        script_triggers:
          type: array
          items:
            "$ref": "#/components/schemas/script_trigger_response"
      required: []
    script_request:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        content:
          type: string
        script_triggers_attributes:
          type: array
          items:
            "$ref": "#/components/schemas/script_trigger_request"
      required:
      - name
    script_trigger_response:
      type: object
      properties:
        id:
          type: integer
        script_id:
          type:
          - integer
          - 'null'
        subject_type:
          type:
          - string
          - 'null'
        subject_id:
          type:
          - integer
          - 'null'
        action:
          type: string
        url:
          type: string
      required: []
    script_trigger_request:
      type: object
      properties:
        id:
          type: integer
          description: Needed only for updates and destroys.
        script_id:
          type: integer
        subject_type:
          type: string
          enum:
          - DB::User
          - DB::Workspace
          - DB::Board
          - DB::List
          - DB::Task
          - DB::Comment
          - DB::Tag
          - DB::Sprint
          - DB::UserWorkspace
          - DB::TaskUser
          - DB::TaskTag
          - DB::SprintTask
        subject_id:
          type: integer
        action:
          type: string
          enum:
          - create
          - update
          - destroy
        _destroy:
          type: boolean
          description: If `true` callback for given `id` will be destroyed. Works
            only nested in sprint.
      required:
      - action
    script_run_response:
      type: object
      properties:
        id:
          type: integer
        script_id:
          type: integer
        initiator_id:
          type: integer
        input:
          type:
          - string
          - 'null'
        output:
          type: string
        url:
          type: string
      required: []
    script_run_request:
      type: object
      properties:
        output:
          type: string
      required: []
servers:
- url: "{defaultProtocol}://{defaultHost}"
  variables:
    defaultProtocol:
      default: http
    defaultHost:
      default: localhost:3000
