---
openapi: 3.0.1
info:
  title: Lambdee API V1
  version: v1
paths:
  "/api/boards":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: list boards
      tags:
      - Boards
      parameters:
      - name: limit
        in: query
        required: false
        description: Decides how many entities should be returned
        example: 3
        schema:
          type: integer
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - id: 1
                    name: Livermorium
                    colour: "#458564"
                    workspace_id: 1
                    created_at: '2022-11-29T00:16:55.191Z'
                    updated_at: '2022-11-29T00:16:55.191Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/boards/1
                    workspace_url: http://www.example.com/api/workspaces/1
                  - id: 2
                    name: Neptunium
                    colour: "#43a5e4"
                    workspace_id: 2
                    created_at: '2022-11-29T00:16:55.194Z'
                    updated_at: '2022-11-29T00:16:55.194Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/boards/2
                    workspace_url: http://www.example.com/api/workspaces/2
                  - id: 3
                    name: Cerium
                    colour: "#e1c398"
                    workspace_id: 3
                    created_at: '2022-11-29T00:16:55.196Z'
                    updated_at: '2022-11-29T00:16:55.196Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/boards/3
                    workspace_url: http://www.example.com/api/workspaces/3
                  - id: 4
                    name: Indium
                    colour: "#006cb6"
                    workspace_id: 4
                    created_at: '2022-11-29T00:16:55.198Z'
                    updated_at: '2022-11-29T00:16:55.198Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/boards/4
                    workspace_url: http://www.example.com/api/workspaces/4
                  - id: 5
                    name: Hafnium
                    colour: "#7e1950"
                    workspace_id: 5
                    created_at: '2022-11-29T00:16:55.200Z'
                    updated_at: '2022-11-29T00:16:55.200Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/boards/5
                    workspace_url: http://www.example.com/api/workspaces/5
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/board_response"
    post:
      summary: create board
      tags:
      - Boards
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 6
                    name: New Board
                    colour:
                    workspace_id: 6
                    created_at: '2022-11-29T00:16:55.272Z'
                    updated_at: '2022-11-29T00:16:55.272Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/boards/6
                    workspace_url: http://www.example.com/api/workspaces/6
              schema:
                "$ref": "#/components/schemas/board_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/board_request"
  "/api/boards/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show board
      tags:
      - Boards
      parameters:
      - name: tasks
        in: query
        type: string
        schema:
          "$ref": "#/components/schemas/include_associated_enum"
        required: false
      - name: lists
        in: query
        type: string
        schema:
          "$ref": "#/components/schemas/include_associated_enum"
        required: false
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful with `lists=all`:
                  summary: successful with `lists=all`
                  value:
                    id: 7
                    name: Manganese
                    colour: "#e65d6b"
                    workspace_id: 7
                    created_at: '2022-11-29T00:16:55.284Z'
                    updated_at: '2022-11-29T00:16:55.284Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/boards/7
                    workspace_url: http://www.example.com/api/workspaces/7
                    lists:
                    - id: 1
                      name: burgundy
                      pos: 65536.0
                      visible: false
                      deleted_at: '2022-11-29T00:16:55.304Z'
                      board_id: 7
                      created_at: '2022-11-29T00:16:55.298Z'
                      updated_at: '2022-11-29T00:16:55.300Z'
                      custom_data: {}
                      url: http://www.example.com/api/lists/1
                      board_url: http://www.example.com/api/boards/7
                    - id: 2
                      name: grey
                      pos: 65536.0
                      visible: false
                      deleted_at:
                      board_id: 7
                      created_at: '2022-11-29T00:16:55.308Z'
                      updated_at: '2022-11-29T00:16:55.309Z'
                      custom_data: {}
                      url: http://www.example.com/api/lists/2
                      board_url: http://www.example.com/api/boards/7
                successful with `lists=visible`:
                  summary: successful with `lists=visible`
                  value:
                    id: 10
                    name: Curium
                    colour: "#a75151"
                    workspace_id: 10
                    created_at: '2022-11-29T00:16:55.338Z'
                    updated_at: '2022-11-29T00:16:55.338Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/boards/10
                    workspace_url: http://www.example.com/api/workspaces/10
                    lists: []
                successful with `lists=archived`:
                  summary: successful with `lists=archived`
                  value:
                    id: 12
                    name: Vanadium
                    colour: "#6270ab"
                    workspace_id: 12
                    created_at: '2022-11-29T00:16:55.369Z'
                    updated_at: '2022-11-29T00:16:55.369Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/boards/12
                    workspace_url: http://www.example.com/api/workspaces/12
                    lists:
                    - id: 4
                      name: mauve
                      pos: 65536.0
                      visible: false
                      deleted_at: '2022-11-29T00:16:55.376Z'
                      board_id: 12
                      created_at: '2022-11-29T00:16:55.373Z'
                      updated_at: '2022-11-29T00:16:55.375Z'
                      custom_data: {}
                      url: http://www.example.com/api/lists/4
                      board_url: http://www.example.com/api/boards/12
                    - id: 5
                      name: maroon
                      pos: 65536.0
                      visible: false
                      deleted_at: '2022-11-29T00:16:55.383Z'
                      board_id: 12
                      created_at: '2022-11-29T00:16:55.380Z'
                      updated_at: '2022-11-29T00:16:55.382Z'
                      custom_data: {}
                      url: http://www.example.com/api/lists/5
                      board_url: http://www.example.com/api/boards/12
                successful:
                  summary: successful
                  value:
                    id: 15
                    name: Argon
                    colour: "#fe8896"
                    workspace_id: 15
                    created_at: '2022-11-29T00:16:55.410Z'
                    updated_at: '2022-11-29T00:16:55.410Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/boards/15
                    workspace_url: http://www.example.com/api/workspaces/15
              schema:
                "$ref": "#/components/schemas/board_response"
    put:
      summary: update board
      tags:
      - Boards
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 16
                    name: New Name
                    colour: "#bf864f"
                    workspace_id: 16
                    created_at: '2022-11-29T00:16:55.434Z'
                    updated_at: '2022-11-29T00:16:55.448Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/boards/16
                    workspace_url: http://www.example.com/api/workspaces/16
              schema:
                "$ref": "#/components/schemas/board_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/board_request"
    delete:
      summary: delete board
      tags:
      - Boards
      responses:
        '204':
          description: successful
  "/api/boards/{id}/user_tasks":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: list current user tasks including board, lists, tags, users and author
      tags:
      - Boards
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 18
                    name: Chromium
                    colour: "#092886"
                    workspace_id: 18
                    created_at: '2022-11-29T00:16:55.484Z'
                    updated_at: '2022-11-29T00:16:55.484Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/boards/18
                    workspace_url: http://www.example.com/api/workspaces/18
                    lists: []
              schema:
                "$ref": "#/components/schemas/board_response"
  "/api/boards/recently_viewed":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: list current user recently viewed boards (max 6)
      tags:
      - Boards
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value: []
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/board_response"
  "/api/tasks/{id}/comments":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Task id
      required: true
      schema:
        type: string
    get:
      summary: List task's comments
      tags:
      - Comments
      parameters:
      - name: with_author
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful with `with_author=true`:
                  summary: successful with `with_author=true`
                  value:
                  - id: 5
                    body: |-
                      ### Corrupti
                      Est corporis excepturi. Id iusto sed. Quo veritatis sunt.
                      #### Laboriosam
                      Voluptas dolores qui. Culpa quisquam maiores. Voluptates velit culpa.
                      `Eum.`
                    deleted_at:
                    author_id: 22
                    task_id: 2
                    created_at: '2022-11-29T00:16:55.640Z'
                    updated_at: '2022-11-29T00:16:55.640Z'
                    url: http://www.example.com/api/comments/5
                    author:
                      id: 22
                      name: Kandace Waters
                      avatar_url: https://www.gravatar.com/avatar/0789f3f9652f75bc7e9d12ab5da37415
                      role: guest
                      url: http://www.example.com/api/users/22
                      email: kandace_waters.1669681015@example.com
                      created_at: '2022-11-29T00:16:55.621Z'
                      updated_at: '2022-11-29T00:16:55.621Z'
                      custom_data: {}
                  - id: 4
                    body: |-
                      #### Qui
                      Consequatur repudiandae qui. Consequuntur veniam placeat. Animi delectus quia.
                      ## Molestiae
                    deleted_at:
                    author_id: 22
                    task_id: 2
                    created_at: '2022-11-29T00:16:55.638Z'
                    updated_at: '2022-11-29T00:16:55.638Z'
                    url: http://www.example.com/api/comments/4
                    author:
                      id: 22
                      name: Kandace Waters
                      avatar_url: https://www.gravatar.com/avatar/0789f3f9652f75bc7e9d12ab5da37415
                      role: guest
                      url: http://www.example.com/api/users/22
                      email: kandace_waters.1669681015@example.com
                      created_at: '2022-11-29T00:16:55.621Z'
                      updated_at: '2022-11-29T00:16:55.621Z'
                      custom_data: {}
                  - id: 3
                    body: |-
                      ##### Nam
                      Porro asperiores voluptatibus.
                      `Qui.`
                    deleted_at:
                    author_id: 22
                    task_id: 2
                    created_at: '2022-11-29T00:16:55.636Z'
                    updated_at: '2022-11-29T00:16:55.636Z'
                    url: http://www.example.com/api/comments/3
                    author:
                      id: 22
                      name: Kandace Waters
                      avatar_url: https://www.gravatar.com/avatar/0789f3f9652f75bc7e9d12ab5da37415
                      role: guest
                      url: http://www.example.com/api/users/22
                      email: kandace_waters.1669681015@example.com
                      created_at: '2022-11-29T00:16:55.621Z'
                      updated_at: '2022-11-29T00:16:55.621Z'
                      custom_data: {}
                  - id: 2
                    body: "#### Temporibus\nLaborum voluptatem quam. Et adipisci exercitationem.\n0.
                      Aut. \n1. Adipisci. \n2. Esse. \n"
                    deleted_at:
                    author_id: 22
                    task_id: 2
                    created_at: '2022-11-29T00:16:55.634Z'
                    updated_at: '2022-11-29T00:16:55.634Z'
                    url: http://www.example.com/api/comments/2
                    author:
                      id: 22
                      name: Kandace Waters
                      avatar_url: https://www.gravatar.com/avatar/0789f3f9652f75bc7e9d12ab5da37415
                      role: guest
                      url: http://www.example.com/api/users/22
                      email: kandace_waters.1669681015@example.com
                      created_at: '2022-11-29T00:16:55.621Z'
                      updated_at: '2022-11-29T00:16:55.621Z'
                      custom_data: {}
                  - id: 1
                    body: |-
                      ###### Earum
                      Vel molestias error.
                      nemo | enim | iure
                      ---- | ---- | ----
                      illum | molestias | in
                      nam | qui | ullam
                    deleted_at:
                    author_id: 22
                    task_id: 2
                    created_at: '2022-11-29T00:16:55.632Z'
                    updated_at: '2022-11-29T00:16:55.632Z'
                    url: http://www.example.com/api/comments/1
                    author:
                      id: 22
                      name: Kandace Waters
                      avatar_url: https://www.gravatar.com/avatar/0789f3f9652f75bc7e9d12ab5da37415
                      role: guest
                      url: http://www.example.com/api/users/22
                      email: kandace_waters.1669681015@example.com
                      created_at: '2022-11-29T00:16:55.621Z'
                      updated_at: '2022-11-29T00:16:55.621Z'
                      custom_data: {}
                successful:
                  summary: successful
                  value:
                  - id: 10
                    body: |-
                      ###### Quia
                      Qui cum rerum. Iure sint ut.
                      ```ruby
                      Fugiat.
                      ```
                    deleted_at:
                    author_id: 25
                    task_id: 3
                    created_at: '2022-11-29T00:16:55.685Z'
                    updated_at: '2022-11-29T00:16:55.685Z'
                    url: http://www.example.com/api/comments/10
                  - id: 9
                    body: |-
                      #### Distinctio
                      Suscipit blanditiis aut. Enim sint dolore. Voluptates ipsam non.
                      Voluptatem molestiae _consequuntur._ Omnis est culpa. Alias eveniet odit.
                    deleted_at:
                    author_id: 25
                    task_id: 3
                    created_at: '2022-11-29T00:16:55.684Z'
                    updated_at: '2022-11-29T00:16:55.684Z'
                    url: http://www.example.com/api/comments/9
                  - id: 8
                    body: |-
                      #### Soluta
                      Aut voluptatem doloribus. Nemo nostrum ut.
                      # Facilis
                      Quibusdam et vel. Quam ut sapiente. Enim aut dolor.
                      `Est.`
                    deleted_at:
                    author_id: 25
                    task_id: 3
                    created_at: '2022-11-29T00:16:55.682Z'
                    updated_at: '2022-11-29T00:16:55.682Z'
                    url: http://www.example.com/api/comments/8
                  - id: 7
                    body: |-
                      ### Fuga
                      Laudantium quos esse. Hic aut unde.
                      `Recusandae.`
                    deleted_at:
                    author_id: 25
                    task_id: 3
                    created_at: '2022-11-29T00:16:55.680Z'
                    updated_at: '2022-11-29T00:16:55.680Z'
                    url: http://www.example.com/api/comments/7
                  - id: 6
                    body: |-
                      # Quas
                      Quia tempora est.
                      accusantium | ut | molestiae
                      ---- | ---- | ----
                      eos | enim | ratione
                      ipsum | id | debitis
                    deleted_at:
                    author_id: 25
                    task_id: 3
                    created_at: '2022-11-29T00:16:55.679Z'
                    updated_at: '2022-11-29T00:16:55.679Z'
                    url: http://www.example.com/api/comments/6
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/comment_response"
  "/api/lists":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: List lists
      tags:
      - Lists
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - id: 9
                    name: emerald
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 28
                    created_at: '2022-11-29T00:16:55.706Z'
                    updated_at: '2022-11-29T00:16:55.706Z'
                    custom_data: {}
                    url: http://www.example.com/api/lists/9
                    board_url: http://www.example.com/api/boards/28
                  - id: 10
                    name: viridian
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 29
                    created_at: '2022-11-29T00:16:55.711Z'
                    updated_at: '2022-11-29T00:16:55.711Z'
                    custom_data: {}
                    url: http://www.example.com/api/lists/10
                    board_url: http://www.example.com/api/boards/29
                  - id: 11
                    name: coffee
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 30
                    created_at: '2022-11-29T00:16:55.714Z'
                    updated_at: '2022-11-29T00:16:55.714Z'
                    custom_data: {}
                    url: http://www.example.com/api/lists/11
                    board_url: http://www.example.com/api/boards/30
                  - id: 12
                    name: coral
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 31
                    created_at: '2022-11-29T00:16:55.718Z'
                    updated_at: '2022-11-29T00:16:55.718Z'
                    custom_data: {}
                    url: http://www.example.com/api/lists/12
                    board_url: http://www.example.com/api/boards/31
                  - id: 13
                    name: aquamarine
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 32
                    created_at: '2022-11-29T00:16:55.722Z'
                    updated_at: '2022-11-29T00:16:55.722Z'
                    custom_data: {}
                    url: http://www.example.com/api/lists/13
                    board_url: http://www.example.com/api/boards/32
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/list_response"
    post:
      summary: Create List
      tags:
      - Lists
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 14
                    name: New List
                    pos: 1212.0
                    visible: false
                    deleted_at:
                    board_id: 33
                    created_at: '2022-11-29T00:16:55.760Z'
                    updated_at: '2022-11-29T00:16:55.760Z'
                    custom_data: {}
                    url: http://www.example.com/api/lists/14
                    board_url: http://www.example.com/api/boards/33
              schema:
                "$ref": "#/components/schemas/list_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/list_request"
  "/api/lists/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show List
      tags:
      - Lists
      parameters:
      - name: tasks
        in: query
        type: string
        schema:
          "$ref": "#/components/schemas/include_associated_enum"
        required: false
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful with `tasks=all`:
                  summary: successful with `tasks=all`
                  value:
                    id: 15
                    name: ivory
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 34
                    created_at: '2022-11-29T00:16:55.769Z'
                    updated_at: '2022-11-29T00:16:55.769Z'
                    custom_data: {}
                    url: http://www.example.com/api/lists/15
                    board_url: http://www.example.com/api/boards/34
                    tasks:
                    - id: 4
                      name: Slippery When Wet
                      pos: 65536.0
                      priority: high
                      spent_time: 0
                      points: 4
                      due_time: '2022-12-06T00:16:55.771Z'
                      list_id: 15
                      deleted_at:
                      url: http://www.example.com/api/tasks/4
                      list_url: http://www.example.com/api/lists/15
                      users:
                      - id: 30
                        name: Conception Stark
                        avatar_url: https://www.gravatar.com/avatar/e7fe7c00242fc2cc0dae05de3d13cc3f
                        role: manager
                        url: http://www.example.com/api/users/30
                      - id: 31
                        name: Vance Goldner
                        avatar_url: https://www.gravatar.com/avatar/ca18af8a69245bd23f8f617012528129
                        role: developer
                        url: http://www.example.com/api/users/31
                      tags:
                      - id: 2
                        name: Administration
                        colour: "#248b13"
                        url: http://www.example.com/api/tags/2
                      - id: 3
                        name: Government
                        colour: "#13c99c"
                        url: http://www.example.com/api/tags/3
                    - id: 5
                      name: Jagged Little Pill
                      pos: 65536.0
                      priority: low
                      spent_time: 0
                      points: 5
                      due_time: '2022-12-06T00:16:55.802Z'
                      list_id: 15
                      deleted_at: '2022-11-29T00:16:55.814Z'
                      url: http://www.example.com/api/tasks/5
                      list_url: http://www.example.com/api/lists/15
                      users: []
                      tags: []
                successful with `tasks=visible`:
                  summary: successful with `tasks=visible`
                  value:
                    id: 18
                    name: amaranth
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 39
                    created_at: '2022-11-29T00:16:55.845Z'
                    updated_at: '2022-11-29T00:16:55.845Z'
                    custom_data: {}
                    url: http://www.example.com/api/lists/18
                    board_url: http://www.example.com/api/boards/39
                    tasks:
                    - id: 6
                      name: No Jacket Required
                      pos: 65536.0
                      priority: very_low
                      spent_time: 0
                      points: 5
                      due_time: '2022-12-06T00:16:55.847Z'
                      list_id: 18
                      deleted_at:
                      url: http://www.example.com/api/tasks/6
                      list_url: http://www.example.com/api/lists/18
                      users:
                      - id: 35
                        name: Hoyt Waters
                        avatar_url: https://www.gravatar.com/avatar/a976449d10bda1593fd2b35e56b03118
                        role: regular
                        url: http://www.example.com/api/users/35
                      - id: 36
                        name: The Hon. Diedra Lubowitz
                        avatar_url: https://www.gravatar.com/avatar/07328b869b68574b6ce7f0fae3101167
                        role: guest
                        url: http://www.example.com/api/users/36
                      tags:
                      - id: 4
                        name: Banking
                        colour: "#622ade"
                        url: http://www.example.com/api/tags/4
                    - id: 7
                      name: Come On Over
                      pos: 65536.0
                      priority: very_high
                      spent_time: 0
                      points: 2
                      due_time: '2022-12-06T00:16:55.874Z'
                      list_id: 18
                      deleted_at:
                      url: http://www.example.com/api/tasks/7
                      list_url: http://www.example.com/api/lists/18
                      users: []
                      tags: []
                successful with `tasks=archived`:
                  summary: successful with `tasks=archived`
                  value:
                    id: 21
                    name: mauve
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 43
                    created_at: '2022-11-29T00:16:55.912Z'
                    updated_at: '2022-11-29T00:16:55.912Z'
                    custom_data: {}
                    url: http://www.example.com/api/lists/21
                    board_url: http://www.example.com/api/boards/43
                    tasks:
                    - id: 8
                      name: High School Musical
                      pos: 65536.0
                      priority: low
                      spent_time: 0
                      points: 1
                      due_time: '2022-12-06T00:16:55.914Z'
                      list_id: 21
                      deleted_at: '2022-11-29T00:16:55.926Z'
                      url: http://www.example.com/api/tasks/8
                      list_url: http://www.example.com/api/lists/21
                      users: []
                      tags: []
                    - id: 9
                      name: The Joshua Tree
                      pos: 65536.0
                      priority: high
                      spent_time: 0
                      points: 5
                      due_time: '2022-12-06T00:16:55.928Z'
                      list_id: 21
                      deleted_at: '2022-11-29T00:16:55.939Z'
                      url: http://www.example.com/api/tasks/9
                      list_url: http://www.example.com/api/lists/21
                      users:
                      - id: 41
                        name: Burl Conn
                        avatar_url: https://www.gravatar.com/avatar/b3a0dafe5cbc651ac3c3cb3c252a25a6
                        role: regular
                        url: http://www.example.com/api/users/41
                      tags:
                      - id: 5
                        name: Sales
                        colour: "#184d30"
                        url: http://www.example.com/api/tags/5
                successful:
                  summary: successful
                  value:
                    id: 24
                    name: black
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 47
                    created_at: '2022-11-29T00:16:55.982Z'
                    updated_at: '2022-11-29T00:16:55.982Z'
                    custom_data: {}
                    url: http://www.example.com/api/lists/24
                    board_url: http://www.example.com/api/boards/47
              schema:
                "$ref": "#/components/schemas/list_response"
    put:
      summary: Update list
      tags:
      - Lists
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 25
                    name: New Name
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 48
                    created_at: '2022-11-29T00:16:56.004Z'
                    updated_at: '2022-11-29T00:16:56.019Z'
                    custom_data: {}
                    url: http://www.example.com/api/lists/25
                    board_url: http://www.example.com/api/boards/48
              schema:
                "$ref": "#/components/schemas/list_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/list_request"
    delete:
      summary: Delete list
      tags:
      - Lists
      responses:
        '204':
          description: successful
  "/api/script_runs":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: List script runs
      tags:
      - ScriptRuns
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - id: 1
                    script_id: 1
                    input: puts 'Hello world'
                    output: Hello world
                    initiator_id: 48
                    state: running
                    url: http://www.example.com/api/script_runs/1
                  - id: 2
                    script_id: 2
                    input: puts 'Hello world'
                    output: Hello world
                    initiator_id: 50
                    state: running
                    url: http://www.example.com/api/script_runs/2
                  - id: 3
                    script_id: 3
                    input: puts 'Hello world'
                    output: Hello world
                    initiator_id: 52
                    state: running
                    url: http://www.example.com/api/script_runs/3
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/script_run_response"
  "/api/scripts/{id}/script_runs":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Script id
      required: true
      schema:
        type: string
    get:
      summary: List script's script runs
      tags:
      - ScriptRuns
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - id: 4
                    script_id: 4
                    input: puts 'Hello world'
                    output: Hello world
                    initiator_id: 56
                    state: running
                    url: http://www.example.com/api/script_runs/4
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/script_run_response"
  "/api/script_runs/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show script run
      tags:
      - ScriptRuns
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 5
                    script_id: 5
                    input: puts 'Hello world'
                    output: Hello world
                    initiator_id: 60
                    state: running
                    url: http://www.example.com/api/script_runs/5
              schema:
                "$ref": "#/components/schemas/script_run_response"
    put:
      summary: Update script run
      tags:
      - ScriptRuns
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 6
                    script_id: 6
                    input: puts 'Hello world'
                    output: example output
                    initiator_id: 64
                    state: executed
                    url: http://www.example.com/api/script_runs/6
              schema:
                "$ref": "#/components/schemas/script_run_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/script_run_request"
  "/api/script_triggers":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    post:
      summary: Create script trigger
      tags:
      - Script triggers
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 1
                    script_id: 7
                    subject_type: DB::Task
                    subject_id: 10
                    action: destroy
                    url: http://www.example.com/api/script_triggers/1
              schema:
                "$ref": "#/components/schemas/script_trigger_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/script_trigger_request"
  "/api/script_triggers/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show script trigger
      tags:
      - Script triggers
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 2
                    script_id: 8
                    subject_type:
                    subject_id:
                    action: create
                    url: http://www.example.com/api/script_triggers/2
              schema:
                "$ref": "#/components/schemas/script_trigger_response"
    put:
      summary: Update script trigger
      tags:
      - Script triggers
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 3
                    script_id: 9
                    subject_type:
                    subject_id:
                    action: destroy
                    url: http://www.example.com/api/script_triggers/3
              schema:
                "$ref": "#/components/schemas/script_trigger_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/script_trigger_request"
    delete:
      summary: Delete script_trigger
      tags:
      - Script triggers
      responses:
        '204':
          description: successful
  "/api/scripts":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: List scripts
      tags:
      - Scripts
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - id: 11
                    content: puts 'hello world'
                    name: My first Lambdee Script
                    description: Description of the script
                    author_id: 80
                    url: http://www.example.com/api/scripts/11
                  - id: 12
                    content: puts 'hello world'
                    name: My first Lambdee Script
                    description: Description of the script
                    author_id: 81
                    url: http://www.example.com/api/scripts/12
                  - id: 13
                    content: puts 'hello world'
                    name: My first Lambdee Script
                    description: Description of the script
                    author_id: 82
                    url: http://www.example.com/api/scripts/13
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/script_response"
    post:
      summary: Create Script
      tags:
      - Scripts
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 14
                    content: puts 'Hello world!'
                    name: New Script
                    description: What script does
                    author_id: 85
                    url: http://www.example.com/api/scripts/14
                    script_triggers:
                    - id: 5
                      script_id: 14
                      subject_type:
                      subject_id:
                      action: create
                      url: http://www.example.com/api/script_triggers/5
                    - id: 6
                      script_id: 14
                      subject_type: DB::Task
                      subject_id:
                      action: update
                      url: http://www.example.com/api/script_triggers/6
                    - id: 7
                      script_id: 14
                      subject_type: DB::Task
                      subject_id: 11
                      action: destroy
                      url: http://www.example.com/api/script_triggers/7
              schema:
                "$ref": "#/components/schemas/script_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/script_request"
  "/api/scripts/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show Script
      tags:
      - Scripts
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 15
                    content: puts 'hello world'
                    name: My first Lambdee Script
                    description: Description of the script
                    author_id: 88
                    url: http://www.example.com/api/scripts/15
                    script_triggers: []
              schema:
                "$ref": "#/components/schemas/script_response"
    put:
      summary: Update Script
      tags:
      - Scripts
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 16
                    content: puts 'hello world'
                    name: New Name
                    description: Description of the script
                    author_id: 91
                    url: http://www.example.com/api/scripts/16
                    script_triggers:
                    - id: 9
                      script_id: 16
                      subject_type:
                      subject_id:
                      action: create
                      url: http://www.example.com/api/script_triggers/9
              schema:
                "$ref": "#/components/schemas/script_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/script_request"
    delete:
      summary: Delete script
      tags:
      - Scripts
      responses:
        '204':
          description: successful
  "/api/boards/{id}/sprints":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Board id
      required: true
      schema:
        type: string
    get:
      summary: List board's sprints
      tags:
      - Sprints
      parameters:
      - name: page
        in: query
        required: false
        description: Decides which result page should be returned.
        example: 2
        schema:
          type: integer
      - name: per
        in: query
        required: false
        description: Decides how many entities should be returned per one page. **Works
          only, when `page` param is given.**
        example: 2
        schema:
          type: integer
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    sprints:
                    - id: 1
                      board_id: 52
                      name: Orange
                      description: Voluptate dolore non. Eligendi sint dolores. Maiores
                        necessitatibus voluptas.
                      started_at: '2022-11-29T00:16:57.653Z'
                      expected_end_at: '2022-12-06T00:16:57.653Z'
                      ended_at:
                      final_list_name: Done
                      custom_data: {}
                      url: http://www.example.com/api/sprints/1
                    - id: 2
                      board_id: 52
                      name: Albany
                      description: Vel sequi recusandae. Qui temporibus sint. Eligendi
                        non in.
                      started_at: '2022-11-29T00:16:57.656Z'
                      expected_end_at: '2022-12-06T00:16:57.656Z'
                      ended_at:
                      final_list_name: Done
                      custom_data: {}
                      url: http://www.example.com/api/sprints/2
                    - id: 3
                      board_id: 52
                      name: Traralgon – Morwell
                      description: In quia sint. Voluptatem saepe est. Sit aut sunt.
                      started_at: '2022-11-29T00:16:57.659Z'
                      expected_end_at: '2022-12-06T00:16:57.659Z'
                      ended_at:
                      final_list_name: Done
                      custom_data: {}
                      url: http://www.example.com/api/sprints/3
              schema:
                "$ref": "#/components/schemas/sprint_pages_response"
  "/api/sprints":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: List sprints
      tags:
      - Sprints
      parameters:
      - name: page
        in: query
        required: false
        description: Decides which result page should be returned.
        example: 2
        schema:
          type: integer
      - name: per
        in: query
        required: false
        description: Decides how many entities should be returned per one page. **Works
          only, when `page` param is given.**
        example: 2
        schema:
          type: integer
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    sprints: []
              schema:
                "$ref": "#/components/schemas/sprint_pages_response"
    post:
      summary: Create sprint
      tags:
      - Sprints
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 4
                    board_id: 53
                    name: New Sprint
                    description: Example description of new sprint
                    started_at: '2022-11-29T00:16:57.722Z'
                    expected_end_at: '2025-12-11T23:00:00.000Z'
                    ended_at:
                    final_list_name: Done
                    custom_data: {}
                    url: http://www.example.com/api/sprints/4
              schema:
                "$ref": "#/components/schemas/sprint_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/sprint_request"
  "/api/sprints/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    - name: tasks
      in: query
      example: all
      required: false
      schema:
        type: string
    get:
      summary: Show Sprint
      tags:
      - Sprints
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful with `tasks=all`:
                  summary: successful with `tasks=all`
                  value:
                    id: 5
                    board_id: 54
                    name: Hobart
                    description: Debitis quisquam qui. Dolorem facere qui. Est non
                      asperiores.
                    started_at: '2022-11-29T00:16:57.732Z'
                    expected_end_at: '2022-12-06T00:16:57.732Z'
                    ended_at:
                    final_list_name: Done
                    custom_data: {}
                    url: http://www.example.com/api/sprints/5
                    tasks:
                    - id: 12
                      name: The Joshua Tree
                      priority: very_high
                      spent_time: 0
                      points: 1
                      added_at: '2022-11-29T00:16:57.754Z'
                      completed_at:
                      start_state: To Do
                      state: Doing
                successful:
                  summary: successful
                  value:
                    id: 6
                    board_id: 56
                    name: Newcastle
                    description: Nemo voluptatibus facere. Totam est suscipit. Est
                      corporis aliquid.
                    started_at: '2022-11-29T00:16:57.778Z'
                    expected_end_at: '2022-12-06T00:16:57.778Z'
                    ended_at:
                    final_list_name: Done
                    custom_data: {}
                    url: http://www.example.com/api/sprints/6
              schema:
                "$ref": "#/components/schemas/sprint_response"
    put:
      summary: Update Sprint
      tags:
      - Sprints
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 7
                    board_id: 57
                    name: New Name
                    description: Libero et non. Laudantium non blanditiis. Minus quis
                      libero.
                    started_at: '2022-11-29T00:16:57.804Z'
                    expected_end_at: '2022-12-06T00:16:57.804Z'
                    ended_at:
                    final_list_name: Done
                    custom_data: {}
                    url: http://www.example.com/api/sprints/7
              schema:
                "$ref": "#/components/schemas/sprint_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/sprint_request"
    delete:
      summary: Delete sprint
      tags:
      - Sprints
      responses:
        '204':
          description: successful
  "/api/sprints/{id}/end":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    put:
      summary: End sprint
      tags:
      - Sprints
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 9
                    board_id: 59
                    name: Tamworth
                    description: Earum dolores occaecati. Consequuntur deleniti vero.
                      Dignissimos voluptatem ut.
                    started_at: '2022-11-29T00:16:57.862Z'
                    expected_end_at: '2022-12-06T00:16:57.862Z'
                    ended_at: '2022-11-29T00:16:57.882Z'
                    final_list_name: Done
                    custom_data: {}
                    url: http://www.example.com/api/sprints/9
              schema:
                "$ref": "#/components/schemas/sprint_response"
  "/api/boards/{id}/active_sprint":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show active sprint
      tags:
      - Sprints
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 10
                    board_id: 60
                    name: Nowra – Bomaderry
                    description: Perspiciatis placeat quidem. Aut recusandae tempora.
                      Aut aspernatur illo.
                    started_at: '2022-11-29T00:16:57.891Z'
                    expected_end_at: '2022-12-06T00:16:57.891Z'
                    ended_at:
                    final_list_name: Done
                    custom_data: {}
                    url: http://www.example.com/api/sprints/10
              schema:
                "$ref": "#/components/schemas/sprint_response"
  "/api/sprints/{id}/burn_up_chart":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show data for burn up chart
      tags:
      - Sprints
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - name: Work Scope
                    data:
                      '2022-11-29': 0
                      '2022-12-06': 0
                  - name: Completed Work
                    data:
                      '2022-11-29': 0
                      '2022-12-06':
  "/api/boards/{id}/tags":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Board id
      required: true
      schema:
        type: string
    get:
      summary: List board's tags
      tags:
      - Tags
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - id: 6
                    name: Design
                    colour: "#314f18"
                    url: http://www.example.com/api/tags/6
                    board_id: 62
                    created_at: '2022-11-29T00:16:57.945Z'
                    updated_at: '2022-11-29T00:16:57.945Z'
                    custom_data: {}
                  - id: 7
                    name: Manufacturing
                    colour: "#d98ed0"
                    url: http://www.example.com/api/tags/7
                    board_id: 62
                    created_at: '2022-11-29T00:16:57.946Z'
                    updated_at: '2022-11-29T00:16:57.946Z'
                    custom_data: {}
                  - id: 8
                    name: Marketing
                    colour: "#6105c6"
                    url: http://www.example.com/api/tags/8
                    board_id: 62
                    created_at: '2022-11-29T00:16:57.947Z'
                    updated_at: '2022-11-29T00:16:57.947Z'
                    custom_data: {}
                  - id: 9
                    name: Legal
                    colour: "#77a03b"
                    url: http://www.example.com/api/tags/9
                    board_id: 62
                    created_at: '2022-11-29T00:16:57.949Z'
                    updated_at: '2022-11-29T00:16:57.949Z'
                    custom_data: {}
                  - id: 10
                    name: Administration
                    colour: "#b3afb9"
                    url: http://www.example.com/api/tags/10
                    board_id: 62
                    created_at: '2022-11-29T00:16:57.950Z'
                    updated_at: '2022-11-29T00:16:57.950Z'
                    custom_data: {}
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/tag_response"
    post:
      summary: Create tag
      tags:
      - Tags
      parameters:
      - name: id
        in: path
        description: Board id
        required: true
        schema:
          type: string
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 11
                    name: New Tag
                    colour: "#fff000"
                    url: http://www.example.com/api/tags/11
                    board_id: 63
                    created_at: '2022-11-29T00:16:57.989Z'
                    updated_at: '2022-11-29T00:16:57.989Z'
                    custom_data: {}
              schema:
                "$ref": "#/components/schemas/tag_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/tag_request"
  "/api/tags":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    post:
      summary: Create tag
      tags:
      - Tags
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 12
                    name: New Tag
                    colour: "#fff000"
                    url: http://www.example.com/api/tags/12
                    board_id: 64
                    created_at: '2022-11-29T00:16:58.024Z'
                    updated_at: '2022-11-29T00:16:58.024Z'
                    custom_data: {}
              schema:
                "$ref": "#/components/schemas/tag_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/tag_request"
  "/api/tasks/{id}/tags":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Task id
      required: true
      schema:
        type: string
    get:
      summary: List task's tags
      tags:
      - Tags
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - id: 13
                    name: Manufacturing
                    colour: "#0f85dd"
                    url: http://www.example.com/api/tags/13
                    board_id: 65
                    created_at: '2022-11-29T00:16:58.045Z'
                    updated_at: '2022-11-29T00:16:58.045Z'
                    custom_data: {}
                  - id: 14
                    name: Education
                    colour: "#bca560"
                    url: http://www.example.com/api/tags/14
                    board_id: 65
                    created_at: '2022-11-29T00:16:58.048Z'
                    updated_at: '2022-11-29T00:16:58.048Z'
                    custom_data: {}
                  - id: 15
                    name: Construction
                    colour: "#549a89"
                    url: http://www.example.com/api/tags/15
                    board_id: 65
                    created_at: '2022-11-29T00:16:58.050Z'
                    updated_at: '2022-11-29T00:16:58.050Z'
                    custom_data: {}
                  - id: 16
                    name: Accounting
                    colour: "#20bc71"
                    url: http://www.example.com/api/tags/16
                    board_id: 65
                    created_at: '2022-11-29T00:16:58.053Z'
                    updated_at: '2022-11-29T00:16:58.053Z'
                    custom_data: {}
                  - id: 17
                    name: IT
                    colour: "#bc63d2"
                    url: http://www.example.com/api/tags/17
                    board_id: 65
                    created_at: '2022-11-29T00:16:58.055Z'
                    updated_at: '2022-11-29T00:16:58.055Z'
                    custom_data: {}
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/tag_response"
    post:
      summary: Create tag (associated with given task and task's board)
      tags:
      - Tags
      parameters:
      - name: id
        in: path
        description: Task id
        required: true
        schema:
          type: string
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 18
                    name: New Tag
                    colour: "#fff000"
                    url: http://www.example.com/api/tags/18
                    board_id: 66
                    created_at: '2022-11-29T00:16:58.104Z'
                    updated_at: '2022-11-29T00:16:58.104Z'
                    custom_data: {}
              schema:
                "$ref": "#/components/schemas/tag_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/tag_request"
  "/api/tags/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show Tags
      tags:
      - Tags
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 19
                    name: Manufacturing
                    colour: "#936c83"
                    url: http://www.example.com/api/tags/19
                    board_id: 67
                    created_at: '2022-11-29T00:16:58.119Z'
                    updated_at: '2022-11-29T00:16:58.119Z'
                    custom_data: {}
              schema:
                "$ref": "#/components/schemas/tag_response"
    put:
      summary: Update Tag
      tags:
      - Tags
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 20
                    name: New Name
                    colour: "#223c08"
                    url: http://www.example.com/api/tags/20
                    board_id: 68
                    created_at: '2022-11-29T00:16:58.143Z'
                    updated_at: '2022-11-29T00:16:58.158Z'
                    custom_data: {}
              schema:
                "$ref": "#/components/schemas/tag_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/tag_request"
    delete:
      summary: Delete tag
      tags:
      - Tags
      responses:
        '204':
          description: successful
  "/api/tasks":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: List tasks
      tags:
      - Tasks
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - id: 16
                    name: '21'
                    pos: 65536.0
                    priority: low
                    spent_time: 0
                    points: 1
                    due_time: '2022-12-06T00:16:58.187Z'
                    list_id: 33
                    deleted_at:
                    url: http://www.example.com/api/tasks/16
                    list_url: http://www.example.com/api/lists/33
                    description: |-
                      ###### Laborum
                      Suscipit dolor dolores. Facilis qui laudantium. Voluptatem nulla quas. Est earum deleniti. Quos consectetur id. Repellat atque fugiat.
                      Et laborum cum. *Placeat* nihil reiciendis. Repellendus laboriosam est.
                    created_at: '2022-11-29T00:16:58.196Z'
                    updated_at: '2022-11-29T00:16:58.196Z'
                  - id: 17
                    name: Happy Nation
                    pos: 65536.0
                    priority: medium
                    spent_time: 0
                    points: 1
                    due_time: '2022-12-06T00:16:58.198Z'
                    list_id: 34
                    deleted_at:
                    url: http://www.example.com/api/tasks/17
                    list_url: http://www.example.com/api/lists/34
                    description: "## Et\nMollitia sit consequatur. Eos cupiditate
                      libero. Eveniet perferendis iste. Ipsam corporis tempore.\n*
                      Minus. \n* Illo. \n"
                    created_at: '2022-11-29T00:16:58.210Z'
                    updated_at: '2022-11-29T00:16:58.210Z'
                  - id: 18
                    name: The Eminem Show
                    pos: 65536.0
                    priority: low
                    spent_time: 0
                    points: 2
                    due_time: '2022-12-06T00:16:58.212Z'
                    list_id: 35
                    deleted_at:
                    url: http://www.example.com/api/tasks/18
                    list_url: http://www.example.com/api/lists/35
                    description: |-
                      ###### Ut
                      Eaque quis consequatur. Voluptas nostrum et. Repellat sequi sed. Necessitatibus error rem.
                      ```ruby
                      Est.
                      ```
                    created_at: '2022-11-29T00:16:58.219Z'
                    updated_at: '2022-11-29T00:16:58.219Z'
                  - id: 19
                    name: I Dreamed a Dream
                    pos: 65536.0
                    priority: low
                    spent_time: 0
                    points: 5
                    due_time: '2022-12-06T00:16:58.222Z'
                    list_id: 36
                    deleted_at:
                    url: http://www.example.com/api/tasks/19
                    list_url: http://www.example.com/api/lists/36
                    description: "#### Labore\nUt et amet. Voluptatem architecto eos.
                      Dignissimos doloribus consectetur. Ut nostrum vel. Enim sed
                      rerum. Autem qui nulla.\n0. Fuga. \n1. Dolor. \n2. Laboriosam.
                      \n3. Voluptates. \n4. Qui. \n5. Perferendis. \n"
                    created_at: '2022-11-29T00:16:58.229Z'
                    updated_at: '2022-11-29T00:16:58.229Z'
                  - id: 20
                    name: Dangerous
                    pos: 65536.0
                    priority: high
                    spent_time: 0
                    points: 3
                    due_time: '2022-12-06T00:16:58.233Z'
                    list_id: 37
                    deleted_at:
                    url: http://www.example.com/api/tasks/20
                    list_url: http://www.example.com/api/lists/37
                    description: "#### Voluptatem\nNon consectetur autem. Nam dolorem
                      illum. Dolores aut et. Voluptatibus non et. Voluptatem cum itaque.\n##
                      Temporibus\nRepudiandae et dolorem. Ea porro quis. Veniam a
                      doloremque.\n* Vel. \n* Nesciunt. \n* Ut. \n* Est. \n* Saepe.
                      \n* Magni. \n* Velit. \n* Accusamus. \n* Voluptatem. \n* Est.
                      \n"
                    created_at: '2022-11-29T00:16:58.241Z'
                    updated_at: '2022-11-29T00:16:58.241Z'
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/task_response"
    post:
      summary: Create Task
      tags:
      - Tasks
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 21
                    name: New Task
                    pos: 65536.0
                    priority:
                    spent_time: 0
                    points:
                    due_time:
                    list_id: 38
                    deleted_at:
                    url: http://www.example.com/api/tasks/21
                    list_url: http://www.example.com/api/lists/38
                    description:
                    created_at: '2022-11-29T00:16:58.285Z'
                    updated_at: '2022-11-29T00:16:58.285Z'
              schema:
                "$ref": "#/components/schemas/task_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/task_request"
  "/api/tasks/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Task id
      required: true
      schema:
        type: string
    get:
      summary: Show Taks
      parameters:
      - name: include_associations
        in: query
        required: false
        description: If true, extended object with all associations is returned.
        schema:
          type: string
      tags:
      - Tasks
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful with `include_associations=true`:
                  summary: successful with `include_associations=true`
                  value:
                    id: 22
                    name: No Jacket Required
                    pos: 65536.0
                    priority: very_high
                    spent_time: 0
                    points: 4
                    due_time: '2022-12-06T00:16:58.292Z'
                    list_id: 39
                    deleted_at:
                    url: http://www.example.com/api/tasks/22
                    list_url: http://www.example.com/api/lists/39
                    description: |-
                      ### Est
                      Et maiores explicabo. Fugiat mollitia blanditiis. Incidunt illum est.
                      quasi | ut | sit
                      ---- | ---- | ----
                      deserunt | pariatur | dolorem
                      et | consectetur | officiis
                    created_at: '2022-11-29T00:16:58.301Z'
                    updated_at: '2022-11-29T00:16:58.301Z'
                    list:
                      id: 39
                      name: yellow
                      pos: 65536.0
                      visible: false
                      deleted_at:
                      board_id: 76
                      created_at: '2022-11-29T00:16:58.295Z'
                      updated_at: '2022-11-29T00:16:58.295Z'
                      custom_data: {}
                      url: http://www.example.com/api/lists/39
                      board_url: http://www.example.com/api/boards/76
                    author:
                      id: 144
                      name: Bella Cremin
                      avatar_url: https://www.gravatar.com/avatar/dc76ac0d85162cdd5c53c549568ffd00
                      role: regular
                      url: http://www.example.com/api/users/144
                      email: bella_cremin.1669681018@example.com
                      created_at: '2022-11-29T00:16:58.299Z'
                      updated_at: '2022-11-29T00:16:58.299Z'
                      custom_data: {}
                    users:
                    - id: 145
                      name: Fernanda Yundt
                      avatar_url: https://www.gravatar.com/avatar/1f8fd722533e5d9d3860acd72429b33c
                      role: regular
                      url: http://www.example.com/api/users/145
                      email: fernanda_yundt.1669681018@example.com
                      created_at: '2022-11-29T00:16:58.304Z'
                      updated_at: '2022-11-29T00:16:58.304Z'
                      custom_data: {}
                    - id: 146
                      name: Emile Larson
                      avatar_url: https://www.gravatar.com/avatar/b6ea4f62523215055f2f4cbb3c29f64b
                      role: regular
                      url: http://www.example.com/api/users/146
                      email: emile_larson.1669681018@example.com
                      created_at: '2022-11-29T00:16:58.309Z'
                      updated_at: '2022-11-29T00:16:58.309Z'
                      custom_data: {}
                    tags:
                    - id: 22
                      name: Community-Services
                      colour: "#87a66b"
                      url: http://www.example.com/api/tags/22
                      board_id: 77
                      created_at: '2022-11-29T00:16:58.314Z'
                      updated_at: '2022-11-29T00:16:58.314Z'
                      custom_data: {}
                    - id: 23
                      name: Accounting
                      colour: "#17f022"
                      url: http://www.example.com/api/tags/23
                      board_id: 78
                      created_at: '2022-11-29T00:16:58.318Z'
                      updated_at: '2022-11-29T00:16:58.318Z'
                      custom_data: {}
                    - id: 24
                      name: Education
                      colour: "#b100d0"
                      url: http://www.example.com/api/tags/24
                      board_id: 79
                      created_at: '2022-11-29T00:16:58.323Z'
                      updated_at: '2022-11-29T00:16:58.323Z'
                      custom_data: {}
                successful:
                  summary: successful
                  value:
                    id: 23
                    name: Appetite for Destruction
                    pos: 65536.0
                    priority: very_low
                    spent_time: 0
                    points: 3
                    due_time: '2022-12-06T00:16:58.347Z'
                    list_id: 40
                    deleted_at:
                    url: http://www.example.com/api/tasks/23
                    list_url: http://www.example.com/api/lists/40
                    description: "# Ad\nLaudantium natus dolorem. Error ullam rerum.
                      Aliquam ipsam est. Magni aut eligendi.\n0. Amet. \n1. Id. \n"
                    created_at: '2022-11-29T00:16:58.356Z'
                    updated_at: '2022-11-29T00:16:58.356Z'
              schema:
                "$ref": "#/components/schemas/task_response"
    put:
      summary: Update Task
      tags:
      - Tasks
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 24
                    name: New Name
                    pos: 65536.0
                    priority: very_low
                    spent_time: 0
                    points: 1
                    due_time: '2022-12-06T00:16:58.375Z'
                    list_id: 41
                    deleted_at:
                    url: http://www.example.com/api/tasks/24
                    list_url: http://www.example.com/api/lists/41
                    description: |-
                      #### Autem
                      Qui itaque eum. Voluptatibus totam et. Error optio ducimus.
                      Ut quo iste. Eveniet est quis. **Eveniet** itaque delectus.
                    created_at: '2022-11-29T00:16:58.384Z'
                    updated_at: '2022-11-29T00:16:58.399Z'
              schema:
                "$ref": "#/components/schemas/task_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/task_request"
    delete:
      summary: Delete Task
      tags:
      - Tasks
      responses:
        '204':
          description: successful
  "/api/tasks/{id}/add_time":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Task id
      required: true
      schema:
        type: string
    put:
      summary: Add time
      tags:
      - Tasks
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 26
                    name: X&Y
                    pos: 65536.0
                    priority: high
                    spent_time: 1200
                    points: 5
                    due_time: '2022-12-06T00:16:58.432Z'
                    list_id: 43
                    deleted_at:
                    url: http://www.example.com/api/tasks/26
                    list_url: http://www.example.com/api/lists/43
                    description: |-
                      ## Minus
                      Illo quos officia. Voluptatem explicabo a. Earum totam facilis. Quae deserunt iusto. Consequatur dolorem enim.
                      `Quos.`
                    created_at: '2022-11-29T00:16:58.441Z'
                    updated_at: '2022-11-29T00:16:58.456Z'
        '422':
          description: non integer time
          content:
            application/json:
              examples:
                incorrect unit:
                  summary: incorrect unit
                  value:
                    unit:
                    - is not included in the list
                negative time:
                  summary: negative time
                  value:
                    time:
                    - must be greater than 0
                non integer time:
                  summary: non integer time
                  value:
                    time:
                    - must be greater than 0
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                time:
                  type: integer
                unit:
                  type: string
                  enum: "#<Set: {:day, :hour, :minute, :second}>"
  "/api/tasks/{id}/attach_tag":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Task id
      required: true
      schema:
        type: string
    post:
      summary: Attach Tag
      tags:
      - Tasks
      parameters: []
      responses:
        '204':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                tag_id:
                  type: integer
  "/api/tasks/{id}/detach_tag":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Task id
      required: true
      schema:
        type: string
    post:
      summary: Detach Tag
      tags:
      - Tasks
      parameters: []
      responses:
        '204':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                tag_id:
                  type: integer
  "/api/tasks/{id}/assign_user":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Task id
      required: true
      schema:
        type: string
    post:
      summary: Assign User
      tags:
      - Tasks
      parameters: []
      responses:
        '204':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
  "/api/tasks/{id}/unassign_user":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Task id
      required: true
      schema:
        type: string
    post:
      summary: Unassign User
      tags:
      - Tasks
      parameters: []
      responses:
        '204':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
  "/api/workspaces/{id}/users":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: List users of workspace
      tags:
      - Users
      parameters:
      - name: id
        in: path
        description: Workspace id
        required: true
        schema:
          type: string
      - name: page
        in: query
        required: false
        description: Decides which result page should be returned.
        example: 2
        schema:
          type: integer
      - name: role
        in: query
        required: false
        schema:
          "$ref": "#/components/schemas/user_request/properties/role"
        example: admin
      - name: created_at_from
        in: query
        required: false
        description: Date with format YYYY.MM.DD
        example: 2010.01.25
        schema:
          type: string
      - name: created_at_to
        in: query
        required: false
        description: Date with format YYYY.MM.DD
        example: 2010.01.25
        schema:
          type: string
      - name: search
        in: query
        required: false
        description: Searches for users by name and e-mail.
        example: michael
        schema:
          type: string
      - name: per
        in: query
        required: false
        description: Decides how many entities should be returned per one page. **Works
          only, when `page` param is given.**
        example: 2
        schema:
          type: integer
      - name: limit
        in: query
        required: false
        description: Decides how many entities should be returned.
        example: 3
        schema:
          type: integer
      responses:
        '200':
          description: successful with pages
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    users:
                    - id: 172
                      name: Osvaldo Wintheiser Esq.
                      avatar_url: https://www.gravatar.com/avatar/a29d1ce54b2316574d3cb51eea735756
                      role: developer
                      url: http://www.example.com/api/users/172
                      email: osvaldo_wintheiser_esq.1669681018@example.com
                      created_at: '2022-11-29T00:16:58.667Z'
                      updated_at: '2022-11-29T00:16:58.667Z'
                      custom_data: {}
                    - id: 173
                      name: Reid Nicolas
                      avatar_url: https://www.gravatar.com/avatar/633abb4ffe1461d0f7cffd4bedd0baf0
                      role: developer
                      url: http://www.example.com/api/users/173
                      email: reid_nicolas.1669681018@example.com
                      created_at: '2022-11-29T00:16:58.678Z'
                      updated_at: '2022-11-29T00:16:58.678Z'
                      custom_data: {}
                    - id: 174
                      name: Miss Donnie Langosh
                      avatar_url: https://www.gravatar.com/avatar/03f6d2e815cf0ce924dac6fa14db8f60
                      role: manager
                      url: http://www.example.com/api/users/174
                      email: miss_donnie_langosh.1669681018@example.com
                      created_at: '2022-11-29T00:16:58.683Z'
                      updated_at: '2022-11-29T00:16:58.683Z'
                      custom_data: {}
                successful with pages:
                  summary: successful with pages
                  value:
                    users:
                    - id: 176
                      name: Ms. Mercy Cummings
                      avatar_url: https://www.gravatar.com/avatar/11ee6ac026eea1ee25a319e24cf8b68e
                      role: developer
                      url: http://www.example.com/api/users/176
                      email: ms_mercy_cummings.1669681018@example.com
                      created_at: '2022-11-29T00:16:58.709Z'
                      updated_at: '2022-11-29T00:16:58.709Z'
                      custom_data: {}
                    - id: 177
                      name: Keren Pacocha DVM
                      avatar_url: https://www.gravatar.com/avatar/bd94079ee3b74c84653a1019a4d8eea6
                      role: regular
                      url: http://www.example.com/api/users/177
                      email: keren_pacocha_dvm.1669681018@example.com
                      created_at: '2022-11-29T00:16:58.714Z'
                      updated_at: '2022-11-29T00:16:58.714Z'
                      custom_data: {}
                    - id: 178
                      name: Stanley Watsica DC
                      avatar_url: https://www.gravatar.com/avatar/1ca1d3a8b08aebc12ac3b015ccdaae02
                      role: regular
                      url: http://www.example.com/api/users/178
                      email: stanley_watsica_dc.1669681018@example.com
                      created_at: '2022-11-29T00:16:58.719Z'
                      updated_at: '2022-11-29T00:16:58.719Z'
                      custom_data: {}
                    total_pages: 1
              schema:
                "$ref": "#/components/schemas/user_pages_response"
  "/api/users":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: List users
      tags:
      - Users
      parameters:
      - name: role_collection
        in: query
        schema:
          type: array
          items:
            "$ref": "#/components/schemas/user_request/properties/role"
        example:
        - admin
      - name: role
        in: query
        required: false
        schema:
          "$ref": "#/components/schemas/user_request/properties/role"
        example: admin
      - name: created_at_from
        in: query
        required: false
        description: Date with format YYYY.MM.DD
        example: 2010.01.25
        schema:
          type: string
      - name: created_at_to
        in: query
        required: false
        description: Date with format YYYY.MM.DD
        example: 2010.01.25
        schema:
          type: string
      - name: workspace_id
        in: query
        required: false
        example: 1
        schema:
          type: integer
      - name: search
        in: query
        required: false
        description: Searches for users by name and e-mail.
        example: michael
        schema:
          type: string
      - name: page
        in: query
        required: false
        description: Decides which result page should be returned.
        example: 2
        schema:
          type: integer
      - name: per
        in: query
        required: false
        description: Decides how many entities should be returned per one page. **Works
          only, when `page` param is given.**
        example: 2
        schema:
          type: integer
      - name: limit
        in: query
        required: false
        description: Decides how many entities should be returned.
        example: 3
        schema:
          type: integer
      responses:
        '200':
          description: successful with pages
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    users:
                    - id: 180
                      name: Pres. Lucas Vandervort
                      avatar_url: https://www.gravatar.com/avatar/eb1b60ca4ba4eb0fc5d812ebdf7a6162
                      role: manager
                      url: http://www.example.com/api/users/180
                      email: pres_lucas_vandervort.1669681018@example.com
                      created_at: '2022-11-29T00:16:58.741Z'
                      updated_at: '2022-11-29T00:16:58.741Z'
                      custom_data: {}
                    - id: 181
                      name: The Hon. Donya Kuphal
                      avatar_url: https://www.gravatar.com/avatar/6014faefc051be731c19953044ec5d86
                      role: manager
                      url: http://www.example.com/api/users/181
                      email: the_hon_donya_kuphal.1669681018@example.com
                      created_at: '2022-11-29T00:16:58.744Z'
                      updated_at: '2022-11-29T00:16:58.744Z'
                      custom_data: {}
                    - id: 182
                      name: Alexander Ward DDS
                      avatar_url: https://www.gravatar.com/avatar/47605d2ff8bdafb102960e57170ed490
                      role: regular
                      url: http://www.example.com/api/users/182
                      email: alexander_ward_dds.1669681018@example.com
                      created_at: '2022-11-29T00:16:58.747Z'
                      updated_at: '2022-11-29T00:16:58.747Z'
                      custom_data: {}
                    - id: 183
                      name: Carson Lang
                      avatar_url: https://www.gravatar.com/avatar/920938c0326f3392085027140c702da8
                      role: guest
                      url: http://www.example.com/api/users/183
                      email: carson_lang.1669681018@example.com
                      created_at: '2022-11-29T00:16:58.751Z'
                      updated_at: '2022-11-29T00:16:58.751Z'
                      custom_data: {}
                    - id: 184
                      name: Prof. Jonah Watsica
                      avatar_url: https://www.gravatar.com/avatar/4f903669f411eb6a2070e64432db0069
                      role: manager
                      url: http://www.example.com/api/users/184
                      email: prof_jonah_watsica.1669681018@example.com
                      created_at: '2022-11-29T00:16:58.754Z'
                      updated_at: '2022-11-29T00:16:58.754Z'
                      custom_data: {}
                    - id: 185
                      name: Marian Runolfsdottir
                      avatar_url: https://www.gravatar.com/avatar/51b974001e89f4a4720fba9681e5889f
                      role: admin
                      url: http://www.example.com/api/users/185
                      email: marian_runolfsdottir.1669681018@example.com
                      created_at: '2022-11-29T00:16:58.757Z'
                      updated_at: '2022-11-29T00:16:58.757Z'
                      custom_data: {}
                successful with pages:
                  summary: successful with pages
                  value:
                    users:
                    - id: 186
                      name: Gavin Prosacco
                      avatar_url: https://www.gravatar.com/avatar/61003f11be0ab87445ab567d77e64a33
                      role: developer
                      url: http://www.example.com/api/users/186
                      email: gavin_prosacco.1669681018@example.com
                      created_at: '2022-11-29T00:16:58.776Z'
                      updated_at: '2022-11-29T00:16:58.776Z'
                      custom_data: {}
                    - id: 187
                      name: Loren Donnelly
                      avatar_url: https://www.gravatar.com/avatar/038a0185330ad51f9b0110e0bc125e9c
                      role: guest
                      url: http://www.example.com/api/users/187
                      email: loren_donnelly.1669681018@example.com
                      created_at: '2022-11-29T00:16:58.779Z'
                      updated_at: '2022-11-29T00:16:58.779Z'
                      custom_data: {}
                    - id: 188
                      name: Msgr. Lena Johnson
                      avatar_url: https://www.gravatar.com/avatar/98f50976f833ba5c2b175d5c5bc6619b
                      role: regular
                      url: http://www.example.com/api/users/188
                      email: msgr_lena_johnson.1669681018@example.com
                      created_at: '2022-11-29T00:16:58.783Z'
                      updated_at: '2022-11-29T00:16:58.783Z'
                      custom_data: {}
                    - id: 189
                      name: Moira Lockman
                      avatar_url: https://www.gravatar.com/avatar/c3b68bf1a52db46c761adad34c5139d6
                      role: regular
                      url: http://www.example.com/api/users/189
                      email: moira_lockman.1669681018@example.com
                      created_at: '2022-11-29T00:16:58.786Z'
                      updated_at: '2022-11-29T00:16:58.786Z'
                      custom_data: {}
                    - id: 190
                      name: Daisy Oberbrunner
                      avatar_url: https://www.gravatar.com/avatar/5fcabf52c33873db4b66842edd5d3dd9
                      role: manager
                      url: http://www.example.com/api/users/190
                      email: daisy_oberbrunner.1669681018@example.com
                      created_at: '2022-11-29T00:16:58.789Z'
                      updated_at: '2022-11-29T00:16:58.789Z'
                      custom_data: {}
                    - id: 191
                      name: Titus Koss
                      avatar_url: https://www.gravatar.com/avatar/1e6315feb5bb49ce799d252ae27e0bc7
                      role: admin
                      url: http://www.example.com/api/users/191
                      email: titus_koss.1669681018@example.com
                      created_at: '2022-11-29T00:16:58.792Z'
                      updated_at: '2022-11-29T00:16:58.792Z'
                      custom_data: {}
                    total_pages: 1
              schema:
                "$ref": "#/components/schemas/user_pages_response"
    post:
      summary: Create a user
      tags:
      - Users
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 193
                    name: New User
                    created_at: '2022-11-29T00:16:58.824Z'
                    updated_at: '2022-11-29T00:16:58.824Z'
                    email: new_user@example.com
                    role: developer
                    deleted_at:
                    recent_boards: []
                    custom_data: {}
              schema:
                "$ref": "#/components/schemas/user_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/user_request"
    put:
      summary: Update current user
      tags:
      - Users
      parameters: []
      responses:
        '204':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/user_update_request"
    delete:
      summary: Delete current user
      tags:
      - Users
      responses:
        '204':
          description: successful
  "/api/users/current":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: Show the currently signed in user
      tags:
      - Users
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 196
                    name: Cathey McDermott
                    avatar_url: https://www.gravatar.com/avatar/64331aae7f3801d590ab97a36118cba1
                    role: admin
                    url: http://www.example.com/api/users/196
                    email: cathey_mc_dermott.1669681018@example.com
                    created_at: '2022-11-29T00:16:58.869Z'
                    updated_at: '2022-11-29T00:16:58.869Z'
                    custom_data: {}
              schema:
                "$ref": "#/components/schemas/user_response"
  "/api/users/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show a user
      tags:
      - Users
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 197
                    name: Ward Green
                    avatar_url: https://www.gravatar.com/avatar/96da029d2256dfbab079adfd04a52829
                    role: manager
                    url: http://www.example.com/api/users/197
                    email: ward_green.1669681018@example.com
                    created_at: '2022-11-29T00:16:58.885Z'
                    updated_at: '2022-11-29T00:16:58.885Z'
                    custom_data: {}
              schema:
                "$ref": "#/components/schemas/user_response"
  "/api/users/sign_in":
    post:
      summary: Sign in
      tags:
      - Users
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 199
                    name: Colton Schneider
                    created_at: '2022-11-29T00:16:58.908Z'
                    updated_at: '2022-11-29T00:16:58.908Z'
                    email: email@example.com
                    role: developer
                    deleted_at:
                    recent_boards: []
                    custom_data: {}
              schema:
                "$ref": "#/components/schemas/user_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/user_sign_in_request"
  "/api/users/sign_out":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    delete:
      summary: Sign out
      tags:
      - Users
      responses:
        '204':
          description: successful
  "/api/workspaces":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: list workspaces
      tags:
      - Workspaces
      security:
      - Bearer: {}
      parameters:
      - name: limit
        in: query
        description: Decides how many entities should be returned
        example: 3
        required: false
        schema:
          type: integer
      - name: boards
        in: query
        type: string
        schema:
          "$ref": "#/components/schemas/include_associated_enum"
        required: false
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful with `boards=all`:
                  summary: successful with `boards=all`
                  value:
                  - id: 95
                    name: Transcof
                    created_at: '2022-11-29T00:16:58.949Z'
                    updated_at: '2022-11-29T00:16:58.949Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/workspaces/95
                    boards:
                    - id: 93
                      name: Darmstadtium
                      colour: "#6a6128"
                      workspace_id: 95
                      created_at: '2022-11-29T00:16:58.952Z'
                      updated_at: '2022-11-29T00:16:58.952Z'
                      deleted_at:
                      custom_data: {}
                      url: http://www.example.com/api/boards/93
                      workspace_url: http://www.example.com/api/workspaces/95
                    - id: 94
                      name: Flerovium
                      colour: "#5f4e7f"
                      workspace_id: 95
                      created_at: '2022-11-29T00:16:58.954Z'
                      updated_at: '2022-11-29T00:16:58.954Z'
                      deleted_at:
                      custom_data: {}
                      url: http://www.example.com/api/boards/94
                      workspace_url: http://www.example.com/api/workspaces/95
                    - id: 95
                      name: Rutherfordium
                      colour: "#77ecc4"
                      workspace_id: 95
                      created_at: '2022-11-29T00:16:58.955Z'
                      updated_at: '2022-11-29T00:16:58.955Z'
                      deleted_at:
                      custom_data: {}
                      url: http://www.example.com/api/boards/95
                      workspace_url: http://www.example.com/api/workspaces/95
                    - id: 96
                      name: Promethium
                      colour: "#c06598"
                      workspace_id: 95
                      created_at: '2022-11-29T00:16:58.956Z'
                      updated_at: '2022-11-29T00:16:58.956Z'
                      deleted_at:
                      custom_data: {}
                      url: http://www.example.com/api/boards/96
                      workspace_url: http://www.example.com/api/workspaces/95
                    - id: 97
                      name: Mendelevium
                      colour: "#9f3e41"
                      workspace_id: 95
                      created_at: '2022-11-29T00:16:58.957Z'
                      updated_at: '2022-11-29T00:16:58.957Z'
                      deleted_at:
                      custom_data: {}
                      url: http://www.example.com/api/boards/97
                      workspace_url: http://www.example.com/api/workspaces/95
                  - id: 96
                    name: Latlux
                    created_at: '2022-11-29T00:16:58.958Z'
                    updated_at: '2022-11-29T00:16:58.958Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/workspaces/96
                    boards: []
                successful:
                  summary: successful
                  value:
                  - id: 97
                    name: Toughjoyfax
                    created_at: '2022-11-29T00:16:58.984Z'
                    updated_at: '2022-11-29T00:16:58.984Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/workspaces/97
                  - id: 98
                    name: Toughjoyfax
                    created_at: '2022-11-29T00:16:58.986Z'
                    updated_at: '2022-11-29T00:16:58.986Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/workspaces/98
                  - id: 99
                    name: Zontrax
                    created_at: '2022-11-29T00:16:58.989Z'
                    updated_at: '2022-11-29T00:16:58.989Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/workspaces/99
                  - id: 100
                    name: Y-Solowarm
                    created_at: '2022-11-29T00:16:58.991Z'
                    updated_at: '2022-11-29T00:16:58.991Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/workspaces/100
                  - id: 101
                    name: Gembucket
                    created_at: '2022-11-29T00:16:58.994Z'
                    updated_at: '2022-11-29T00:16:58.994Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/workspaces/101
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/workspace_response"
    post:
      summary: create workspace
      tags:
      - Workspaces
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 102
                    name: New Workspace
                    created_at: '2022-11-29T00:16:59.032Z'
                    updated_at: '2022-11-29T00:16:59.032Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/workspaces/102
              schema:
                "$ref": "#/components/schemas/workspace_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/workspace_request"
  "/api/workspaces/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show workspace
      parameters:
      - name: boards
        in: query
        type: string
        schema:
          "$ref": "#/components/schemas/include_associated_enum"
        required: false
      tags:
      - Workspaces
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful with `boards=all`:
                  summary: successful with `boards=all`
                  value:
                    id: 103
                    name: Y-Solowarm
                    created_at: '2022-11-29T00:16:59.044Z'
                    updated_at: '2022-11-29T00:16:59.044Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/workspaces/103
                    boards:
                    - id: 98
                      name: Uranium
                      colour: "#c351aa"
                      workspace_id: 103
                      created_at: '2022-11-29T00:16:59.046Z'
                      updated_at: '2022-11-29T00:16:59.047Z'
                      deleted_at:
                      custom_data: {}
                      url: http://www.example.com/api/boards/98
                      workspace_url: http://www.example.com/api/workspaces/103
                    - id: 99
                      name: Terbium
                      colour: "#6e781f"
                      workspace_id: 103
                      created_at: '2022-11-29T00:16:59.050Z'
                      updated_at: '2022-11-29T00:16:59.051Z'
                      deleted_at:
                      custom_data: {}
                      url: http://www.example.com/api/boards/99
                      workspace_url: http://www.example.com/api/workspaces/103
                successful:
                  summary: successful
                  value:
                    id: 106
                    name: It
                    created_at: '2022-11-29T00:16:59.073Z'
                    updated_at: '2022-11-29T00:16:59.073Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/workspaces/106
              schema:
                "$ref": "#/components/schemas/workspace_response"
    put:
      summary: update workspace
      tags:
      - Workspaces
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 107
                    name: New Name
                    created_at: '2022-11-29T00:16:59.094Z'
                    updated_at: '2022-11-29T00:16:59.108Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/workspaces/107
              schema:
                "$ref": "#/components/schemas/workspace_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/workspace_request"
    delete:
      summary: delete workspace
      tags:
      - Workspaces
      responses:
        '204':
          description: successful
  "/api/workspaces/{id}/assign_user":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Workspace id
      required: true
      schema:
        type: string
    post:
      summary: Assign User
      tags:
      - Workspaces
      parameters: []
      responses:
        '204':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
  "/api/workspaces/{id}/unassign_user":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Workspace id
      required: true
      schema:
        type: string
    post:
      summary: Unassign User
      tags:
      - Workspaces
      parameters: []
      responses:
        '204':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
components:
  schemas:
    authorization:
      name: Authorization
      in: header
      type: string
      description: JWT token
      example: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiZGV2ZWxvcGVyIiwic3ViIjoiMSIsInNjcCI6InVzZXIiLCJhdWQiOm51bGwsImlhdCI6MTY2NjE4MDIzMiwiZXhwIjoxNjY3NDc2MjMyLCJqdGkiOiJhMzdlZTA5MC0zZGJmLTRhMzgtOTFiNy1mZTJlM2FiYjlkY2QifQ.tGGjFHfMszfGCfNZS6I-hQNLSu_2Xfs3W4hI8IT4CW0
      required: true
    include_associated_enum:
      type: string
      enum:
      - visible
      - invisible
      - non-archived
      - archived
      - all
    lambdee_models_enum:
      type: string
      enum:
      - DB::User
      - DB::Workspace
      - DB::Board
      - DB::List
      - DB::Task
      - DB::Comment
      - DB::Tag
      - DB::Sprint
      - DB::UserWorkspace
      - DB::TaskUser
      - DB::TaskTag
      - DB::SprintTask
    user_pages_response:
      type: object
      properties:
        users:
          type: array
          items:
            "$ref": "#components/schemas/user_response"
        total_pages:
          type: integer
      required:
      - users
    user_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        avatar_url:
          type: string
        url:
          type: string
        role:
          type: string
      required:
      - id
      - name
    user_request:
      type: object
      properties:
        user:
          type: object
          properties:
            name:
              type: string
            email:
              type: string
            password:
              type: string
            role:
              type: string
              enum:
              - guest
              - regular
              - developer
              - admin
              - manager
      required:
      - name
      - email
    user_update_request:
      type: object
      properties:
        user:
          type: object
          properties:
            name:
              type: string
            email:
              type: string
            password:
              type: string
            current_password:
              type: string
            role:
              type: string
              enum:
              - guest
              - regular
              - developer
              - admin
              - manager
      required:
      - current_password
    user_sign_in_request:
      type: object
      properties:
        user:
          type: object
          properties:
            email:
              type: string
            password:
              type: string
      required:
      - email
      - password
    comment_response:
      type: object
      properties:
        id:
          type: integer
        body:
          type: string
        deleted_at:
          type:
          - string
          - 'null'
          format: date_time
        author_id:
          type: integer
        task_id:
          type: integer
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        url:
          type: string
        users:
          type: array
          items:
            "$ref": "#/components/schemas/user_response"
          nullable: true
      required:
      - id
      - body
      - deleted_at
      - url
    tag_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        colour:
          type: string
        board_id:
          type: integer
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        url:
          type: string
        board_url:
          type: string
      required:
      - id
    tag_request:
      type: object
      properties:
        name:
          type: string
        colour:
          type: string
        board_id:
          type: integer
        task_id:
          type: integer
      required: []
    sprint_pages_response:
      type: object
      properties:
        sprints:
          type: array
          items:
            "$ref": "#components/schemas/sprint_response"
        total_pages:
          type: integer
      required:
      - sprints
    sprint_response:
      type: object
      properties:
        id:
          type: integer
        board_id:
          type: integer
        name:
          type: string
        description:
          type:
          - string
          - 'null'
        started_at:
          type: string
          format: date_time
        expected_end_at:
          type: string
          format: date_time
        ended_at:
          type:
          - string
          - 'null'
          format: date_time
        final_list_name:
          type: string
        url:
          type: string
        tasks:
          type: array
          items:
            "$ref": "#/components/schemas/task_with_sprint_task_response"
          nullable: true
      required:
      - id
      - name
    task_with_sprint_task_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        priority:
          type: string
        spent_time:
          type: integer
        points:
          type: integer
        added_at:
          type: string
          format: date_time
        completed_at:
          type:
          - string
          - 'null'
          format: date_time
        start_state:
          type: string
        state:
          type: string
      required:
      - id
    sprint_request:
      type: object
      properties:
        board_id:
          type: integer
        name:
          type: string
        description:
          type: string
        started_at:
          type: string
          format: date_time
          example: '2025-12-11T23:00:00'
        expected_end_at:
          type: string
          format: date_time
          example: '2025-12-18T23:00:00'
      required:
      - name
      - expected_end_at
    task_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type:
          - string
          - 'null'
        due_time:
          type:
          - string
          - 'null'
          format: date_time
        pos:
          type:
          - number
          - 'null'
          format: float
        priority:
          type:
          - string
          - 'null'
        points:
          type:
          - number
          - 'null'
          format: float
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        deleted_at:
          type:
          - string
          - 'null'
          format: date_time
        list_id:
          type: integer
        list_url:
          type: string
        url:
          type: string
        users:
          type: array
          items:
            "$ref": "#/components/schemas/user_response"
          nullable: true
        tags:
          type: array
          items:
            "$ref": "#/components/schemas/tag_response"
          nullable: true
        author:
          type: object
          schema:
            "$ref": "#/components/schemas/user_response"
          nullable: true
      required:
      - id
      - name
      - pos
      - priority
      - points
      - list_id
      - deleted_at
    task_request:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        due_time:
          type: string
          format: date_time
          example: '2025-12-18T23:00:00'
        pos:
          type: number
          format: float
          description: If not given, value will be set as for the last item in the
            list.
        priority:
          type: string
          enum:
          - very_low
          - low
          - medium
          - high
          - very_high
        points:
          type: number
          format: float
        list_id:
          type: integer
        author_id:
          type: integer
      required:
      - name
      - list_id
      - author_id
    list_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        pos:
          type: number
          format: float
        visible:
          type:
          - boolean
          - 'null'
        deleted_at:
          type:
          - string
          - 'null'
          format: date_time
        board_id:
          type: integer
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        url:
          type: string
        board_url:
          type: string
        tasks:
          type: array
          items:
            "$ref": "#/components/schemas/task_response"
          nullable: true
      required:
      - id
      - name
      - pos
      - visible
      - board_id
      - created_at
      - updated_at
      - deleted_at
    list_request:
      type: object
      properties:
        name:
          type: string
        pos:
          type: number
          format: float
        visible:
          type: boolean
        board_id:
          type: integer
      required:
      - name
      - board_id
    board_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        workspace_id:
          type: integer
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        deleted_at:
          type:
          - string
          - 'null'
          format: date_time
        url:
          type: string
        workspace_url:
          type: string
        lists:
          type: array
          items:
            "$ref": "#/components/schemas/list_response"
          nullable: true
      required:
      - id
      - name
      - workspace_id
      - created_at
      - updated_at
      - deleted_at
    board_request:
      type: object
      properties:
        name:
          type: string
        workspace_id:
          type: integer
      required:
      - name
      - workspace_id
    workspace_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        deleted_at:
          type:
          - string
          - 'null'
          format: date_time
        url:
          type: string
        boards:
          type: array
          items:
            "$ref": "#/components/schemas/board_response"
          nullable: true
      required:
      - id
      - name
      - created_at
      - updated_at
      - deleted_at
    workspace_request:
      type: object
      properties:
        name:
          type: string
      required:
      - name
    script_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        content:
          type: string
        url:
          type: string
        script_triggers:
          type: array
          items:
            "$ref": "#/components/schemas/nested_script_trigger_response"
      required: []
    script_request:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        content:
          type: string
        script_triggers_attributes:
          type: array
          items:
            "$ref": "#/components/schemas/nested_script_trigger_request"
      required:
      - name
    nested_script_trigger_response:
      type: object
      properties:
        id:
          type: integer
        script_id:
          type:
          - integer
          - 'null'
        subject_type:
          type:
          - string
          - 'null'
        subject_id:
          type:
          - integer
          - 'null'
        action:
          type: string
        url:
          type: string
      required: []
    nested_script_trigger_request:
      type: object
      properties:
        id:
          type: integer
          description: Needed only for updates and destroys.
        script_id:
          type: integer
        subject_type:
          "$ref": "#/components/schemas/lambdee_models_enum"
        subject_id:
          type: integer
        action:
          type: string
          enum:
          - create
          - update
          - destroy
        _destroy:
          type: boolean
          description: If `true` callback for given `id` will be destroyed. Works
            only nested in sprint.
      required:
      - action
    script_trigger_response:
      type: object
      properties:
        id:
          type: integer
        script_id:
          type: integer
        subject_type:
          type:
          - string
          - 'null'
        subject_id:
          type:
          - integer
          - 'null'
        action:
          type: string
        url:
          type: string
      required: []
    script_trigger_request:
      type: object
      properties:
        script_id:
          type: integer
        subject_type:
          "$ref": "#/components/schemas/lambdee_models_enum"
        subject_id:
          type: integer
        action:
          type: string
      required:
      - script_id
      - action
    script_run_response:
      type: object
      properties:
        id:
          type: integer
        script_id:
          type: integer
        initiator_id:
          type: integer
        input:
          type:
          - string
          - 'null'
        output:
          type: string
        state:
          type: string
        url:
          type: string
      required: []
    script_run_request:
      type: object
      properties:
        output:
          type: string
        state:
          type: string
          enum:
          - running
          - executed
          - failed
          - timed_out
          - connection_failed
      required: []
servers:
- url: "{defaultProtocol}://{defaultHost}"
  variables:
    defaultProtocol:
      default: http
    defaultHost:
      default: localhost:3000
