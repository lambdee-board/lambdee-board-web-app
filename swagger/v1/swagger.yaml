---
openapi: 3.0.1
info:
  title: Lambdee API V1
  version: v1
paths:
  "/api/boards":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: list boards
      tags:
      - Boards
      parameters:
      - name: limit
        in: query
        required: false
        description: Decides how many entities should be returned
        example: 3
        schema:
          type: integer
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - id: 1
                    name: Neodymium
                    colour: "#80920b"
                    workspace_id: 1
                    created_at: '2022-11-30T17:33:01.640Z'
                    updated_at: '2022-11-30T17:33:01.640Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/boards/1
                    workspace_url: http://www.example.com/api/workspaces/1
                  - id: 2
                    name: Californium
                    colour: "#f79d3d"
                    workspace_id: 2
                    created_at: '2022-11-30T17:33:01.643Z'
                    updated_at: '2022-11-30T17:33:01.643Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/boards/2
                    workspace_url: http://www.example.com/api/workspaces/2
                  - id: 3
                    name: Nihonium
                    colour: "#8551fa"
                    workspace_id: 3
                    created_at: '2022-11-30T17:33:01.645Z'
                    updated_at: '2022-11-30T17:33:01.645Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/boards/3
                    workspace_url: http://www.example.com/api/workspaces/3
                  - id: 4
                    name: Hafnium
                    colour: "#e11d61"
                    workspace_id: 4
                    created_at: '2022-11-30T17:33:01.648Z'
                    updated_at: '2022-11-30T17:33:01.648Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/boards/4
                    workspace_url: http://www.example.com/api/workspaces/4
                  - id: 5
                    name: Palladium
                    colour: "#fc35f5"
                    workspace_id: 5
                    created_at: '2022-11-30T17:33:01.650Z'
                    updated_at: '2022-11-30T17:33:01.650Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/boards/5
                    workspace_url: http://www.example.com/api/workspaces/5
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/board_response"
    post:
      summary: create board
      tags:
      - Boards
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 6
                    name: New Board
                    colour:
                    workspace_id: 6
                    created_at: '2022-11-30T17:33:01.723Z'
                    updated_at: '2022-11-30T17:33:01.723Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/boards/6
                    workspace_url: http://www.example.com/api/workspaces/6
              schema:
                "$ref": "#/components/schemas/board_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/board_request"
  "/api/boards/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show board
      tags:
      - Boards
      parameters:
      - name: tasks
        in: query
        type: string
        schema:
          "$ref": "#/components/schemas/include_associated_enum"
        required: false
      - name: lists
        in: query
        type: string
        schema:
          "$ref": "#/components/schemas/include_associated_enum"
        required: false
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful with `lists=all`:
                  summary: successful with `lists=all`
                  value:
                    id: 7
                    name: Dubnium
                    colour: "#acc110"
                    workspace_id: 7
                    created_at: '2022-11-30T17:33:01.733Z'
                    updated_at: '2022-11-30T17:33:01.733Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/boards/7
                    workspace_url: http://www.example.com/api/workspaces/7
                    lists:
                    - id: 1
                      name: sky
                      pos: 65536.0
                      visible: false
                      deleted_at: '2022-11-30T17:33:01.750Z'
                      board_id: 7
                      created_at: '2022-11-30T17:33:01.743Z'
                      updated_at: '2022-11-30T17:33:01.746Z'
                      custom_data: {}
                      url: http://www.example.com/api/lists/1
                      board_url: http://www.example.com/api/boards/7
                    - id: 2
                      name: lavender
                      pos: 65536.0
                      visible: false
                      deleted_at:
                      board_id: 7
                      created_at: '2022-11-30T17:33:01.754Z'
                      updated_at: '2022-11-30T17:33:01.756Z'
                      custom_data: {}
                      url: http://www.example.com/api/lists/2
                      board_url: http://www.example.com/api/boards/7
                successful with `lists=visible`:
                  summary: successful with `lists=visible`
                  value:
                    id: 10
                    name: Nitrogen
                    colour: "#fc297e"
                    workspace_id: 10
                    created_at: '2022-11-30T17:33:01.804Z'
                    updated_at: '2022-11-30T17:33:01.804Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/boards/10
                    workspace_url: http://www.example.com/api/workspaces/10
                    lists: []
                successful with `lists=archived`:
                  summary: successful with `lists=archived`
                  value:
                    id: 12
                    name: Francium
                    colour: "#b4364f"
                    workspace_id: 12
                    created_at: '2022-11-30T17:33:01.839Z'
                    updated_at: '2022-11-30T17:33:01.839Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/boards/12
                    workspace_url: http://www.example.com/api/workspaces/12
                    lists:
                    - id: 4
                      name: cerulean
                      pos: 65536.0
                      visible: false
                      deleted_at: '2022-11-30T17:33:01.846Z'
                      board_id: 12
                      created_at: '2022-11-30T17:33:01.843Z'
                      updated_at: '2022-11-30T17:33:01.845Z'
                      custom_data: {}
                      url: http://www.example.com/api/lists/4
                      board_url: http://www.example.com/api/boards/12
                    - id: 5
                      name: jade
                      pos: 65536.0
                      visible: false
                      deleted_at: '2022-11-30T17:33:01.854Z'
                      board_id: 12
                      created_at: '2022-11-30T17:33:01.850Z'
                      updated_at: '2022-11-30T17:33:01.852Z'
                      custom_data: {}
                      url: http://www.example.com/api/lists/5
                      board_url: http://www.example.com/api/boards/12
                successful:
                  summary: successful
                  value:
                    id: 15
                    name: Californium
                    colour: "#5ce7f7"
                    workspace_id: 15
                    created_at: '2022-11-30T17:33:01.879Z'
                    updated_at: '2022-11-30T17:33:01.879Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/boards/15
                    workspace_url: http://www.example.com/api/workspaces/15
              schema:
                "$ref": "#/components/schemas/board_response"
    put:
      summary: update board
      tags:
      - Boards
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 16
                    name: New Name
                    colour: "#b7b4e0"
                    workspace_id: 16
                    created_at: '2022-11-30T17:33:01.902Z'
                    updated_at: '2022-11-30T17:33:01.917Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/boards/16
                    workspace_url: http://www.example.com/api/workspaces/16
              schema:
                "$ref": "#/components/schemas/board_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/board_request"
    delete:
      summary: delete board
      tags:
      - Boards
      responses:
        '204':
          description: successful
  "/api/boards/{id}/user_tasks":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: list current user tasks including board, lists, tags, users and author
      tags:
      - Boards
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 18
                    name: Silver
                    colour: "#612f79"
                    workspace_id: 18
                    created_at: '2022-11-30T17:33:01.951Z'
                    updated_at: '2022-11-30T17:33:01.951Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/boards/18
                    workspace_url: http://www.example.com/api/workspaces/18
                    lists: []
              schema:
                "$ref": "#/components/schemas/board_response"
  "/api/boards/recently_viewed":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: list current user recently viewed boards (max 6)
      tags:
      - Boards
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value: []
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/board_response"
  "/api/tasks/{id}/comments":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Task id
      required: true
      schema:
        type: string
    get:
      summary: List task's comments
      tags:
      - Comments
      parameters:
      - name: with_author
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful with `with_author=true`:
                  summary: successful with `with_author=true`
                  value:
                  - id: 5
                    body: |-
                      #### Quos
                      Qui qui alias.
                      harum | nisi | atque
                      ---- | ---- | ----
                      neque | ipsa | non
                      architecto | dicta | nostrum
                    deleted_at:
                    author_id: 22
                    task_id: 2
                    created_at: '2022-11-30T17:33:02.093Z'
                    updated_at: '2022-11-30T17:33:02.093Z'
                    url: http://www.example.com/api/comments/5
                    author:
                      id: 22
                      name: Edwardo Kling
                      avatar_url: https://www.gravatar.com/avatar/f192e89c2e233b916205f192d70796c2
                      role: guest
                      url: http://www.example.com/api/users/22
                      email: edwardo_kling.1669829582@example.com
                      created_at: '2022-11-30T17:33:02.074Z'
                      updated_at: '2022-11-30T17:33:02.074Z'
                      custom_data: {}
                  - id: 4
                    body: |-
                      # Natus
                      Occaecati sed illum.
                      ```ruby
                      Illum.
                      ```
                    deleted_at:
                    author_id: 22
                    task_id: 2
                    created_at: '2022-11-30T17:33:02.091Z'
                    updated_at: '2022-11-30T17:33:02.091Z'
                    url: http://www.example.com/api/comments/4
                    author:
                      id: 22
                      name: Edwardo Kling
                      avatar_url: https://www.gravatar.com/avatar/f192e89c2e233b916205f192d70796c2
                      role: guest
                      url: http://www.example.com/api/users/22
                      email: edwardo_kling.1669829582@example.com
                      created_at: '2022-11-30T17:33:02.074Z'
                      updated_at: '2022-11-30T17:33:02.074Z'
                      custom_data: {}
                  - id: 3
                    body: |-
                      ###### Dolor
                      Quam eos laborum. Iste quo mollitia.
                      `Cumque.`
                    deleted_at:
                    author_id: 22
                    task_id: 2
                    created_at: '2022-11-30T17:33:02.090Z'
                    updated_at: '2022-11-30T17:33:02.090Z'
                    url: http://www.example.com/api/comments/3
                    author:
                      id: 22
                      name: Edwardo Kling
                      avatar_url: https://www.gravatar.com/avatar/f192e89c2e233b916205f192d70796c2
                      role: guest
                      url: http://www.example.com/api/users/22
                      email: edwardo_kling.1669829582@example.com
                      created_at: '2022-11-30T17:33:02.074Z'
                      updated_at: '2022-11-30T17:33:02.074Z'
                      custom_data: {}
                  - id: 2
                    body: |-
                      #### Sit
                      Est enim minus. Repellendus cum nihil. Dolores adipisci deleniti.
                      Voluptatem enim ~rerum.~ Et qui tempore. Culpa dolorum et.
                    deleted_at:
                    author_id: 22
                    task_id: 2
                    created_at: '2022-11-30T17:33:02.088Z'
                    updated_at: '2022-11-30T17:33:02.088Z'
                    url: http://www.example.com/api/comments/2
                    author:
                      id: 22
                      name: Edwardo Kling
                      avatar_url: https://www.gravatar.com/avatar/f192e89c2e233b916205f192d70796c2
                      role: guest
                      url: http://www.example.com/api/users/22
                      email: edwardo_kling.1669829582@example.com
                      created_at: '2022-11-30T17:33:02.074Z'
                      updated_at: '2022-11-30T17:33:02.074Z'
                      custom_data: {}
                  - id: 1
                    body: |-
                      ###### Autem
                      Iure odio amet. Voluptatum velit quasi.
                      `Et.`
                    deleted_at:
                    author_id: 22
                    task_id: 2
                    created_at: '2022-11-30T17:33:02.084Z'
                    updated_at: '2022-11-30T17:33:02.084Z'
                    url: http://www.example.com/api/comments/1
                    author:
                      id: 22
                      name: Edwardo Kling
                      avatar_url: https://www.gravatar.com/avatar/f192e89c2e233b916205f192d70796c2
                      role: guest
                      url: http://www.example.com/api/users/22
                      email: edwardo_kling.1669829582@example.com
                      created_at: '2022-11-30T17:33:02.074Z'
                      updated_at: '2022-11-30T17:33:02.074Z'
                      custom_data: {}
                successful:
                  summary: successful
                  value:
                  - id: 10
                    body: |-
                      # Molestiae
                      Voluptas necessitatibus velit.
                      Totam possimus est. Optio minus **harum.** Quaerat dolorem aut.
                    deleted_at:
                    author_id: 25
                    task_id: 3
                    created_at: '2022-11-30T17:33:02.141Z'
                    updated_at: '2022-11-30T17:33:02.141Z'
                    url: http://www.example.com/api/comments/10
                  - id: 9
                    body: "##### Et\nRepudiandae nam est.\n* Aliquam. \n* Eos. \n*
                      Alias. \n* Possimus. \n* Et. \n* Eaque. \n* Odio. \n* Voluptate.
                      \n"
                    deleted_at:
                    author_id: 25
                    task_id: 3
                    created_at: '2022-11-30T17:33:02.139Z'
                    updated_at: '2022-11-30T17:33:02.139Z'
                    url: http://www.example.com/api/comments/9
                  - id: 8
                    body: "###### Nostrum\nEt et sed. Quo non est. Qui assumenda et.\n*
                      Id. \n* Optio. \n* Voluptates. \n* Asperiores. \n"
                    deleted_at:
                    author_id: 25
                    task_id: 3
                    created_at: '2022-11-30T17:33:02.137Z'
                    updated_at: '2022-11-30T17:33:02.137Z'
                    url: http://www.example.com/api/comments/8
                  - id: 7
                    body: "###### Dolores\nDignissimos accusamus ipsam. Et omnis ullam.
                      Et quia nihil.\n* Fugiat. \n* Quo. \n* Nisi. \n* Qui. \n* Quis.
                      \n"
                    deleted_at:
                    author_id: 25
                    task_id: 3
                    created_at: '2022-11-30T17:33:02.135Z'
                    updated_at: '2022-11-30T17:33:02.135Z'
                    url: http://www.example.com/api/comments/7
                  - id: 6
                    body: |-
                      ###### Est
                      Et fugiat quis. Unde ut ut. Culpa non soluta.
                      ###### Et
                      Reprehenderit qui aliquam. Similique veniam officia. Omnis laudantium eum.
                      Aspernatur maiores voluptatem. Eum consequatur sit. Placeat fugit ~voluptatibus.~
                    deleted_at:
                    author_id: 25
                    task_id: 3
                    created_at: '2022-11-30T17:33:02.133Z'
                    updated_at: '2022-11-30T17:33:02.133Z'
                    url: http://www.example.com/api/comments/6
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/comment_response"
  "/api/lists":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: List lists
      tags:
      - Lists
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - id: 9
                    name: emerald
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 28
                    created_at: '2022-11-30T17:33:02.165Z'
                    updated_at: '2022-11-30T17:33:02.165Z'
                    custom_data: {}
                    url: http://www.example.com/api/lists/9
                    board_url: http://www.example.com/api/boards/28
                  - id: 10
                    name: copper
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 29
                    created_at: '2022-11-30T17:33:02.169Z'
                    updated_at: '2022-11-30T17:33:02.169Z'
                    custom_data: {}
                    url: http://www.example.com/api/lists/10
                    board_url: http://www.example.com/api/boards/29
                  - id: 11
                    name: sky
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 30
                    created_at: '2022-11-30T17:33:02.173Z'
                    updated_at: '2022-11-30T17:33:02.173Z'
                    custom_data: {}
                    url: http://www.example.com/api/lists/11
                    board_url: http://www.example.com/api/boards/30
                  - id: 12
                    name: cerulean
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 31
                    created_at: '2022-11-30T17:33:02.177Z'
                    updated_at: '2022-11-30T17:33:02.177Z'
                    custom_data: {}
                    url: http://www.example.com/api/lists/12
                    board_url: http://www.example.com/api/boards/31
                  - id: 13
                    name: gray
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 32
                    created_at: '2022-11-30T17:33:02.182Z'
                    updated_at: '2022-11-30T17:33:02.182Z'
                    custom_data: {}
                    url: http://www.example.com/api/lists/13
                    board_url: http://www.example.com/api/boards/32
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/list_response"
    post:
      summary: Create List
      tags:
      - Lists
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 14
                    name: New List
                    pos: 1212.0
                    visible: false
                    deleted_at:
                    board_id: 33
                    created_at: '2022-11-30T17:33:02.233Z'
                    updated_at: '2022-11-30T17:33:02.233Z'
                    custom_data: {}
                    url: http://www.example.com/api/lists/14
                    board_url: http://www.example.com/api/boards/33
              schema:
                "$ref": "#/components/schemas/list_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/list_request"
  "/api/lists/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show List
      tags:
      - Lists
      parameters:
      - name: tasks
        in: query
        type: string
        schema:
          "$ref": "#/components/schemas/include_associated_enum"
        required: false
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful with `tasks=all`:
                  summary: successful with `tasks=all`
                  value:
                    id: 15
                    name: cyan
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 34
                    created_at: '2022-11-30T17:33:02.241Z'
                    updated_at: '2022-11-30T17:33:02.241Z'
                    custom_data: {}
                    url: http://www.example.com/api/lists/15
                    board_url: http://www.example.com/api/boards/34
                    tasks:
                    - id: 4
                      name: Supernatural
                      pos: 65536.0
                      priority: low
                      spent_time: 0
                      points: 2
                      due_time: '2022-12-07T17:33:02.243Z'
                      list_id: 15
                      deleted_at:
                      url: http://www.example.com/api/tasks/4
                      list_url: http://www.example.com/api/lists/15
                      users:
                      - id: 30
                        name: Lyndon Effertz
                        avatar_url: https://www.gravatar.com/avatar/2d792ad5bd086495b6d24b0648054159
                        role: developer
                        url: http://www.example.com/api/users/30
                      - id: 31
                        name: Venita Murray DO
                        avatar_url: https://www.gravatar.com/avatar/d86ffa94f08c624dcd9b42ace7b78e61
                        role: guest
                        url: http://www.example.com/api/users/31
                      tags:
                      - id: 2
                        name: Administration
                        colour: "#3fb166"
                        url: http://www.example.com/api/tags/2
                      - id: 3
                        name: Consulting
                        colour: "#4004dd"
                        url: http://www.example.com/api/tags/3
                    - id: 5
                      name: Unplugged
                      pos: 65536.0
                      priority: high
                      spent_time: 0
                      points: 2
                      due_time: '2022-12-07T17:33:02.275Z'
                      list_id: 15
                      deleted_at: '2022-11-30T17:33:02.287Z'
                      url: http://www.example.com/api/tasks/5
                      list_url: http://www.example.com/api/lists/15
                      users: []
                      tags: []
                successful with `tasks=visible`:
                  summary: successful with `tasks=visible`
                  value:
                    id: 18
                    name: lemon
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 39
                    created_at: '2022-11-30T17:33:02.316Z'
                    updated_at: '2022-11-30T17:33:02.316Z'
                    custom_data: {}
                    url: http://www.example.com/api/lists/18
                    board_url: http://www.example.com/api/boards/39
                    tasks:
                    - id: 6
                      name: All We Know Is Falling
                      pos: 65536.0
                      priority: very_high
                      spent_time: 0
                      points: 5
                      due_time: '2022-12-07T17:33:02.319Z'
                      list_id: 18
                      deleted_at:
                      url: http://www.example.com/api/tasks/6
                      list_url: http://www.example.com/api/lists/18
                      users:
                      - id: 35
                        name: Junior Berge
                        avatar_url: https://www.gravatar.com/avatar/094eb5c7724aa8f446b202f9b9c0e9ff
                        role: guest
                        url: http://www.example.com/api/users/35
                      - id: 36
                        name: Kurtis Morar
                        avatar_url: https://www.gravatar.com/avatar/b8493de8a9d93c438b2563b9d0006956
                        role: manager
                        url: http://www.example.com/api/users/36
                      tags:
                      - id: 4
                        name: Real-Estate
                        colour: "#59d7b9"
                        url: http://www.example.com/api/tags/4
                    - id: 7
                      name: Falling into You
                      pos: 65536.0
                      priority: very_high
                      spent_time: 0
                      points: 1
                      due_time: '2022-12-07T17:33:02.344Z'
                      list_id: 18
                      deleted_at:
                      url: http://www.example.com/api/tasks/7
                      list_url: http://www.example.com/api/lists/18
                      users: []
                      tags: []
                successful with `tasks=archived`:
                  summary: successful with `tasks=archived`
                  value:
                    id: 21
                    name: crimson
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 43
                    created_at: '2022-11-30T17:33:02.380Z'
                    updated_at: '2022-11-30T17:33:02.380Z'
                    custom_data: {}
                    url: http://www.example.com/api/lists/21
                    board_url: http://www.example.com/api/boards/43
                    tasks:
                    - id: 8
                      name: No Jacket Required
                      pos: 65536.0
                      priority: very_high
                      spent_time: 0
                      points: 3
                      due_time: '2022-12-07T17:33:02.382Z'
                      list_id: 21
                      deleted_at: '2022-11-30T17:33:02.394Z'
                      url: http://www.example.com/api/tasks/8
                      list_url: http://www.example.com/api/lists/21
                      users: []
                      tags: []
                    - id: 9
                      name: Appetite for Destruction
                      pos: 65536.0
                      priority: high
                      spent_time: 0
                      points: 5
                      due_time: '2022-12-07T17:33:02.396Z'
                      list_id: 21
                      deleted_at: '2022-11-30T17:33:02.407Z'
                      url: http://www.example.com/api/tasks/9
                      list_url: http://www.example.com/api/lists/21
                      users:
                      - id: 41
                        name: Angelia Murazik
                        avatar_url: https://www.gravatar.com/avatar/c6007a9ec645e397a4b13511098e24db
                        role: regular
                        url: http://www.example.com/api/users/41
                      tags:
                      - id: 5
                        name: Mining
                        colour: "#0cf8a0"
                        url: http://www.example.com/api/tags/5
                successful:
                  summary: successful
                  value:
                    id: 24
                    name: coffee
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 47
                    created_at: '2022-11-30T17:33:02.443Z'
                    updated_at: '2022-11-30T17:33:02.443Z'
                    custom_data: {}
                    url: http://www.example.com/api/lists/24
                    board_url: http://www.example.com/api/boards/47
              schema:
                "$ref": "#/components/schemas/list_response"
    put:
      summary: Update list
      tags:
      - Lists
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 25
                    name: New Name
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 48
                    created_at: '2022-11-30T17:33:02.463Z'
                    updated_at: '2022-11-30T17:33:02.478Z'
                    custom_data: {}
                    url: http://www.example.com/api/lists/25
                    board_url: http://www.example.com/api/boards/48
              schema:
                "$ref": "#/components/schemas/list_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/list_request"
    delete:
      summary: Delete list
      tags:
      - Lists
      responses:
        '204':
          description: successful
  "/api/script_runs":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: List script runs
      tags:
      - ScriptRuns
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - id: 1
                    script_id: 1
                    input: puts 'Hello world'
                    output: Hello world
                    initiator_id: 48
                    state: running
                    delay:
                    url: http://www.example.com/api/script_runs/1
                  - id: 2
                    script_id: 2
                    input: puts 'Hello world'
                    output: Hello world
                    initiator_id: 50
                    state: running
                    delay:
                    url: http://www.example.com/api/script_runs/2
                  - id: 3
                    script_id: 3
                    input: puts 'Hello world'
                    output: Hello world
                    initiator_id: 52
                    state: running
                    delay:
                    url: http://www.example.com/api/script_runs/3
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/script_run_response"
  "/api/scripts/{id}/script_runs":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Script id
      required: true
      schema:
        type: string
    get:
      summary: List script's script runs
      tags:
      - ScriptRuns
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - id: 4
                    script_id: 4
                    input: puts 'Hello world'
                    output: Hello world
                    initiator_id: 56
                    state: running
                    delay:
                    url: http://www.example.com/api/script_runs/4
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/script_run_response"
  "/api/script_runs/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show script run
      tags:
      - ScriptRuns
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 5
                    script_id: 5
                    input: puts 'Hello world'
                    output: Hello world
                    initiator_id: 60
                    state: running
                    delay:
                    url: http://www.example.com/api/script_runs/5
              schema:
                "$ref": "#/components/schemas/script_run_response"
    put:
      summary: Update script run
      tags:
      - ScriptRuns
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 6
                    script_id: 6
                    input: puts 'Hello world'
                    output: example output
                    initiator_id: 64
                    state: executed
                    delay:
                    url: http://www.example.com/api/script_runs/6
              schema:
                "$ref": "#/components/schemas/script_run_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/script_run_request"
  "/api/script_triggers":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    post:
      summary: Create script trigger
      tags:
      - Script triggers
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 1
                    script_id: 7
                    subject_type: DB::Task
                    subject_id: 10
                    action: destroy
                    delay: 60
                    url: http://www.example.com/api/script_triggers/1
              schema:
                "$ref": "#/components/schemas/script_trigger_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/script_trigger_request"
  "/api/script_triggers/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show script trigger
      tags:
      - Script triggers
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 2
                    script_id: 8
                    subject_type:
                    subject_id:
                    action: create
                    delay: 60
                    url: http://www.example.com/api/script_triggers/2
              schema:
                "$ref": "#/components/schemas/script_trigger_response"
    put:
      summary: Update script trigger
      tags:
      - Script triggers
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 3
                    script_id: 9
                    subject_type:
                    subject_id:
                    action: destroy
                    delay: 60
                    url: http://www.example.com/api/script_triggers/3
              schema:
                "$ref": "#/components/schemas/script_trigger_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/script_trigger_request"
    delete:
      summary: Delete script_trigger
      tags:
      - Script triggers
      responses:
        '204':
          description: successful
  "/api/scripts":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: List scripts
      tags:
      - Scripts
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - id: 11
                    content: puts 'hello world'
                    name: My first Lambdee Script
                    description: Description of the script
                    author_id: 80
                    url: http://www.example.com/api/scripts/11
                  - id: 12
                    content: puts 'hello world'
                    name: My first Lambdee Script
                    description: Description of the script
                    author_id: 81
                    url: http://www.example.com/api/scripts/12
                  - id: 13
                    content: puts 'hello world'
                    name: My first Lambdee Script
                    description: Description of the script
                    author_id: 82
                    url: http://www.example.com/api/scripts/13
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/script_response"
    post:
      summary: Create Script
      tags:
      - Scripts
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 14
                    content: puts 'Hello world!'
                    name: New Script
                    description: What script does
                    author_id: 85
                    url: http://www.example.com/api/scripts/14
                    script_triggers:
                    - id: 5
                      script_id: 14
                      subject_type:
                      subject_id:
                      action: create
                      delay: 60
                      url: http://www.example.com/api/script_triggers/5
                    - id: 6
                      script_id: 14
                      subject_type: DB::Task
                      subject_id:
                      action: update
                      delay: 60
                      url: http://www.example.com/api/script_triggers/6
                    - id: 7
                      script_id: 14
                      subject_type: DB::Task
                      subject_id: 11
                      action: destroy
                      delay: 60
                      url: http://www.example.com/api/script_triggers/7
              schema:
                "$ref": "#/components/schemas/script_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/script_request"
  "/api/scripts/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show Script
      tags:
      - Scripts
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 15
                    content: puts 'hello world'
                    name: My first Lambdee Script
                    description: Description of the script
                    author_id: 88
                    url: http://www.example.com/api/scripts/15
                    script_triggers: []
              schema:
                "$ref": "#/components/schemas/script_response"
    put:
      summary: Update Script
      tags:
      - Scripts
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 16
                    content: puts 'hello world'
                    name: New Name
                    description: Description of the script
                    author_id: 91
                    url: http://www.example.com/api/scripts/16
                    script_triggers:
                    - id: 9
                      script_id: 16
                      subject_type:
                      subject_id:
                      action: create
                      delay: 60
                      url: http://www.example.com/api/script_triggers/9
              schema:
                "$ref": "#/components/schemas/script_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/script_request"
    delete:
      summary: Delete script
      tags:
      - Scripts
      responses:
        '204':
          description: successful
  "/api/boards/{id}/sprints":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Board id
      required: true
      schema:
        type: string
    get:
      summary: List board's sprints
      tags:
      - Sprints
      parameters:
      - name: page
        in: query
        required: false
        description: Decides which result page should be returned.
        example: 2
        schema:
          type: integer
      - name: per
        in: query
        required: false
        description: Decides how many entities should be returned per one page. **Works
          only, when `page` param is given.**
        example: 2
        schema:
          type: integer
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    sprints:
                    - id: 1
                      board_id: 52
                      name: Hervey Bay
                      description: Laudantium est omnis. Ut a vel. Ut fugiat et.
                      started_at: '2022-11-30T17:33:02.988Z'
                      expected_end_at: '2022-12-07T17:33:02.988Z'
                      ended_at:
                      final_list_name: Done
                      custom_data: {}
                      url: http://www.example.com/api/sprints/1
                    - id: 2
                      board_id: 52
                      name: Perth
                      description: Dolorem iste tenetur. Excepturi explicabo ut. Autem
                        aut rem.
                      started_at: '2022-11-30T17:33:02.992Z'
                      expected_end_at: '2022-12-07T17:33:02.992Z'
                      ended_at:
                      final_list_name: Done
                      custom_data: {}
                      url: http://www.example.com/api/sprints/2
                    - id: 3
                      board_id: 52
                      name: Launceston
                      description: Ut eos voluptas. Temporibus facilis non. Et distinctio
                        a.
                      started_at: '2022-11-30T17:33:02.994Z'
                      expected_end_at: '2022-12-07T17:33:02.994Z'
                      ended_at:
                      final_list_name: Done
                      custom_data: {}
                      url: http://www.example.com/api/sprints/3
              schema:
                "$ref": "#/components/schemas/sprint_pages_response"
  "/api/sprints":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: List sprints
      tags:
      - Sprints
      parameters:
      - name: page
        in: query
        required: false
        description: Decides which result page should be returned.
        example: 2
        schema:
          type: integer
      - name: per
        in: query
        required: false
        description: Decides how many entities should be returned per one page. **Works
          only, when `page` param is given.**
        example: 2
        schema:
          type: integer
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    sprints: []
              schema:
                "$ref": "#/components/schemas/sprint_pages_response"
    post:
      summary: Create sprint
      tags:
      - Sprints
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 4
                    board_id: 53
                    name: New Sprint
                    description: Example description of new sprint
                    started_at: '2022-11-30T17:33:03.058Z'
                    expected_end_at: '2025-12-11T23:00:00.000Z'
                    ended_at:
                    final_list_name: Done
                    custom_data: {}
                    url: http://www.example.com/api/sprints/4
              schema:
                "$ref": "#/components/schemas/sprint_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/sprint_request"
  "/api/sprints/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    - name: tasks
      in: query
      example: all
      required: false
      schema:
        type: string
    get:
      summary: Show Sprint
      tags:
      - Sprints
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful with `tasks=all`:
                  summary: successful with `tasks=all`
                  value:
                    id: 5
                    board_id: 54
                    name: Bathurst
                    description: Temporibus quis eos. Omnis consectetur aspernatur.
                      Quaerat vel nemo.
                    started_at: '2022-11-30T17:33:03.067Z'
                    expected_end_at: '2022-12-07T17:33:03.067Z'
                    ended_at:
                    final_list_name: Done
                    custom_data: {}
                    url: http://www.example.com/api/sprints/5
                    tasks:
                    - id: 12
                      name: Led Zeppelin IV
                      priority: very_high
                      spent_time: 0
                      points: 2
                      added_at: '2022-11-30T17:33:03.091Z'
                      completed_at:
                      start_state: To Do
                      state: Doing
                successful:
                  summary: successful
                  value:
                    id: 6
                    board_id: 56
                    name: Warrnambool
                    description: Id nisi sunt. Qui dolorem tempora. Illo voluptas
                      voluptatibus.
                    started_at: '2022-11-30T17:33:03.115Z'
                    expected_end_at: '2022-12-07T17:33:03.115Z'
                    ended_at:
                    final_list_name: Done
                    custom_data: {}
                    url: http://www.example.com/api/sprints/6
              schema:
                "$ref": "#/components/schemas/sprint_response"
    put:
      summary: Update Sprint
      tags:
      - Sprints
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 7
                    board_id: 57
                    name: New Name
                    description: Nihil dolor veniam. Debitis ut maxime. Inventore
                      consequatur placeat.
                    started_at: '2022-11-30T17:33:03.139Z'
                    expected_end_at: '2022-12-07T17:33:03.139Z'
                    ended_at:
                    final_list_name: Done
                    custom_data: {}
                    url: http://www.example.com/api/sprints/7
              schema:
                "$ref": "#/components/schemas/sprint_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/sprint_request"
    delete:
      summary: Delete sprint
      tags:
      - Sprints
      responses:
        '204':
          description: successful
  "/api/sprints/{id}/end":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    put:
      summary: End sprint
      tags:
      - Sprints
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 9
                    board_id: 59
                    name: Bunbury
                    description: Enim sunt alias. Excepturi aliquam et. Quo hic voluptatem.
                    started_at: '2022-11-30T17:33:03.193Z'
                    expected_end_at: '2022-12-07T17:33:03.193Z'
                    ended_at: '2022-11-30T17:33:03.212Z'
                    final_list_name: Done
                    custom_data: {}
                    url: http://www.example.com/api/sprints/9
              schema:
                "$ref": "#/components/schemas/sprint_response"
  "/api/boards/{id}/active_sprint":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show active sprint
      tags:
      - Sprints
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 10
                    board_id: 60
                    name: Albany
                    description: Sed nobis recusandae. Neque sed eum. Eaque aspernatur
                      cupiditate.
                    started_at: '2022-11-30T17:33:03.220Z'
                    expected_end_at: '2022-12-07T17:33:03.220Z'
                    ended_at:
                    final_list_name: Done
                    custom_data: {}
                    url: http://www.example.com/api/sprints/10
              schema:
                "$ref": "#/components/schemas/sprint_response"
  "/api/sprints/{id}/burn_up_chart":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show data for burn up chart
      tags:
      - Sprints
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - name: Work Scope
                    data:
                      '2022-11-30': 0
                      '2022-12-07': 0
                  - name: Completed Work
                    data:
                      '2022-11-30': 0
                      '2022-12-07':
  "/api/boards/{id}/tags":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Board id
      required: true
      schema:
        type: string
    get:
      summary: List board's tags
      tags:
      - Tags
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - id: 6
                    name: Farming
                    colour: "#b87c7d"
                    url: http://www.example.com/api/tags/6
                    board_id: 62
                    created_at: '2022-11-30T17:33:03.271Z'
                    updated_at: '2022-11-30T17:33:03.271Z'
                    custom_data: {}
                  - id: 7
                    name: Banking
                    colour: "#dcc0f9"
                    url: http://www.example.com/api/tags/7
                    board_id: 62
                    created_at: '2022-11-30T17:33:03.273Z'
                    updated_at: '2022-11-30T17:33:03.273Z'
                    custom_data: {}
                  - id: 8
                    name: Healthcare
                    colour: "#10845c"
                    url: http://www.example.com/api/tags/8
                    board_id: 62
                    created_at: '2022-11-30T17:33:03.274Z'
                    updated_at: '2022-11-30T17:33:03.274Z'
                    custom_data: {}
                  - id: 9
                    name: Banking
                    colour: "#b05cfe"
                    url: http://www.example.com/api/tags/9
                    board_id: 62
                    created_at: '2022-11-30T17:33:03.275Z'
                    updated_at: '2022-11-30T17:33:03.275Z'
                    custom_data: {}
                  - id: 10
                    name: Mining
                    colour: "#9d4263"
                    url: http://www.example.com/api/tags/10
                    board_id: 62
                    created_at: '2022-11-30T17:33:03.276Z'
                    updated_at: '2022-11-30T17:33:03.276Z'
                    custom_data: {}
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/tag_response"
    post:
      summary: Create tag
      tags:
      - Tags
      parameters:
      - name: id
        in: path
        description: Board id
        required: true
        schema:
          type: string
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 11
                    name: New Tag
                    colour: "#fff000"
                    url: http://www.example.com/api/tags/11
                    board_id: 63
                    created_at: '2022-11-30T17:33:03.320Z'
                    updated_at: '2022-11-30T17:33:03.320Z'
                    custom_data: {}
              schema:
                "$ref": "#/components/schemas/tag_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/tag_request"
  "/api/tags":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    post:
      summary: Create tag
      tags:
      - Tags
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 12
                    name: New Tag
                    colour: "#fff000"
                    url: http://www.example.com/api/tags/12
                    board_id: 64
                    created_at: '2022-11-30T17:33:03.353Z'
                    updated_at: '2022-11-30T17:33:03.353Z'
                    custom_data: {}
              schema:
                "$ref": "#/components/schemas/tag_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/tag_request"
  "/api/tasks/{id}/tags":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Task id
      required: true
      schema:
        type: string
    get:
      summary: List task's tags
      tags:
      - Tags
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - id: 13
                    name: Sales
                    colour: "#420ac5"
                    url: http://www.example.com/api/tags/13
                    board_id: 65
                    created_at: '2022-11-30T17:33:03.372Z'
                    updated_at: '2022-11-30T17:33:03.372Z'
                    custom_data: {}
                  - id: 14
                    name: Sales
                    colour: "#af90c9"
                    url: http://www.example.com/api/tags/14
                    board_id: 65
                    created_at: '2022-11-30T17:33:03.374Z'
                    updated_at: '2022-11-30T17:33:03.374Z'
                    custom_data: {}
                  - id: 15
                    name: Accounting
                    colour: "#e13516"
                    url: http://www.example.com/api/tags/15
                    board_id: 65
                    created_at: '2022-11-30T17:33:03.377Z'
                    updated_at: '2022-11-30T17:33:03.377Z'
                    custom_data: {}
                  - id: 16
                    name: Marketing
                    colour: "#4658aa"
                    url: http://www.example.com/api/tags/16
                    board_id: 65
                    created_at: '2022-11-30T17:33:03.379Z'
                    updated_at: '2022-11-30T17:33:03.379Z'
                    custom_data: {}
                  - id: 17
                    name: Education
                    colour: "#95003c"
                    url: http://www.example.com/api/tags/17
                    board_id: 65
                    created_at: '2022-11-30T17:33:03.381Z'
                    updated_at: '2022-11-30T17:33:03.381Z'
                    custom_data: {}
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/tag_response"
    post:
      summary: Create tag (associated with given task and task's board)
      tags:
      - Tags
      parameters:
      - name: id
        in: path
        description: Task id
        required: true
        schema:
          type: string
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 18
                    name: New Tag
                    colour: "#fff000"
                    url: http://www.example.com/api/tags/18
                    board_id: 66
                    created_at: '2022-11-30T17:33:03.429Z'
                    updated_at: '2022-11-30T17:33:03.429Z'
                    custom_data: {}
              schema:
                "$ref": "#/components/schemas/tag_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/tag_request"
  "/api/tags/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show Tags
      tags:
      - Tags
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 19
                    name: Hospitality
                    colour: "#ad7fdf"
                    url: http://www.example.com/api/tags/19
                    board_id: 67
                    created_at: '2022-11-30T17:33:03.439Z'
                    updated_at: '2022-11-30T17:33:03.439Z'
                    custom_data: {}
              schema:
                "$ref": "#/components/schemas/tag_response"
    put:
      summary: Update Tag
      tags:
      - Tags
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 20
                    name: New Name
                    colour: "#ad6bb4"
                    url: http://www.example.com/api/tags/20
                    board_id: 68
                    created_at: '2022-11-30T17:33:03.461Z'
                    updated_at: '2022-11-30T17:33:03.476Z'
                    custom_data: {}
              schema:
                "$ref": "#/components/schemas/tag_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/tag_request"
    delete:
      summary: Delete tag
      tags:
      - Tags
      responses:
        '204':
          description: successful
  "/api/tasks":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: List tasks
      tags:
      - Tasks
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - id: 16
                    name: "(What's the Story) Morning Glory?"
                    pos: 65536.0
                    priority: high
                    spent_time: 0
                    points: 3
                    due_time: '2022-12-07T17:33:03.503Z'
                    list_id: 33
                    deleted_at:
                    url: http://www.example.com/api/tasks/16
                    list_url: http://www.example.com/api/lists/33
                    description: "#### Autem\nOccaecati tenetur hic. Nostrum placeat
                      eveniet. Illo labore et. Temporibus porro voluptatum. Quia in
                      aut.\n* Inventore. \n* Inventore. \n* Eius. \n* Qui. \n* Placeat.
                      \n* Vel. \n* Assumenda. \n"
                    created_at: '2022-11-30T17:33:03.512Z'
                    updated_at: '2022-11-30T17:33:03.512Z'
                  - id: 17
                    name: The Wall
                    pos: 65536.0
                    priority: very_low
                    spent_time: 0
                    points: 1
                    due_time: '2022-12-07T17:33:03.513Z'
                    list_id: 34
                    deleted_at:
                    url: http://www.example.com/api/tasks/17
                    list_url: http://www.example.com/api/lists/34
                    description: |-
                      ##### Occaecati
                      Neque tenetur aut. Delectus fugit beatae. Rerum repellat tempora.
                      `Est.`
                    created_at: '2022-11-30T17:33:03.521Z'
                    updated_at: '2022-11-30T17:33:03.521Z'
                  - id: 18
                    name: Backstreet Boys
                    pos: 65536.0
                    priority: low
                    spent_time: 0
                    points: 3
                    due_time: '2022-12-07T17:33:03.523Z'
                    list_id: 35
                    deleted_at:
                    url: http://www.example.com/api/tasks/18
                    list_url: http://www.example.com/api/lists/35
                    description: "#### Ducimus\nIpsum est id. Voluptas facilis voluptatibus.
                      Nostrum dolorem reprehenderit.\n0. Ut. \n1. Libero. \n2. Numquam.
                      \n3. Voluptates. \n4. Dolorum. \n5. Velit. \n6. Facere. \n7.
                      Est. \n8. Dolores. \n9. Quo. \n"
                    created_at: '2022-11-30T17:33:03.531Z'
                    updated_at: '2022-11-30T17:33:03.531Z'
                  - id: 19
                    name: Riot!
                    pos: 65536.0
                    priority: very_high
                    spent_time: 0
                    points: 1
                    due_time: '2022-12-07T17:33:03.533Z'
                    list_id: 36
                    deleted_at:
                    url: http://www.example.com/api/tasks/19
                    list_url: http://www.example.com/api/lists/36
                    description: |-
                      ## Voluptas
                      Nisi ut sit. Est et nihil. Ea voluptas et. Saepe aut vel. Cupiditate omnis dolorem.
                      ```ruby
                      Maiores.
                      ```
                    created_at: '2022-11-30T17:33:03.541Z'
                    updated_at: '2022-11-30T17:33:03.541Z'
                  - id: 20
                    name: Faith
                    pos: 65536.0
                    priority: very_high
                    spent_time: 0
                    points: 2
                    due_time: '2022-12-07T17:33:03.543Z'
                    list_id: 37
                    deleted_at:
                    url: http://www.example.com/api/tasks/20
                    list_url: http://www.example.com/api/lists/37
                    description: "## Non\nRatione ullam perspiciatis. Nobis autem
                      molestiae. Non consequatur est.\n* Ut. \n* Ipsa. \n* Dolor.
                      \n* Quisquam. \n* Eligendi. \n* Magnam. \n* Ea. \n* Velit. \n*
                      In. \n* Omnis. \n"
                    created_at: '2022-11-30T17:33:03.551Z'
                    updated_at: '2022-11-30T17:33:03.551Z'
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/task_response"
    post:
      summary: Create Task
      tags:
      - Tasks
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 21
                    name: New Task
                    pos: 65536.0
                    priority:
                    spent_time: 0
                    points:
                    due_time:
                    list_id: 38
                    deleted_at:
                    url: http://www.example.com/api/tasks/21
                    list_url: http://www.example.com/api/lists/38
                    description:
                    created_at: '2022-11-30T17:33:03.594Z'
                    updated_at: '2022-11-30T17:33:03.594Z'
              schema:
                "$ref": "#/components/schemas/task_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/task_request"
  "/api/tasks/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Task id
      required: true
      schema:
        type: string
    get:
      summary: Show Taks
      parameters:
      - name: include_associations
        in: query
        required: false
        description: If true, extended object with all associations is returned.
        schema:
          type: string
      tags:
      - Tasks
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful with `include_associations=true`:
                  summary: successful with `include_associations=true`
                  value:
                    id: 22
                    name: Appetite for Destruction
                    pos: 65536.0
                    priority: very_high
                    spent_time: 0
                    points: 5
                    due_time: '2022-12-07T17:33:03.600Z'
                    list_id: 39
                    deleted_at:
                    url: http://www.example.com/api/tasks/22
                    list_url: http://www.example.com/api/lists/39
                    description: "#### Soluta\nAt ipsum placeat. Nisi ut possimus.
                      Perspiciatis reprehenderit voluptate. Error eum sed.\n0. Nemo.
                      \n1. Et. \n2. Mollitia. \n3. Sint. \n"
                    created_at: '2022-11-30T17:33:03.609Z'
                    updated_at: '2022-11-30T17:33:03.609Z'
                    list:
                      id: 39
                      name: pear
                      pos: 65536.0
                      visible: false
                      deleted_at:
                      board_id: 76
                      created_at: '2022-11-30T17:33:03.603Z'
                      updated_at: '2022-11-30T17:33:03.603Z'
                      custom_data: {}
                      url: http://www.example.com/api/lists/39
                      board_url: http://www.example.com/api/boards/76
                    author:
                      id: 144
                      name: Darrin Torp
                      avatar_url: https://www.gravatar.com/avatar/7fde0f137b0925ec14c27503cba383b2
                      role: regular
                      url: http://www.example.com/api/users/144
                      email: darrin_torp.1669829583@example.com
                      created_at: '2022-11-30T17:33:03.607Z'
                      updated_at: '2022-11-30T17:33:03.607Z'
                      custom_data: {}
                    users:
                    - id: 145
                      name: Archie Shields
                      avatar_url: https://www.gravatar.com/avatar/60e5b80deb41d5985e188096055b7352
                      role: developer
                      url: http://www.example.com/api/users/145
                      email: archie_shields.1669829583@example.com
                      created_at: '2022-11-30T17:33:03.612Z'
                      updated_at: '2022-11-30T17:33:03.612Z'
                      custom_data: {}
                    - id: 146
                      name: Paulina Kunze Jr.
                      avatar_url: https://www.gravatar.com/avatar/54768d61e0409e1893f77e9965972f31
                      role: manager
                      url: http://www.example.com/api/users/146
                      email: paulina_kunze_jr.1669829583@example.com
                      created_at: '2022-11-30T17:33:03.617Z'
                      updated_at: '2022-11-30T17:33:03.617Z'
                      custom_data: {}
                    tags:
                    - id: 22
                      name: Hospitality
                      colour: "#454951"
                      url: http://www.example.com/api/tags/22
                      board_id: 77
                      created_at: '2022-11-30T17:33:03.621Z'
                      updated_at: '2022-11-30T17:33:03.621Z'
                      custom_data: {}
                    - id: 23
                      name: Hospitality
                      colour: "#e11f6b"
                      url: http://www.example.com/api/tags/23
                      board_id: 78
                      created_at: '2022-11-30T17:33:03.626Z'
                      updated_at: '2022-11-30T17:33:03.626Z'
                      custom_data: {}
                    - id: 24
                      name: Education
                      colour: "#deb35c"
                      url: http://www.example.com/api/tags/24
                      board_id: 79
                      created_at: '2022-11-30T17:33:03.630Z'
                      updated_at: '2022-11-30T17:33:03.630Z'
                      custom_data: {}
                successful:
                  summary: successful
                  value:
                    id: 23
                    name: The Woman in Me
                    pos: 65536.0
                    priority: very_low
                    spent_time: 0
                    points: 4
                    due_time: '2022-12-07T17:33:03.654Z'
                    list_id: 40
                    deleted_at:
                    url: http://www.example.com/api/tasks/23
                    list_url: http://www.example.com/api/lists/40
                    description: |-
                      ## Quia
                      Culpa esse modi. Pariatur ea est. Maxime consequatur voluptatem. Omnis quo iste.
                      ## Et
                    created_at: '2022-11-30T17:33:03.662Z'
                    updated_at: '2022-11-30T17:33:03.662Z'
              schema:
                "$ref": "#/components/schemas/task_response"
    put:
      summary: Update Task
      tags:
      - Tasks
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 24
                    name: New Name
                    pos: 65536.0
                    priority: very_high
                    spent_time: 0
                    points: 5
                    due_time: '2022-12-07T17:33:03.680Z'
                    list_id: 41
                    deleted_at:
                    url: http://www.example.com/api/tasks/24
                    list_url: http://www.example.com/api/lists/41
                    description: "### Ut\nVoluptas architecto dolore. Architecto voluptas
                      dolor. Assumenda eos non.\n* Unde. \n* Harum. \n* Qui. \n* Rerum.
                      \n* Consequatur. \n* Aliquid. \n* Consequatur. \n* Dolorum.
                      \n"
                    created_at: '2022-11-30T17:33:03.689Z'
                    updated_at: '2022-11-30T17:33:03.704Z'
              schema:
                "$ref": "#/components/schemas/task_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/task_request"
    delete:
      summary: Delete Task
      tags:
      - Tasks
      responses:
        '204':
          description: successful
  "/api/tasks/{id}/add_time":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Task id
      required: true
      schema:
        type: string
    put:
      summary: Add time
      tags:
      - Tasks
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 26
                    name: Songs About Jane
                    pos: 65536.0
                    priority: low
                    spent_time: 1200
                    points: 2
                    due_time: '2022-12-07T17:33:03.737Z'
                    list_id: 43
                    deleted_at:
                    url: http://www.example.com/api/tasks/26
                    list_url: http://www.example.com/api/lists/43
                    description: "#### Omnis\nIn molestias porro. Voluptates cumque
                      eligendi. Aut possimus laudantium. Incidunt facere aut.\n0.
                      Veritatis. \n1. Reiciendis. \n2. Eaque. \n3. Facere. \n"
                    created_at: '2022-11-30T17:33:03.745Z'
                    updated_at: '2022-11-30T17:33:03.760Z'
        '422':
          description: non integer time
          content:
            application/json:
              examples:
                incorrect unit:
                  summary: incorrect unit
                  value:
                    unit:
                    - is not included in the list
                negative time:
                  summary: negative time
                  value:
                    time:
                    - must be greater than 0
                non integer time:
                  summary: non integer time
                  value:
                    time:
                    - must be greater than 0
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                time:
                  type: integer
                unit:
                  type: string
                  enum: "#<Set: {:day, :hour, :minute, :second}>"
  "/api/tasks/{id}/attach_tag":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Task id
      required: true
      schema:
        type: string
    post:
      summary: Attach Tag
      tags:
      - Tasks
      parameters: []
      responses:
        '204':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                tag_id:
                  type: integer
  "/api/tasks/{id}/detach_tag":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Task id
      required: true
      schema:
        type: string
    post:
      summary: Detach Tag
      tags:
      - Tasks
      parameters: []
      responses:
        '204':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                tag_id:
                  type: integer
  "/api/tasks/{id}/assign_user":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Task id
      required: true
      schema:
        type: string
    post:
      summary: Assign User
      tags:
      - Tasks
      parameters: []
      responses:
        '204':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
  "/api/tasks/{id}/unassign_user":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Task id
      required: true
      schema:
        type: string
    post:
      summary: Unassign User
      tags:
      - Tasks
      parameters: []
      responses:
        '204':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
  "/api/workspaces/{id}/users":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: List users of workspace
      tags:
      - Users
      parameters:
      - name: id
        in: path
        description: Workspace id
        required: true
        schema:
          type: string
      - name: page
        in: query
        required: false
        description: Decides which result page should be returned.
        example: 2
        schema:
          type: integer
      - name: role
        in: query
        required: false
        schema:
          "$ref": "#/components/schemas/user_request/properties/role"
        example: admin
      - name: created_at_from
        in: query
        required: false
        description: Date with format YYYY.MM.DD
        example: 2010.01.25
        schema:
          type: string
      - name: created_at_to
        in: query
        required: false
        description: Date with format YYYY.MM.DD
        example: 2010.01.25
        schema:
          type: string
      - name: search
        in: query
        required: false
        description: Searches for users by name and e-mail.
        example: michael
        schema:
          type: string
      - name: per
        in: query
        required: false
        description: Decides how many entities should be returned per one page. **Works
          only, when `page` param is given.**
        example: 2
        schema:
          type: integer
      - name: limit
        in: query
        required: false
        description: Decides how many entities should be returned.
        example: 3
        schema:
          type: integer
      responses:
        '200':
          description: successful with pages
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    users:
                    - id: 172
                      name: Oren Feil
                      avatar_url: https://www.gravatar.com/avatar/5944d93e0d43af26cdaf5d010f1abd0c
                      role: regular
                      url: http://www.example.com/api/users/172
                      email: oren_feil.1669829583@example.com
                      created_at: '2022-11-30T17:33:03.974Z'
                      updated_at: '2022-11-30T17:33:03.974Z'
                      custom_data: {}
                    - id: 173
                      name: Jimmy Bernier
                      avatar_url: https://www.gravatar.com/avatar/ee9d2f8e7ba4230ab8d3b907ddfdd3fc
                      role: guest
                      url: http://www.example.com/api/users/173
                      email: jimmy_bernier.1669829583@example.com
                      created_at: '2022-11-30T17:33:03.983Z'
                      updated_at: '2022-11-30T17:33:03.983Z'
                      custom_data: {}
                    - id: 174
                      name: Michelina Bogisich
                      avatar_url: https://www.gravatar.com/avatar/a9c43d9c92829ee30f500d5e883025e2
                      role: guest
                      url: http://www.example.com/api/users/174
                      email: michelina_bogisich.1669829583@example.com
                      created_at: '2022-11-30T17:33:03.988Z'
                      updated_at: '2022-11-30T17:33:03.988Z'
                      custom_data: {}
                successful with pages:
                  summary: successful with pages
                  value:
                    users:
                    - id: 176
                      name: Jackson Predovic
                      avatar_url: https://www.gravatar.com/avatar/330c444b85a210aaee76dd0e705b5790
                      role: manager
                      url: http://www.example.com/api/users/176
                      email: jackson_predovic.1669829584@example.com
                      created_at: '2022-11-30T17:33:04.014Z'
                      updated_at: '2022-11-30T17:33:04.014Z'
                      custom_data: {}
                    - id: 177
                      name: Mrs. Nobuko Parisian
                      avatar_url: https://www.gravatar.com/avatar/657eea566a839b0fdc27ab38d9ad401e
                      role: developer
                      url: http://www.example.com/api/users/177
                      email: mrs_nobuko_parisian.1669829584@example.com
                      created_at: '2022-11-30T17:33:04.018Z'
                      updated_at: '2022-11-30T17:33:04.018Z'
                      custom_data: {}
                    - id: 178
                      name: Glayds Heaney
                      avatar_url: https://www.gravatar.com/avatar/85c5ba0a936f5efc4d7d1fdf537c9a70
                      role: guest
                      url: http://www.example.com/api/users/178
                      email: glayds_heaney.1669829584@example.com
                      created_at: '2022-11-30T17:33:04.023Z'
                      updated_at: '2022-11-30T17:33:04.023Z'
                      custom_data: {}
                    total_pages: 1
              schema:
                "$ref": "#/components/schemas/user_pages_response"
  "/api/users":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: List users
      tags:
      - Users
      parameters:
      - name: role_collection
        in: query
        schema:
          type: array
          items:
            "$ref": "#/components/schemas/user_request/properties/role"
        example:
        - admin
      - name: role
        in: query
        required: false
        schema:
          "$ref": "#/components/schemas/user_request/properties/role"
        example: admin
      - name: created_at_from
        in: query
        required: false
        description: Date with format YYYY.MM.DD
        example: 2010.01.25
        schema:
          type: string
      - name: created_at_to
        in: query
        required: false
        description: Date with format YYYY.MM.DD
        example: 2010.01.25
        schema:
          type: string
      - name: workspace_id
        in: query
        required: false
        example: 1
        schema:
          type: integer
      - name: search
        in: query
        required: false
        description: Searches for users by name and e-mail.
        example: michael
        schema:
          type: string
      - name: page
        in: query
        required: false
        description: Decides which result page should be returned.
        example: 2
        schema:
          type: integer
      - name: per
        in: query
        required: false
        description: Decides how many entities should be returned per one page. **Works
          only, when `page` param is given.**
        example: 2
        schema:
          type: integer
      - name: limit
        in: query
        required: false
        description: Decides how many entities should be returned.
        example: 3
        schema:
          type: integer
      responses:
        '200':
          description: successful with pages
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    users:
                    - id: 180
                      name: Santos Conroy
                      avatar_url: https://www.gravatar.com/avatar/e8d31181d0e0020569953361fab6be0e
                      role: manager
                      url: http://www.example.com/api/users/180
                      email: santos_conroy.1669829584@example.com
                      created_at: '2022-11-30T17:33:04.045Z'
                      updated_at: '2022-11-30T17:33:04.045Z'
                      custom_data: {}
                    - id: 181
                      name: Peter Will
                      avatar_url: https://www.gravatar.com/avatar/33e2d4cad42a0b88dbbf975238cb3df8
                      role: guest
                      url: http://www.example.com/api/users/181
                      email: peter_will.1669829584@example.com
                      created_at: '2022-11-30T17:33:04.048Z'
                      updated_at: '2022-11-30T17:33:04.048Z'
                      custom_data: {}
                    - id: 182
                      name: Lucien Hartmann
                      avatar_url: https://www.gravatar.com/avatar/cd710a0d334bd80d4f9dd18ea630dbe9
                      role: developer
                      url: http://www.example.com/api/users/182
                      email: lucien_hartmann.1669829584@example.com
                      created_at: '2022-11-30T17:33:04.052Z'
                      updated_at: '2022-11-30T17:33:04.052Z'
                      custom_data: {}
                    - id: 183
                      name: Will Kuhic
                      avatar_url: https://www.gravatar.com/avatar/f98df746820b5f783f47d326aff19687
                      role: regular
                      url: http://www.example.com/api/users/183
                      email: will_kuhic.1669829584@example.com
                      created_at: '2022-11-30T17:33:04.056Z'
                      updated_at: '2022-11-30T17:33:04.056Z'
                      custom_data: {}
                    - id: 184
                      name: Alonzo Okuneva
                      avatar_url: https://www.gravatar.com/avatar/6756e13614df937d96b1d4a8de87c36e
                      role: manager
                      url: http://www.example.com/api/users/184
                      email: alonzo_okuneva.1669829584@example.com
                      created_at: '2022-11-30T17:33:04.060Z'
                      updated_at: '2022-11-30T17:33:04.060Z'
                      custom_data: {}
                    - id: 185
                      name: Tad Considine
                      avatar_url: https://www.gravatar.com/avatar/413829cb31ee7daf49696083a3fb23eb
                      role: admin
                      url: http://www.example.com/api/users/185
                      email: tad_considine.1669829584@example.com
                      created_at: '2022-11-30T17:33:04.063Z'
                      updated_at: '2022-11-30T17:33:04.063Z'
                      custom_data: {}
                successful with pages:
                  summary: successful with pages
                  value:
                    users:
                    - id: 186
                      name: Lyla Buckridge
                      avatar_url: https://www.gravatar.com/avatar/4ee333a9868ebbb368b77d62c33124ce
                      role: manager
                      url: http://www.example.com/api/users/186
                      email: lyla_buckridge.1669829584@example.com
                      created_at: '2022-11-30T17:33:04.081Z'
                      updated_at: '2022-11-30T17:33:04.081Z'
                      custom_data: {}
                    - id: 187
                      name: Sona Wiegand CPA
                      avatar_url: https://www.gravatar.com/avatar/d1bc2812b9667e955987d57a37d8e316
                      role: developer
                      url: http://www.example.com/api/users/187
                      email: sona_wiegand_cpa.1669829584@example.com
                      created_at: '2022-11-30T17:33:04.085Z'
                      updated_at: '2022-11-30T17:33:04.085Z'
                      custom_data: {}
                    - id: 188
                      name: Virgina Sanford
                      avatar_url: https://www.gravatar.com/avatar/2d80df6a6cb7203c570a82931f1bfa11
                      role: manager
                      url: http://www.example.com/api/users/188
                      email: virgina_sanford.1669829584@example.com
                      created_at: '2022-11-30T17:33:04.088Z'
                      updated_at: '2022-11-30T17:33:04.088Z'
                      custom_data: {}
                    - id: 189
                      name: Dina Shields
                      avatar_url: https://www.gravatar.com/avatar/6203d7094d1508898e45cb4bd83f9cea
                      role: developer
                      url: http://www.example.com/api/users/189
                      email: dina_shields.1669829584@example.com
                      created_at: '2022-11-30T17:33:04.091Z'
                      updated_at: '2022-11-30T17:33:04.091Z'
                      custom_data: {}
                    - id: 190
                      name: Sonya Shanahan
                      avatar_url: https://www.gravatar.com/avatar/bb014a924e4ff7c21e2cebf8f68515dc
                      role: regular
                      url: http://www.example.com/api/users/190
                      email: sonya_shanahan.1669829584@example.com
                      created_at: '2022-11-30T17:33:04.094Z'
                      updated_at: '2022-11-30T17:33:04.094Z'
                      custom_data: {}
                    - id: 191
                      name: Sheree Halvorson
                      avatar_url: https://www.gravatar.com/avatar/43a43fc40b1f31468c640d63e65c1362
                      role: admin
                      url: http://www.example.com/api/users/191
                      email: sheree_halvorson.1669829584@example.com
                      created_at: '2022-11-30T17:33:04.098Z'
                      updated_at: '2022-11-30T17:33:04.098Z'
                      custom_data: {}
                    total_pages: 1
              schema:
                "$ref": "#/components/schemas/user_pages_response"
    post:
      summary: Create a user
      tags:
      - Users
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 193
                    name: New User
                    created_at: '2022-11-30T17:33:04.129Z'
                    updated_at: '2022-11-30T17:33:04.129Z'
                    email: new_user@example.com
                    role: developer
                    deleted_at:
                    recent_boards: []
                    custom_data: {}
              schema:
                "$ref": "#/components/schemas/user_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/user_request"
    put:
      summary: Update current user
      tags:
      - Users
      parameters: []
      responses:
        '204':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/user_update_request"
    delete:
      summary: Delete current user
      tags:
      - Users
      responses:
        '204':
          description: successful
  "/api/users/current":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: Show the currently signed in user
      tags:
      - Users
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 196
                    name: Coralee Davis
                    avatar_url: https://www.gravatar.com/avatar/ae9c3c31b2afbeea8725b7133d6a6a7c
                    role: admin
                    url: http://www.example.com/api/users/196
                    email: coralee_davis.1669829584@example.com
                    created_at: '2022-11-30T17:33:04.178Z'
                    updated_at: '2022-11-30T17:33:04.178Z'
                    custom_data: {}
              schema:
                "$ref": "#/components/schemas/user_response"
  "/api/users/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show a user
      tags:
      - Users
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 197
                    name: Leandro Watsica
                    avatar_url: https://www.gravatar.com/avatar/a8ddbca812ccef329e3d6e8307ed25b0
                    role: guest
                    url: http://www.example.com/api/users/197
                    email: leandro_watsica.1669829584@example.com
                    created_at: '2022-11-30T17:33:04.194Z'
                    updated_at: '2022-11-30T17:33:04.194Z'
                    custom_data: {}
              schema:
                "$ref": "#/components/schemas/user_response"
  "/api/users/sign_in":
    post:
      summary: Sign in
      tags:
      - Users
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 199
                    name: Rey Kris
                    created_at: '2022-11-30T17:33:04.212Z'
                    updated_at: '2022-11-30T17:33:04.212Z'
                    email: email@example.com
                    role: developer
                    deleted_at:
                    recent_boards: []
                    custom_data: {}
              schema:
                "$ref": "#/components/schemas/user_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/user_sign_in_request"
  "/api/users/sign_out":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    delete:
      summary: Sign out
      tags:
      - Users
      responses:
        '204':
          description: successful
  "/api/workspaces":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: list workspaces
      tags:
      - Workspaces
      security:
      - Bearer: {}
      parameters:
      - name: limit
        in: query
        description: Decides how many entities should be returned
        example: 3
        required: false
        schema:
          type: integer
      - name: boards
        in: query
        type: string
        schema:
          "$ref": "#/components/schemas/include_associated_enum"
        required: false
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful with `boards=all`:
                  summary: successful with `boards=all`
                  value:
                  - id: 95
                    name: Bitwolf
                    created_at: '2022-11-30T17:33:04.252Z'
                    updated_at: '2022-11-30T17:33:04.252Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/workspaces/95
                    boards:
                    - id: 93
                      name: Platinum
                      colour: "#740473"
                      workspace_id: 95
                      created_at: '2022-11-30T17:33:04.254Z'
                      updated_at: '2022-11-30T17:33:04.254Z'
                      deleted_at:
                      custom_data: {}
                      url: http://www.example.com/api/boards/93
                      workspace_url: http://www.example.com/api/workspaces/95
                    - id: 94
                      name: Rutherfordium
                      colour: "#27ee58"
                      workspace_id: 95
                      created_at: '2022-11-30T17:33:04.256Z'
                      updated_at: '2022-11-30T17:33:04.256Z'
                      deleted_at:
                      custom_data: {}
                      url: http://www.example.com/api/boards/94
                      workspace_url: http://www.example.com/api/workspaces/95
                    - id: 95
                      name: Lutetium
                      colour: "#518066"
                      workspace_id: 95
                      created_at: '2022-11-30T17:33:04.257Z'
                      updated_at: '2022-11-30T17:33:04.257Z'
                      deleted_at:
                      custom_data: {}
                      url: http://www.example.com/api/boards/95
                      workspace_url: http://www.example.com/api/workspaces/95
                    - id: 96
                      name: Phosphorus
                      colour: "#c0d452"
                      workspace_id: 95
                      created_at: '2022-11-30T17:33:04.258Z'
                      updated_at: '2022-11-30T17:33:04.258Z'
                      deleted_at:
                      custom_data: {}
                      url: http://www.example.com/api/boards/96
                      workspace_url: http://www.example.com/api/workspaces/95
                    - id: 97
                      name: Rhenium
                      colour: "#aeba28"
                      workspace_id: 95
                      created_at: '2022-11-30T17:33:04.259Z'
                      updated_at: '2022-11-30T17:33:04.259Z'
                      deleted_at:
                      custom_data: {}
                      url: http://www.example.com/api/boards/97
                      workspace_url: http://www.example.com/api/workspaces/95
                  - id: 96
                    name: Voyatouch
                    created_at: '2022-11-30T17:33:04.261Z'
                    updated_at: '2022-11-30T17:33:04.261Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/workspaces/96
                    boards: []
                successful:
                  summary: successful
                  value:
                  - id: 97
                    name: Asoka
                    created_at: '2022-11-30T17:33:04.285Z'
                    updated_at: '2022-11-30T17:33:04.285Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/workspaces/97
                  - id: 98
                    name: Kanlam
                    created_at: '2022-11-30T17:33:04.293Z'
                    updated_at: '2022-11-30T17:33:04.293Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/workspaces/98
                  - id: 99
                    name: Opela
                    created_at: '2022-11-30T17:33:04.295Z'
                    updated_at: '2022-11-30T17:33:04.295Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/workspaces/99
                  - id: 100
                    name: Opela
                    created_at: '2022-11-30T17:33:04.298Z'
                    updated_at: '2022-11-30T17:33:04.298Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/workspaces/100
                  - id: 101
                    name: Tres-Zap
                    created_at: '2022-11-30T17:33:04.300Z'
                    updated_at: '2022-11-30T17:33:04.300Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/workspaces/101
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/workspace_response"
    post:
      summary: create workspace
      tags:
      - Workspaces
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 102
                    name: New Workspace
                    created_at: '2022-11-30T17:33:04.335Z'
                    updated_at: '2022-11-30T17:33:04.335Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/workspaces/102
              schema:
                "$ref": "#/components/schemas/workspace_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/workspace_request"
  "/api/workspaces/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show workspace
      parameters:
      - name: boards
        in: query
        type: string
        schema:
          "$ref": "#/components/schemas/include_associated_enum"
        required: false
      tags:
      - Workspaces
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful with `boards=all`:
                  summary: successful with `boards=all`
                  value:
                    id: 103
                    name: Flowdesk
                    created_at: '2022-11-30T17:33:04.346Z'
                    updated_at: '2022-11-30T17:33:04.346Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/workspaces/103
                    boards:
                    - id: 98
                      name: Livermorium
                      colour: "#ead94c"
                      workspace_id: 103
                      created_at: '2022-11-30T17:33:04.348Z'
                      updated_at: '2022-11-30T17:33:04.349Z'
                      deleted_at:
                      custom_data: {}
                      url: http://www.example.com/api/boards/98
                      workspace_url: http://www.example.com/api/workspaces/103
                    - id: 99
                      name: Arsenic
                      colour: "#dc669a"
                      workspace_id: 103
                      created_at: '2022-11-30T17:33:04.352Z'
                      updated_at: '2022-11-30T17:33:04.353Z'
                      deleted_at:
                      custom_data: {}
                      url: http://www.example.com/api/boards/99
                      workspace_url: http://www.example.com/api/workspaces/103
                successful:
                  summary: successful
                  value:
                    id: 106
                    name: Zoolab
                    created_at: '2022-11-30T17:33:04.374Z'
                    updated_at: '2022-11-30T17:33:04.374Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/workspaces/106
              schema:
                "$ref": "#/components/schemas/workspace_response"
    put:
      summary: update workspace
      tags:
      - Workspaces
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 107
                    name: New Name
                    created_at: '2022-11-30T17:33:04.394Z'
                    updated_at: '2022-11-30T17:33:04.409Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/workspaces/107
              schema:
                "$ref": "#/components/schemas/workspace_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/workspace_request"
    delete:
      summary: delete workspace
      tags:
      - Workspaces
      responses:
        '204':
          description: successful
  "/api/workspaces/{id}/assign_user":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Workspace id
      required: true
      schema:
        type: string
    post:
      summary: Assign User
      tags:
      - Workspaces
      parameters: []
      responses:
        '204':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
  "/api/workspaces/{id}/unassign_user":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Workspace id
      required: true
      schema:
        type: string
    post:
      summary: Unassign User
      tags:
      - Workspaces
      parameters: []
      responses:
        '204':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
components:
  schemas:
    authorization:
      name: Authorization
      in: header
      type: string
      description: JWT token
      example: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiZGV2ZWxvcGVyIiwic3ViIjoiMSIsInNjcCI6InVzZXIiLCJhdWQiOm51bGwsImlhdCI6MTY2NjE4MDIzMiwiZXhwIjoxNjY3NDc2MjMyLCJqdGkiOiJhMzdlZTA5MC0zZGJmLTRhMzgtOTFiNy1mZTJlM2FiYjlkY2QifQ.tGGjFHfMszfGCfNZS6I-hQNLSu_2Xfs3W4hI8IT4CW0
      required: true
    include_associated_enum:
      type: string
      enum:
      - visible
      - invisible
      - non-archived
      - archived
      - all
    lambdee_models_enum:
      type: string
      enum:
      - DB::User
      - DB::Workspace
      - DB::Board
      - DB::List
      - DB::Task
      - DB::Comment
      - DB::Tag
      - DB::Sprint
      - DB::UserWorkspace
      - DB::TaskUser
      - DB::TaskTag
      - DB::SprintTask
    user_pages_response:
      type: object
      properties:
        users:
          type: array
          items:
            "$ref": "#components/schemas/user_response"
        total_pages:
          type: integer
      required:
      - users
    user_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        avatar_url:
          type: string
        url:
          type: string
        role:
          type: string
      required:
      - id
      - name
    user_request:
      type: object
      properties:
        user:
          type: object
          properties:
            name:
              type: string
            email:
              type: string
            password:
              type: string
            role:
              type: string
              enum:
              - guest
              - regular
              - developer
              - admin
              - manager
      required:
      - name
      - email
    user_update_request:
      type: object
      properties:
        user:
          type: object
          properties:
            name:
              type: string
            email:
              type: string
            password:
              type: string
            current_password:
              type: string
            role:
              type: string
              enum:
              - guest
              - regular
              - developer
              - admin
              - manager
      required:
      - current_password
    user_sign_in_request:
      type: object
      properties:
        user:
          type: object
          properties:
            email:
              type: string
            password:
              type: string
      required:
      - email
      - password
    comment_response:
      type: object
      properties:
        id:
          type: integer
        body:
          type: string
        deleted_at:
          type:
          - string
          - 'null'
          format: date_time
        author_id:
          type: integer
        task_id:
          type: integer
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        url:
          type: string
        users:
          type: array
          items:
            "$ref": "#/components/schemas/user_response"
          nullable: true
      required:
      - id
      - body
      - deleted_at
      - url
    tag_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        colour:
          type: string
        board_id:
          type: integer
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        url:
          type: string
        board_url:
          type: string
      required:
      - id
    tag_request:
      type: object
      properties:
        name:
          type: string
        colour:
          type: string
        board_id:
          type: integer
        task_id:
          type: integer
      required: []
    sprint_pages_response:
      type: object
      properties:
        sprints:
          type: array
          items:
            "$ref": "#components/schemas/sprint_response"
        total_pages:
          type: integer
      required:
      - sprints
    sprint_response:
      type: object
      properties:
        id:
          type: integer
        board_id:
          type: integer
        name:
          type: string
        description:
          type:
          - string
          - 'null'
        started_at:
          type: string
          format: date_time
        expected_end_at:
          type: string
          format: date_time
        ended_at:
          type:
          - string
          - 'null'
          format: date_time
        final_list_name:
          type: string
        url:
          type: string
        tasks:
          type: array
          items:
            "$ref": "#/components/schemas/task_with_sprint_task_response"
          nullable: true
      required:
      - id
      - name
    task_with_sprint_task_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        priority:
          type: string
        spent_time:
          type: integer
        points:
          type: integer
        added_at:
          type: string
          format: date_time
        completed_at:
          type:
          - string
          - 'null'
          format: date_time
        start_state:
          type: string
        state:
          type: string
      required:
      - id
    sprint_request:
      type: object
      properties:
        board_id:
          type: integer
        name:
          type: string
        description:
          type: string
        started_at:
          type: string
          format: date_time
          example: '2025-12-11T23:00:00'
        expected_end_at:
          type: string
          format: date_time
          example: '2025-12-18T23:00:00'
      required:
      - name
      - expected_end_at
    task_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type:
          - string
          - 'null'
        due_time:
          type:
          - string
          - 'null'
          format: date_time
        pos:
          type:
          - number
          - 'null'
          format: float
        priority:
          type:
          - string
          - 'null'
        points:
          type:
          - number
          - 'null'
          format: float
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        deleted_at:
          type:
          - string
          - 'null'
          format: date_time
        list_id:
          type: integer
        list_url:
          type: string
        url:
          type: string
        users:
          type: array
          items:
            "$ref": "#/components/schemas/user_response"
          nullable: true
        tags:
          type: array
          items:
            "$ref": "#/components/schemas/tag_response"
          nullable: true
        author:
          type: object
          schema:
            "$ref": "#/components/schemas/user_response"
          nullable: true
      required:
      - id
      - name
      - pos
      - priority
      - points
      - list_id
      - deleted_at
    task_request:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        due_time:
          type: string
          format: date_time
          example: '2025-12-18T23:00:00'
        pos:
          type: number
          format: float
          description: If not given, value will be set as for the last item in the
            list.
        priority:
          type: string
          enum:
          - very_low
          - low
          - medium
          - high
          - very_high
        points:
          type: number
          format: float
        list_id:
          type: integer
        author_id:
          type: integer
      required:
      - name
      - list_id
      - author_id
    list_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        pos:
          type: number
          format: float
        visible:
          type:
          - boolean
          - 'null'
        deleted_at:
          type:
          - string
          - 'null'
          format: date_time
        board_id:
          type: integer
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        url:
          type: string
        board_url:
          type: string
        tasks:
          type: array
          items:
            "$ref": "#/components/schemas/task_response"
          nullable: true
      required:
      - id
      - name
      - pos
      - visible
      - board_id
      - created_at
      - updated_at
      - deleted_at
    list_request:
      type: object
      properties:
        name:
          type: string
        pos:
          type: number
          format: float
        visible:
          type: boolean
        board_id:
          type: integer
      required:
      - name
      - board_id
    board_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        workspace_id:
          type: integer
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        deleted_at:
          type:
          - string
          - 'null'
          format: date_time
        url:
          type: string
        workspace_url:
          type: string
        lists:
          type: array
          items:
            "$ref": "#/components/schemas/list_response"
          nullable: true
      required:
      - id
      - name
      - workspace_id
      - created_at
      - updated_at
      - deleted_at
    board_request:
      type: object
      properties:
        name:
          type: string
        workspace_id:
          type: integer
      required:
      - name
      - workspace_id
    workspace_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        deleted_at:
          type:
          - string
          - 'null'
          format: date_time
        url:
          type: string
        boards:
          type: array
          items:
            "$ref": "#/components/schemas/board_response"
          nullable: true
      required:
      - id
      - name
      - created_at
      - updated_at
      - deleted_at
    workspace_request:
      type: object
      properties:
        name:
          type: string
      required:
      - name
    script_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        content:
          type: string
        url:
          type: string
        script_triggers:
          type: array
          items:
            "$ref": "#/components/schemas/nested_script_trigger_response"
      required: []
    script_request:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        content:
          type: string
        script_triggers_attributes:
          type: array
          items:
            "$ref": "#/components/schemas/nested_script_trigger_request"
      required:
      - name
    nested_script_trigger_response:
      type: object
      properties:
        id:
          type: integer
        script_id:
          type:
          - integer
          - 'null'
        subject_type:
          type:
          - string
          - 'null'
        subject_id:
          type:
          - integer
          - 'null'
        action:
          type: string
        delay:
          type: integer
        url:
          type: string
      required: []
    nested_script_trigger_request:
      type: object
      properties:
        id:
          type: integer
          description: Needed only for updates and destroys.
        script_id:
          type: integer
        subject_type:
          "$ref": "#/components/schemas/lambdee_models_enum"
        subject_id:
          type: integer
        action:
          type: string
          enum:
          - create
          - update
          - destroy
        delay:
          type: integer
          description: Number of seconds of script execution delay
        _destroy:
          type: boolean
          description: If `true` callback for given `id` will be destroyed. Works
            only nested in sprint.
      required:
      - action
    script_trigger_response:
      type: object
      properties:
        id:
          type: integer
        script_id:
          type: integer
        subject_type:
          type:
          - string
          - 'null'
        subject_id:
          type:
          - integer
          - 'null'
        action:
          type: string
        delay:
          type: integer
        url:
          type: string
      required: []
    script_trigger_request:
      type: object
      properties:
        script_id:
          type: integer
        subject_type:
          "$ref": "#/components/schemas/lambdee_models_enum"
        subject_id:
          type: integer
        action:
          type: string
        delay:
          type: integer
          description: Number of seconds of script execution delay
      required:
      - script_id
      - action
    script_run_response:
      type: object
      properties:
        id:
          type: integer
        script_id:
          type: integer
        initiator_id:
          type: integer
        input:
          type:
          - string
          - 'null'
        output:
          type: string
        state:
          type: string
        delay:
          type:
          - integer
          - 'null'
        url:
          type: string
      required: []
    script_run_request:
      type: object
      properties:
        output:
          type: string
        state:
          type: string
          enum:
          - running
          - executed
          - failed
          - timed_out
          - connection_failed
      required: []
servers:
- url: "{defaultProtocol}://{defaultHost}"
  variables:
    defaultProtocol:
      default: http
    defaultHost:
      default: localhost:3000
