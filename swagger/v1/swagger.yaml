---
openapi: 3.0.1
info:
  title: Lambdee API V1
  version: v1
paths:
  "/api/boards":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: list boards
      tags:
      - Boards
      parameters:
      - name: limit
        in: query
        required: false
        description: Decides how many entities should be returned
        example: 3
        schema:
          type: integer
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - id: 1
                    name: Antimony
                    colour: "#d856ce"
                    workspace_id: 1
                    created_at: '2022-11-28T15:58:57.333Z'
                    updated_at: '2022-11-28T15:58:57.333Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/boards/1
                    workspace_url: http://www.example.com/api/workspaces/1
                  - id: 2
                    name: Terbium
                    colour: "#157e6a"
                    workspace_id: 2
                    created_at: '2022-11-28T15:58:57.336Z'
                    updated_at: '2022-11-28T15:58:57.336Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/boards/2
                    workspace_url: http://www.example.com/api/workspaces/2
                  - id: 3
                    name: Curium
                    colour: "#28a700"
                    workspace_id: 3
                    created_at: '2022-11-28T15:58:57.338Z'
                    updated_at: '2022-11-28T15:58:57.338Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/boards/3
                    workspace_url: http://www.example.com/api/workspaces/3
                  - id: 4
                    name: Neodymium
                    colour: "#631f77"
                    workspace_id: 4
                    created_at: '2022-11-28T15:58:57.340Z'
                    updated_at: '2022-11-28T15:58:57.340Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/boards/4
                    workspace_url: http://www.example.com/api/workspaces/4
                  - id: 5
                    name: Samarium
                    colour: "#2c0b10"
                    workspace_id: 5
                    created_at: '2022-11-28T15:58:57.343Z'
                    updated_at: '2022-11-28T15:58:57.343Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/boards/5
                    workspace_url: http://www.example.com/api/workspaces/5
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/board_response"
    post:
      summary: create board
      tags:
      - Boards
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 6
                    name: New Board
                    colour:
                    workspace_id: 6
                    created_at: '2022-11-28T15:58:57.423Z'
                    updated_at: '2022-11-28T15:58:57.423Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/boards/6
                    workspace_url: http://www.example.com/api/workspaces/6
              schema:
                "$ref": "#/components/schemas/board_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/board_request"
  "/api/boards/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show board
      tags:
      - Boards
      parameters:
      - name: tasks
        in: query
        type: string
        schema:
          "$ref": "#/components/schemas/include_associated_enum"
        required: false
      - name: lists
        in: query
        type: string
        schema:
          "$ref": "#/components/schemas/include_associated_enum"
        required: false
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful with `lists=all`:
                  summary: successful with `lists=all`
                  value:
                    id: 7
                    name: Lanthanum
                    colour: "#a3123d"
                    workspace_id: 7
                    created_at: '2022-11-28T15:58:57.437Z'
                    updated_at: '2022-11-28T15:58:57.437Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/boards/7
                    workspace_url: http://www.example.com/api/workspaces/7
                    lists:
                    - id: 1
                      name: coffee
                      pos: 65536.0
                      visible: false
                      deleted_at: '2022-11-28T15:58:57.487Z'
                      board_id: 7
                      created_at: '2022-11-28T15:58:57.478Z'
                      updated_at: '2022-11-28T15:58:57.482Z'
                      custom_data: {}
                      url: http://www.example.com/api/lists/1
                      board_url: http://www.example.com/api/boards/7
                    - id: 2
                      name: olive
                      pos: 65536.0
                      visible: false
                      deleted_at:
                      board_id: 7
                      created_at: '2022-11-28T15:58:57.491Z'
                      updated_at: '2022-11-28T15:58:57.493Z'
                      custom_data: {}
                      url: http://www.example.com/api/lists/2
                      board_url: http://www.example.com/api/boards/7
                successful with `lists=visible`:
                  summary: successful with `lists=visible`
                  value:
                    id: 10
                    name: Astatine
                    colour: "#577f3d"
                    workspace_id: 10
                    created_at: '2022-11-28T15:58:57.525Z'
                    updated_at: '2022-11-28T15:58:57.525Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/boards/10
                    workspace_url: http://www.example.com/api/workspaces/10
                    lists: []
                successful with `lists=archived`:
                  summary: successful with `lists=archived`
                  value:
                    id: 12
                    name: Gold
                    colour: "#ddee1a"
                    workspace_id: 12
                    created_at: '2022-11-28T15:58:57.557Z'
                    updated_at: '2022-11-28T15:58:57.557Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/boards/12
                    workspace_url: http://www.example.com/api/workspaces/12
                    lists:
                    - id: 4
                      name: orchid
                      pos: 65536.0
                      visible: false
                      deleted_at: '2022-11-28T15:58:57.564Z'
                      board_id: 12
                      created_at: '2022-11-28T15:58:57.560Z'
                      updated_at: '2022-11-28T15:58:57.562Z'
                      custom_data: {}
                      url: http://www.example.com/api/lists/4
                      board_url: http://www.example.com/api/boards/12
                    - id: 5
                      name: emerald
                      pos: 65536.0
                      visible: false
                      deleted_at: '2022-11-28T15:58:57.571Z'
                      board_id: 12
                      created_at: '2022-11-28T15:58:57.568Z'
                      updated_at: '2022-11-28T15:58:57.569Z'
                      custom_data: {}
                      url: http://www.example.com/api/lists/5
                      board_url: http://www.example.com/api/boards/12
                successful:
                  summary: successful
                  value:
                    id: 15
                    name: Gadolinium
                    colour: "#b42a67"
                    workspace_id: 15
                    created_at: '2022-11-28T15:58:57.598Z'
                    updated_at: '2022-11-28T15:58:57.598Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/boards/15
                    workspace_url: http://www.example.com/api/workspaces/15
              schema:
                "$ref": "#/components/schemas/board_response"
    put:
      summary: update board
      tags:
      - Boards
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 16
                    name: New Name
                    colour: "#1097af"
                    workspace_id: 16
                    created_at: '2022-11-28T15:58:57.623Z'
                    updated_at: '2022-11-28T15:58:57.637Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/boards/16
                    workspace_url: http://www.example.com/api/workspaces/16
              schema:
                "$ref": "#/components/schemas/board_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/board_request"
    delete:
      summary: delete board
      tags:
      - Boards
      responses:
        '204':
          description: successful
  "/api/boards/{id}/user_tasks":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: list current user tasks including board, lists, tags, users and author
      tags:
      - Boards
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 18
                    name: Beryllium
                    colour: "#fb1441"
                    workspace_id: 18
                    created_at: '2022-11-28T15:58:57.673Z'
                    updated_at: '2022-11-28T15:58:57.673Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/boards/18
                    workspace_url: http://www.example.com/api/workspaces/18
                    lists: []
              schema:
                "$ref": "#/components/schemas/board_response"
  "/api/boards/recently_viewed":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: list current user recently viewed boards (max 6)
      tags:
      - Boards
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value: []
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/board_response"
  "/api/tasks/{id}/comments":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Task id
      required: true
      schema:
        type: string
    get:
      summary: List task's comments
      tags:
      - Comments
      parameters:
      - name: with_author
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful with `with_author=true`:
                  summary: successful with `with_author=true`
                  value:
                  - id: 5
                    body: |-
                      #### Ullam
                      Voluptatem ipsam reprehenderit. Illo rerum rerum. Fugit quod hic.
                      laudantium | natus | aut
                      ---- | ---- | ----
                      rem | similique | quo
                      explicabo | est | a
                    deleted_at:
                    author_id: 22
                    task_id: 2
                    created_at: '2022-11-28T15:58:57.829Z'
                    updated_at: '2022-11-28T15:58:57.829Z'
                    url: http://www.example.com/api/comments/5
                    author:
                      id: 22
                      name: Fr. Nikole Brakus
                      avatar_url: https://www.gravatar.com/avatar/ef37fe6982cf3aa470c40497d459f333
                      role: guest
                      url: http://www.example.com/api/users/22
                      email: fr_nikole_brakus.1669651137@example.com
                      created_at: '2022-11-28T15:58:57.813Z'
                      updated_at: '2022-11-28T15:58:57.813Z'
                      custom_data: {}
                  - id: 4
                    body: |-
                      ### Voluptas
                      Mollitia dignissimos necessitatibus.
                      Vel saepe ~quod.~ Tempore sit nesciunt. Eum vel aperiam.
                    deleted_at:
                    author_id: 22
                    task_id: 2
                    created_at: '2022-11-28T15:58:57.828Z'
                    updated_at: '2022-11-28T15:58:57.828Z'
                    url: http://www.example.com/api/comments/4
                    author:
                      id: 22
                      name: Fr. Nikole Brakus
                      avatar_url: https://www.gravatar.com/avatar/ef37fe6982cf3aa470c40497d459f333
                      role: guest
                      url: http://www.example.com/api/users/22
                      email: fr_nikole_brakus.1669651137@example.com
                      created_at: '2022-11-28T15:58:57.813Z'
                      updated_at: '2022-11-28T15:58:57.813Z'
                      custom_data: {}
                  - id: 3
                    body: "### Qui\nSint autem error. Rerum aliquid minima.\n0. Ullam.
                      \n1. Eius. \n2. Qui. \n3. Laudantium. \n4. Provident. \n5. Cum.
                      \n6. Delectus. \n7. Minima. \n8. Architecto. \n9. Quaerat. \n"
                    deleted_at:
                    author_id: 22
                    task_id: 2
                    created_at: '2022-11-28T15:58:57.826Z'
                    updated_at: '2022-11-28T15:58:57.826Z'
                    url: http://www.example.com/api/comments/3
                    author:
                      id: 22
                      name: Fr. Nikole Brakus
                      avatar_url: https://www.gravatar.com/avatar/ef37fe6982cf3aa470c40497d459f333
                      role: guest
                      url: http://www.example.com/api/users/22
                      email: fr_nikole_brakus.1669651137@example.com
                      created_at: '2022-11-28T15:58:57.813Z'
                      updated_at: '2022-11-28T15:58:57.813Z'
                      custom_data: {}
                  - id: 2
                    body: "#### Odit\nQuia officiis omnis. Voluptate explicabo facere.\n*
                      Officiis. \n"
                    deleted_at:
                    author_id: 22
                    task_id: 2
                    created_at: '2022-11-28T15:58:57.824Z'
                    updated_at: '2022-11-28T15:58:57.824Z'
                    url: http://www.example.com/api/comments/2
                    author:
                      id: 22
                      name: Fr. Nikole Brakus
                      avatar_url: https://www.gravatar.com/avatar/ef37fe6982cf3aa470c40497d459f333
                      role: guest
                      url: http://www.example.com/api/users/22
                      email: fr_nikole_brakus.1669651137@example.com
                      created_at: '2022-11-28T15:58:57.813Z'
                      updated_at: '2022-11-28T15:58:57.813Z'
                      custom_data: {}
                  - id: 1
                    body: |-
                      ##### Autem
                      Quia consequatur enim. Cum esse illum.
                      Aut eius quis. *Quia* id minima. Dolores et asperiores.
                    deleted_at:
                    author_id: 22
                    task_id: 2
                    created_at: '2022-11-28T15:58:57.821Z'
                    updated_at: '2022-11-28T15:58:57.821Z'
                    url: http://www.example.com/api/comments/1
                    author:
                      id: 22
                      name: Fr. Nikole Brakus
                      avatar_url: https://www.gravatar.com/avatar/ef37fe6982cf3aa470c40497d459f333
                      role: guest
                      url: http://www.example.com/api/users/22
                      email: fr_nikole_brakus.1669651137@example.com
                      created_at: '2022-11-28T15:58:57.813Z'
                      updated_at: '2022-11-28T15:58:57.813Z'
                      custom_data: {}
                successful:
                  summary: successful
                  value:
                  - id: 10
                    body: "# Tempore\nLaborum illo soluta. Reiciendis nesciunt quas.
                      Provident quasi iste.\n# Hic\nSed sint debitis. Minima voluptas
                      quasi. Inventore nobis nemo.\n# Odio\nQui accusantium eum. Molestiae
                      cumque sed. Eius fugit qui.\n###### Et\nIste aperiam ut. Numquam
                      voluptatem maiores. Repellendus voluptatum voluptatem.\n0. Est.
                      \n1. Consequatur. \n"
                    deleted_at:
                    author_id: 25
                    task_id: 3
                    created_at: '2022-11-28T15:58:57.875Z'
                    updated_at: '2022-11-28T15:58:57.875Z'
                    url: http://www.example.com/api/comments/10
                  - id: 9
                    body: "#### Harum\nPossimus blanditiis voluptates.\n* Quia. \n*
                      Officia. \n* Et. \n* Quis. \n* Est. \n* Vitae. \n* Minus. \n*
                      Rerum. \n* Magnam. \n* Provident. \n"
                    deleted_at:
                    author_id: 25
                    task_id: 3
                    created_at: '2022-11-28T15:58:57.873Z'
                    updated_at: '2022-11-28T15:58:57.873Z'
                    url: http://www.example.com/api/comments/9
                  - id: 8
                    body: |-
                      # Et
                      Optio totam velit. Illo ipsum laboriosam.
                      veniam | quasi | inventore
                      ---- | ---- | ----
                      vel | maiores | suscipit
                      voluptas | necessitatibus | autem
                    deleted_at:
                    author_id: 25
                    task_id: 3
                    created_at: '2022-11-28T15:58:57.871Z'
                    updated_at: '2022-11-28T15:58:57.871Z'
                    url: http://www.example.com/api/comments/8
                  - id: 7
                    body: "#### Dignissimos\nAt ducimus tempore.\n* Voluptas. \n*
                      Neque. \n"
                    deleted_at:
                    author_id: 25
                    task_id: 3
                    created_at: '2022-11-28T15:58:57.869Z'
                    updated_at: '2022-11-28T15:58:57.869Z'
                    url: http://www.example.com/api/comments/7
                  - id: 6
                    body: "### Exercitationem\nDistinctio qui sed. Vero id aliquid.
                      Aliquam sapiente maiores.\n* Incidunt. \n* Eum. \n* Sint. \n"
                    deleted_at:
                    author_id: 25
                    task_id: 3
                    created_at: '2022-11-28T15:58:57.868Z'
                    updated_at: '2022-11-28T15:58:57.868Z'
                    url: http://www.example.com/api/comments/6
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/comment_response"
  "/api/lists":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: List lists
      tags:
      - Lists
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - id: 9
                    name: puce
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 28
                    created_at: '2022-11-28T15:58:57.896Z'
                    updated_at: '2022-11-28T15:58:57.896Z'
                    custom_data: {}
                    url: http://www.example.com/api/lists/9
                    board_url: http://www.example.com/api/boards/28
                  - id: 10
                    name: amaranth
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 29
                    created_at: '2022-11-28T15:58:57.900Z'
                    updated_at: '2022-11-28T15:58:57.900Z'
                    custom_data: {}
                    url: http://www.example.com/api/lists/10
                    board_url: http://www.example.com/api/boards/29
                  - id: 11
                    name: lemon
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 30
                    created_at: '2022-11-28T15:58:57.904Z'
                    updated_at: '2022-11-28T15:58:57.904Z'
                    custom_data: {}
                    url: http://www.example.com/api/lists/11
                    board_url: http://www.example.com/api/boards/30
                  - id: 12
                    name: carmine
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 31
                    created_at: '2022-11-28T15:58:57.908Z'
                    updated_at: '2022-11-28T15:58:57.908Z'
                    custom_data: {}
                    url: http://www.example.com/api/lists/12
                    board_url: http://www.example.com/api/boards/31
                  - id: 13
                    name: salmon
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 32
                    created_at: '2022-11-28T15:58:57.912Z'
                    updated_at: '2022-11-28T15:58:57.912Z'
                    custom_data: {}
                    url: http://www.example.com/api/lists/13
                    board_url: http://www.example.com/api/boards/32
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/list_response"
    post:
      summary: Create List
      tags:
      - Lists
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 14
                    name: New List
                    pos: 1212.0
                    visible: false
                    deleted_at:
                    board_id: 33
                    created_at: '2022-11-28T15:58:57.952Z'
                    updated_at: '2022-11-28T15:58:57.952Z'
                    custom_data: {}
                    url: http://www.example.com/api/lists/14
                    board_url: http://www.example.com/api/boards/33
              schema:
                "$ref": "#/components/schemas/list_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/list_request"
  "/api/lists/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show List
      tags:
      - Lists
      parameters:
      - name: tasks
        in: query
        type: string
        schema:
          "$ref": "#/components/schemas/include_associated_enum"
        required: false
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful with `tasks=all`:
                  summary: successful with `tasks=all`
                  value:
                    id: 15
                    name: chocolate
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 34
                    created_at: '2022-11-28T15:58:57.960Z'
                    updated_at: '2022-11-28T15:58:57.960Z'
                    custom_data: {}
                    url: http://www.example.com/api/lists/15
                    board_url: http://www.example.com/api/boards/34
                    tasks:
                    - id: 4
                      name: Happy Nation
                      pos: 65536.0
                      priority: very_low
                      spent_time: 0
                      points: 4
                      due_time: '2022-12-05T15:58:57.962Z'
                      list_id: 15
                      deleted_at:
                      url: http://www.example.com/api/tasks/4
                      list_url: http://www.example.com/api/lists/15
                      users:
                      - id: 30
                        name: Forest Rosenbaum II
                        avatar_url: https://www.gravatar.com/avatar/1c6e82eccc3f8b8accac2fc9972cfb64
                        role: manager
                        url: http://www.example.com/api/users/30
                      - id: 31
                        name: Gil Ortiz
                        avatar_url: https://www.gravatar.com/avatar/9d7782af595e81a463a0833fe491fe32
                        role: guest
                        url: http://www.example.com/api/users/31
                      tags:
                      - id: 2
                        name: Administration
                        colour: "#1e6a2a"
                        url: http://www.example.com/api/tags/2
                      - id: 3
                        name: Community-Services
                        colour: "#b5298b"
                        url: http://www.example.com/api/tags/3
                    - id: 5
                      name: Sgt. Pepper's Lonely Hearts Club Band
                      pos: 65536.0
                      priority: low
                      spent_time: 0
                      points: 3
                      due_time: '2022-12-05T15:58:57.993Z'
                      list_id: 15
                      deleted_at: '2022-11-28T15:58:58.006Z'
                      url: http://www.example.com/api/tasks/5
                      list_url: http://www.example.com/api/lists/15
                      users: []
                      tags: []
                successful with `tasks=visible`:
                  summary: successful with `tasks=visible`
                  value:
                    id: 18
                    name: black
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 39
                    created_at: '2022-11-28T15:58:58.038Z'
                    updated_at: '2022-11-28T15:58:58.038Z'
                    custom_data: {}
                    url: http://www.example.com/api/lists/18
                    board_url: http://www.example.com/api/boards/39
                    tasks:
                    - id: 6
                      name: Born in the U.S.A.
                      pos: 65536.0
                      priority: medium
                      spent_time: 0
                      points: 5
                      due_time: '2022-12-05T15:58:58.040Z'
                      list_id: 18
                      deleted_at:
                      url: http://www.example.com/api/tasks/6
                      list_url: http://www.example.com/api/lists/18
                      users:
                      - id: 35
                        name: Msgr. Orlando Pfannerstill
                        avatar_url: https://www.gravatar.com/avatar/b3a78937aace083d348ae7110ac721a9
                        role: guest
                        url: http://www.example.com/api/users/35
                      - id: 36
                        name: Melynda Conn
                        avatar_url: https://www.gravatar.com/avatar/59314534ee0fe80aac61db684d4eeb5b
                        role: regular
                        url: http://www.example.com/api/users/36
                      tags:
                      - id: 4
                        name: Legal
                        colour: "#c807d0"
                        url: http://www.example.com/api/tags/4
                    - id: 7
                      name: Tracy Chapman
                      pos: 65536.0
                      priority: very_high
                      spent_time: 0
                      points: 5
                      due_time: '2022-12-05T15:58:58.067Z'
                      list_id: 18
                      deleted_at:
                      url: http://www.example.com/api/tasks/7
                      list_url: http://www.example.com/api/lists/18
                      users: []
                      tags: []
                successful with `tasks=archived`:
                  summary: successful with `tasks=archived`
                  value:
                    id: 21
                    name: cyan
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 43
                    created_at: '2022-11-28T15:58:58.114Z'
                    updated_at: '2022-11-28T15:58:58.114Z'
                    custom_data: {}
                    url: http://www.example.com/api/lists/21
                    board_url: http://www.example.com/api/boards/43
                    tasks:
                    - id: 8
                      name: Abbey Road
                      pos: 65536.0
                      priority: medium
                      spent_time: 0
                      points: 2
                      due_time: '2022-12-05T15:58:58.117Z'
                      list_id: 21
                      deleted_at: '2022-11-28T15:58:58.129Z'
                      url: http://www.example.com/api/tasks/8
                      list_url: http://www.example.com/api/lists/21
                      users: []
                      tags: []
                    - id: 9
                      name: Like a Virgin
                      pos: 65536.0
                      priority: high
                      spent_time: 0
                      points: 2
                      due_time: '2022-12-05T15:58:58.131Z'
                      list_id: 21
                      deleted_at: '2022-11-28T15:58:58.143Z'
                      url: http://www.example.com/api/tasks/9
                      list_url: http://www.example.com/api/lists/21
                      users:
                      - id: 41
                        name: Jerrell Moore MD
                        avatar_url: https://www.gravatar.com/avatar/d118837171f8b94b4ce07e67a309a707
                        role: developer
                        url: http://www.example.com/api/users/41
                      tags:
                      - id: 5
                        name: Legal
                        colour: "#4bbc23"
                        url: http://www.example.com/api/tags/5
                successful:
                  summary: successful
                  value:
                    id: 24
                    name: gold
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 47
                    created_at: '2022-11-28T15:58:58.181Z'
                    updated_at: '2022-11-28T15:58:58.181Z'
                    custom_data: {}
                    url: http://www.example.com/api/lists/24
                    board_url: http://www.example.com/api/boards/47
              schema:
                "$ref": "#/components/schemas/list_response"
    put:
      summary: Update list
      tags:
      - Lists
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 25
                    name: New Name
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 48
                    created_at: '2022-11-28T15:58:58.201Z'
                    updated_at: '2022-11-28T15:58:58.216Z'
                    custom_data: {}
                    url: http://www.example.com/api/lists/25
                    board_url: http://www.example.com/api/boards/48
              schema:
                "$ref": "#/components/schemas/list_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/list_request"
    delete:
      summary: Delete list
      tags:
      - Lists
      responses:
        '204':
          description: successful
  "/api/script_runs":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: List script runs
      tags:
      - ScriptRuns
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - id: 1
                    script_id: 1
                    input: puts 'Hello world'
                    output: Hello world
                    initiator_id: 48
                    state: running
                    url: http://www.example.com/api/script_runs/1
                  - id: 2
                    script_id: 2
                    input: puts 'Hello world'
                    output: Hello world
                    initiator_id: 50
                    state: running
                    url: http://www.example.com/api/script_runs/2
                  - id: 3
                    script_id: 3
                    input: puts 'Hello world'
                    output: Hello world
                    initiator_id: 52
                    state: running
                    url: http://www.example.com/api/script_runs/3
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/script_run_response"
  "/api/scripts/{id}/script_runs":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Script id
      required: true
      schema:
        type: string
    get:
      summary: List script's script runs
      tags:
      - ScriptRuns
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - id: 4
                    script_id: 4
                    input: puts 'Hello world'
                    output: Hello world
                    initiator_id: 56
                    state: running
                    url: http://www.example.com/api/script_runs/4
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/script_run_response"
  "/api/script_runs/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show script run
      tags:
      - ScriptRuns
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 5
                    script_id: 5
                    input: puts 'Hello world'
                    output: Hello world
                    initiator_id: 60
                    state: running
                    url: http://www.example.com/api/script_runs/5
              schema:
                "$ref": "#/components/schemas/script_run_response"
    put:
      summary: Update script run
      tags:
      - ScriptRuns
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 6
                    script_id: 6
                    input: puts 'Hello world'
                    output: example output
                    initiator_id: 64
                    state: executed
                    url: http://www.example.com/api/script_runs/6
              schema:
                "$ref": "#/components/schemas/script_run_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/script_run_request"
  "/api/script_triggers":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    post:
      summary: Create script trigger
      tags:
      - Script triggers
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 1
                    script_id: 7
                    subject_type: DB::Task
                    subject_id: 10
                    action: destroy
                    url: http://www.example.com/api/script_triggers/1
              schema:
                "$ref": "#/components/schemas/script_trigger_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/script_trigger_request"
  "/api/script_triggers/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show script trigger
      tags:
      - Script triggers
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 2
                    script_id: 8
                    subject_type:
                    subject_id:
                    action: create
                    url: http://www.example.com/api/script_triggers/2
              schema:
                "$ref": "#/components/schemas/script_trigger_response"
    put:
      summary: Update script trigger
      tags:
      - Script triggers
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 3
                    script_id: 9
                    subject_type:
                    subject_id:
                    action: destroy
                    url: http://www.example.com/api/script_triggers/3
              schema:
                "$ref": "#/components/schemas/script_trigger_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/script_trigger_request"
    delete:
      summary: Delete script_trigger
      tags:
      - Script triggers
      responses:
        '204':
          description: successful
  "/api/scripts":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: List scripts
      tags:
      - Scripts
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - id: 11
                    content: puts 'hello world'
                    name: My first Lambdee Script
                    description: Description of the script
                    author_id: 80
                    url: http://www.example.com/api/scripts/11
                  - id: 12
                    content: puts 'hello world'
                    name: My first Lambdee Script
                    description: Description of the script
                    author_id: 81
                    url: http://www.example.com/api/scripts/12
                  - id: 13
                    content: puts 'hello world'
                    name: My first Lambdee Script
                    description: Description of the script
                    author_id: 82
                    url: http://www.example.com/api/scripts/13
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/script_response"
    post:
      summary: Create Script
      tags:
      - Scripts
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 14
                    content: puts 'Hello world!'
                    name: New Script
                    description: What script does
                    author_id: 85
                    url: http://www.example.com/api/scripts/14
                    script_triggers:
                    - id: 5
                      script_id: 14
                      subject_type:
                      subject_id:
                      action: create
                      url: http://www.example.com/api/script_triggers/5
                    - id: 6
                      script_id: 14
                      subject_type: DB::Task
                      subject_id:
                      action: update
                      url: http://www.example.com/api/script_triggers/6
                    - id: 7
                      script_id: 14
                      subject_type: DB::Task
                      subject_id: 11
                      action: destroy
                      url: http://www.example.com/api/script_triggers/7
              schema:
                "$ref": "#/components/schemas/script_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/script_request"
  "/api/scripts/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show Script
      tags:
      - Scripts
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 15
                    content: puts 'hello world'
                    name: My first Lambdee Script
                    description: Description of the script
                    author_id: 88
                    url: http://www.example.com/api/scripts/15
                    script_triggers: []
              schema:
                "$ref": "#/components/schemas/script_response"
    put:
      summary: Update Script
      tags:
      - Scripts
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 16
                    content: puts 'hello world'
                    name: New Name
                    description: Description of the script
                    author_id: 91
                    url: http://www.example.com/api/scripts/16
                    script_triggers:
                    - id: 9
                      script_id: 16
                      subject_type:
                      subject_id:
                      action: create
                      url: http://www.example.com/api/script_triggers/9
              schema:
                "$ref": "#/components/schemas/script_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/script_request"
    delete:
      summary: Delete script
      tags:
      - Scripts
      responses:
        '204':
          description: successful
  "/api/boards/{id}/sprints":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Board id
      required: true
      schema:
        type: string
    get:
      summary: List board's sprints
      tags:
      - Sprints
      parameters:
      - name: page
        in: query
        required: false
        description: Decides which result page should be returned.
        example: 2
        schema:
          type: integer
      - name: per
        in: query
        required: false
        description: Decides how many entities should be returned per one page. **Works
          only, when `page` param is given.**
        example: 2
        schema:
          type: integer
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    sprints:
                    - id: 1
                      board_id: 52
                      name: Hobart
                      description: Porro facere sit. Quia unde quis. Dolores qui quasi.
                      started_at: '2022-11-28T15:58:59.826Z'
                      expected_end_at: '2022-12-05T15:58:59.826Z'
                      ended_at:
                      final_list_name: Done
                      custom_data: {}
                      url: http://www.example.com/api/sprints/1
                    - id: 2
                      board_id: 52
                      name: Tamworth
                      description: Quia et dolorum. Non quos rem. Iste atque impedit.
                      started_at: '2022-11-28T15:58:59.830Z'
                      expected_end_at: '2022-12-05T15:58:59.830Z'
                      ended_at:
                      final_list_name: Done
                      custom_data: {}
                      url: http://www.example.com/api/sprints/2
                    - id: 3
                      board_id: 52
                      name: Hobart
                      description: Nihil mollitia voluptate. Nesciunt quia laudantium.
                        Laborum culpa praesentium.
                      started_at: '2022-11-28T15:58:59.833Z'
                      expected_end_at: '2022-12-05T15:58:59.833Z'
                      ended_at:
                      final_list_name: Done
                      custom_data: {}
                      url: http://www.example.com/api/sprints/3
              schema:
                "$ref": "#/components/schemas/sprint_pages_response"
  "/api/sprints":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: List sprints
      tags:
      - Sprints
      parameters:
      - name: page
        in: query
        required: false
        description: Decides which result page should be returned.
        example: 2
        schema:
          type: integer
      - name: per
        in: query
        required: false
        description: Decides how many entities should be returned per one page. **Works
          only, when `page` param is given.**
        example: 2
        schema:
          type: integer
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    sprints: []
              schema:
                "$ref": "#/components/schemas/sprint_pages_response"
    post:
      summary: Create sprint
      tags:
      - Sprints
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 4
                    board_id: 53
                    name: New Sprint
                    description: Example description of new sprint
                    started_at: '2022-11-28T15:58:59.897Z'
                    expected_end_at: '2025-12-11T23:00:00.000Z'
                    ended_at:
                    final_list_name: Done
                    custom_data: {}
                    url: http://www.example.com/api/sprints/4
              schema:
                "$ref": "#/components/schemas/sprint_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/sprint_request"
  "/api/sprints/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    - name: tasks
      in: query
      example: all
      required: false
      schema:
        type: string
    get:
      summary: Show Sprint
      tags:
      - Sprints
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful with `tasks=all`:
                  summary: successful with `tasks=all`
                  value:
                    id: 5
                    board_id: 54
                    name: Busselton
                    description: Earum nesciunt sunt. Eum sapiente eos. Culpa enim
                      voluptatem.
                    started_at: '2022-11-28T15:58:59.907Z'
                    expected_end_at: '2022-12-05T15:58:59.907Z'
                    ended_at:
                    final_list_name: Done
                    custom_data: {}
                    url: http://www.example.com/api/sprints/5
                    tasks:
                    - id: 12
                      name: Sgt. Pepper's Lonely Hearts Club Band
                      priority: medium
                      spent_time: 0
                      points: 3
                      added_at: '2022-11-28T15:58:59.929Z'
                      completed_at:
                      start_state: To Do
                      state: Doing
                successful:
                  summary: successful
                  value:
                    id: 6
                    board_id: 56
                    name: Dubbo
                    description: Debitis et quia. Omnis doloribus sint. A sapiente
                      quibusdam.
                    started_at: '2022-11-28T15:58:59.960Z'
                    expected_end_at: '2022-12-05T15:58:59.960Z'
                    ended_at:
                    final_list_name: Done
                    custom_data: {}
                    url: http://www.example.com/api/sprints/6
              schema:
                "$ref": "#/components/schemas/sprint_response"
    put:
      summary: Update Sprint
      tags:
      - Sprints
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 7
                    board_id: 57
                    name: New Name
                    description: Enim eveniet ab. Sapiente nobis tenetur. Quaerat
                      doloremque sed.
                    started_at: '2022-11-28T15:58:59.986Z'
                    expected_end_at: '2022-12-05T15:58:59.986Z'
                    ended_at:
                    final_list_name: Done
                    custom_data: {}
                    url: http://www.example.com/api/sprints/7
              schema:
                "$ref": "#/components/schemas/sprint_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/sprint_request"
    delete:
      summary: Delete sprint
      tags:
      - Sprints
      responses:
        '204':
          description: successful
  "/api/sprints/{id}/end":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    put:
      summary: End sprint
      tags:
      - Sprints
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 9
                    board_id: 59
                    name: Warrnambool
                    description: Sit amet aut. Ut maxime voluptatem. Reprehenderit
                      voluptatem fuga.
                    started_at: '2022-11-28T15:59:00.042Z'
                    expected_end_at: '2022-12-05T15:59:00.042Z'
                    ended_at: '2022-11-28T15:59:00.061Z'
                    final_list_name: Done
                    custom_data: {}
                    url: http://www.example.com/api/sprints/9
              schema:
                "$ref": "#/components/schemas/sprint_response"
  "/api/boards/{id}/active_sprint":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show active sprint
      tags:
      - Sprints
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 10
                    board_id: 60
                    name: Mackay
                    description: Et libero explicabo. Inventore qui cumque. Pariatur
                      rerum voluptatem.
                    started_at: '2022-11-28T15:59:00.070Z'
                    expected_end_at: '2022-12-05T15:59:00.070Z'
                    ended_at:
                    final_list_name: Done
                    custom_data: {}
                    url: http://www.example.com/api/sprints/10
              schema:
                "$ref": "#/components/schemas/sprint_response"
  "/api/sprints/{id}/burn_up_chart":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show data for burn up chart
      tags:
      - Sprints
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - name: Work Scope
                    data:
                      '2022-11-28': 0
                      '2022-12-05': 0
                  - name: Completed Work
                    data:
                      '2022-11-28': 0
                      '2022-12-05':
  "/api/boards/{id}/tags":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Board id
      required: true
      schema:
        type: string
    get:
      summary: List board's tags
      tags:
      - Tags
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - id: 6
                    name: Banking
                    colour: "#163672"
                    url: http://www.example.com/api/tags/6
                    board_id: 62
                    created_at: '2022-11-28T15:59:00.124Z'
                    updated_at: '2022-11-28T15:59:00.124Z'
                    custom_data: {}
                  - id: 7
                    name: Administration
                    colour: "#2a087c"
                    url: http://www.example.com/api/tags/7
                    board_id: 62
                    created_at: '2022-11-28T15:59:00.126Z'
                    updated_at: '2022-11-28T15:59:00.126Z'
                    custom_data: {}
                  - id: 8
                    name: Hospitality
                    colour: "#142d94"
                    url: http://www.example.com/api/tags/8
                    board_id: 62
                    created_at: '2022-11-28T15:59:00.127Z'
                    updated_at: '2022-11-28T15:59:00.127Z'
                    custom_data: {}
                  - id: 9
                    name: Design
                    colour: "#4538ac"
                    url: http://www.example.com/api/tags/9
                    board_id: 62
                    created_at: '2022-11-28T15:59:00.128Z'
                    updated_at: '2022-11-28T15:59:00.128Z'
                    custom_data: {}
                  - id: 10
                    name: Design
                    colour: "#529f5c"
                    url: http://www.example.com/api/tags/10
                    board_id: 62
                    created_at: '2022-11-28T15:59:00.129Z'
                    updated_at: '2022-11-28T15:59:00.129Z'
                    custom_data: {}
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/tag_response"
    post:
      summary: Create tag
      tags:
      - Tags
      parameters:
      - name: id
        in: path
        description: Board id
        required: true
        schema:
          type: string
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 11
                    name: New Tag
                    colour: "#fff000"
                    url: http://www.example.com/api/tags/11
                    board_id: 63
                    created_at: '2022-11-28T15:59:00.169Z'
                    updated_at: '2022-11-28T15:59:00.169Z'
                    custom_data: {}
              schema:
                "$ref": "#/components/schemas/tag_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/tag_request"
  "/api/tags":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    post:
      summary: Create tag
      tags:
      - Tags
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 12
                    name: New Tag
                    colour: "#fff000"
                    url: http://www.example.com/api/tags/12
                    board_id: 64
                    created_at: '2022-11-28T15:59:00.203Z'
                    updated_at: '2022-11-28T15:59:00.203Z'
                    custom_data: {}
              schema:
                "$ref": "#/components/schemas/tag_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/tag_request"
  "/api/tasks/{id}/tags":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Task id
      required: true
      schema:
        type: string
    get:
      summary: List task's tags
      tags:
      - Tags
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - id: 13
                    name: Marketing
                    colour: "#ea2c97"
                    url: http://www.example.com/api/tags/13
                    board_id: 65
                    created_at: '2022-11-28T15:59:00.223Z'
                    updated_at: '2022-11-28T15:59:00.223Z'
                    custom_data: {}
                  - id: 14
                    name: Consulting
                    colour: "#b115dd"
                    url: http://www.example.com/api/tags/14
                    board_id: 65
                    created_at: '2022-11-28T15:59:00.226Z'
                    updated_at: '2022-11-28T15:59:00.226Z'
                    custom_data: {}
                  - id: 15
                    name: Marketing
                    colour: "#90baf3"
                    url: http://www.example.com/api/tags/15
                    board_id: 65
                    created_at: '2022-11-28T15:59:00.228Z'
                    updated_at: '2022-11-28T15:59:00.228Z'
                    custom_data: {}
                  - id: 16
                    name: Community-Services
                    colour: "#13d043"
                    url: http://www.example.com/api/tags/16
                    board_id: 65
                    created_at: '2022-11-28T15:59:00.231Z'
                    updated_at: '2022-11-28T15:59:00.231Z'
                    custom_data: {}
                  - id: 17
                    name: Marketing
                    colour: "#6457d3"
                    url: http://www.example.com/api/tags/17
                    board_id: 65
                    created_at: '2022-11-28T15:59:00.233Z'
                    updated_at: '2022-11-28T15:59:00.233Z'
                    custom_data: {}
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/tag_response"
    post:
      summary: Create tag (associated with given task and task's board)
      tags:
      - Tags
      parameters:
      - name: id
        in: path
        description: Task id
        required: true
        schema:
          type: string
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 18
                    name: New Tag
                    colour: "#fff000"
                    url: http://www.example.com/api/tags/18
                    board_id: 66
                    created_at: '2022-11-28T15:59:00.286Z'
                    updated_at: '2022-11-28T15:59:00.286Z'
                    custom_data: {}
              schema:
                "$ref": "#/components/schemas/tag_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/tag_request"
  "/api/tags/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show Tags
      tags:
      - Tags
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 19
                    name: Retail
                    colour: "#b8ed28"
                    url: http://www.example.com/api/tags/19
                    board_id: 67
                    created_at: '2022-11-28T15:59:00.298Z'
                    updated_at: '2022-11-28T15:59:00.298Z'
                    custom_data: {}
              schema:
                "$ref": "#/components/schemas/tag_response"
    put:
      summary: Update Tag
      tags:
      - Tags
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 20
                    name: New Name
                    colour: "#5db686"
                    url: http://www.example.com/api/tags/20
                    board_id: 68
                    created_at: '2022-11-28T15:59:00.321Z'
                    updated_at: '2022-11-28T15:59:00.335Z'
                    custom_data: {}
              schema:
                "$ref": "#/components/schemas/tag_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/tag_request"
    delete:
      summary: Delete tag
      tags:
      - Tags
      responses:
        '204':
          description: successful
  "/api/tasks":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: List tasks
      tags:
      - Tasks
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - id: 16
                    name: True Blue
                    pos: 65536.0
                    priority: very_low
                    spent_time: 0
                    points: 1
                    due_time: '2022-12-05T15:59:00.369Z'
                    list_id: 33
                    deleted_at:
                    url: http://www.example.com/api/tasks/16
                    list_url: http://www.example.com/api/lists/33
                    description: |-
                      ### Accusantium
                      Earum eaque nulla. Repellat voluptate maxime. Non voluptate dolores. Alias molestiae nihil. Ducimus omnis et. Maxime pariatur totam.
                      ##### Libero
                      Velit laborum accusamus. Fugiat voluptate quisquam. Nulla illum in.
                      Qui nisi aliquam. Ex odit quibusdam. Consequatur adipisci ~quisquam.~
                    created_at: '2022-11-28T15:59:00.377Z'
                    updated_at: '2022-11-28T15:59:00.377Z'
                  - id: 17
                    name: Unplugged
                    pos: 65536.0
                    priority: medium
                    spent_time: 0
                    points: 4
                    due_time: '2022-12-05T15:59:00.379Z'
                    list_id: 34
                    deleted_at:
                    url: http://www.example.com/api/tasks/17
                    list_url: http://www.example.com/api/lists/34
                    description: |-
                      ### Temporibus
                      Veritatis deleniti sint. Qui et ab. Unde est maiores. Voluptatem voluptate dolores. Et id aliquam.
                      molestiae | aut | magnam
                      ---- | ---- | ----
                      et | assumenda | officia
                      tempora | laudantium | sunt
                    created_at: '2022-11-28T15:59:00.387Z'
                    updated_at: '2022-11-28T15:59:00.387Z'
                  - id: 18
                    name: 'Grease: The Original Soundtrack from the Motion Picture'
                    pos: 65536.0
                    priority: very_low
                    spent_time: 0
                    points: 3
                    due_time: '2022-12-05T15:59:00.389Z'
                    list_id: 35
                    deleted_at:
                    url: http://www.example.com/api/tasks/18
                    list_url: http://www.example.com/api/lists/35
                    description: "## Officia\nEarum debitis molestias. Deserunt laboriosam
                      vel. Nihil accusamus inventore. Modi corrupti velit.\n* Omnis.
                      \n* Necessitatibus. \n* Eius. \n* Dolorem. \n* Ad. \n* Rerum.
                      \n* Ut. \n* Praesentium. \n* Voluptatum. \n"
                    created_at: '2022-11-28T15:59:00.397Z'
                    updated_at: '2022-11-28T15:59:00.397Z'
                  - id: 19
                    name: Slippery When Wet
                    pos: 65536.0
                    priority: low
                    spent_time: 0
                    points: 4
                    due_time: '2022-12-05T15:59:00.399Z'
                    list_id: 36
                    deleted_at:
                    url: http://www.example.com/api/tasks/19
                    list_url: http://www.example.com/api/lists/36
                    description: |-
                      ###### Ut
                      Tempore placeat animi. Rerum impedit distinctio. Hic nulla ut. Voluptas quos neque. Aut quo aspernatur.
                      sint | aperiam | eius
                      ---- | ---- | ----
                      quae | cupiditate | explicabo
                      cum | cupiditate | non
                    created_at: '2022-11-28T15:59:00.407Z'
                    updated_at: '2022-11-28T15:59:00.407Z'
                  - id: 20
                    name: Daydream
                    pos: 65536.0
                    priority: very_high
                    spent_time: 0
                    points: 4
                    due_time: '2022-12-05T15:59:00.409Z'
                    list_id: 37
                    deleted_at:
                    url: http://www.example.com/api/tasks/20
                    list_url: http://www.example.com/api/lists/37
                    description: |-
                      ### Et
                      Quam unde voluptates. Qui doloremque dolor. Debitis harum quibusdam.
                      #### Dolorum
                    created_at: '2022-11-28T15:59:00.417Z'
                    updated_at: '2022-11-28T15:59:00.417Z'
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/task_response"
    post:
      summary: Create Task
      tags:
      - Tasks
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 21
                    name: New Task
                    pos: 65536.0
                    priority:
                    spent_time: 0
                    points:
                    due_time:
                    list_id: 38
                    deleted_at:
                    url: http://www.example.com/api/tasks/21
                    list_url: http://www.example.com/api/lists/38
                    description:
                    created_at: '2022-11-28T15:59:00.461Z'
                    updated_at: '2022-11-28T15:59:00.461Z'
              schema:
                "$ref": "#/components/schemas/task_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/task_request"
  "/api/tasks/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Task id
      required: true
      schema:
        type: string
    get:
      summary: Show Taks
      parameters:
      - name: include_associations
        in: query
        required: false
        description: If true, extended object with all associations is returned.
        schema:
          type: string
      tags:
      - Tasks
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful with `include_associations=true`:
                  summary: successful with `include_associations=true`
                  value:
                    id: 22
                    name: Backstreet Boys
                    pos: 65536.0
                    priority: medium
                    spent_time: 0
                    points: 3
                    due_time: '2022-12-05T15:59:00.468Z'
                    list_id: 39
                    deleted_at:
                    url: http://www.example.com/api/tasks/22
                    list_url: http://www.example.com/api/lists/39
                    description: "## Modi\nEaque alias est. Sit labore vel. Soluta
                      ut iure. Odio et sunt. Accusamus temporibus cumque. Iste et
                      omnis.\n0. Impedit. \n1. Dolorem. \n2. Non. \n3. Temporibus.
                      \n4. Eos. \n5. Et. \n6. In. \n"
                    created_at: '2022-11-28T15:59:00.477Z'
                    updated_at: '2022-11-28T15:59:00.477Z'
                    list:
                      id: 39
                      name: grey
                      pos: 65536.0
                      visible: false
                      deleted_at:
                      board_id: 76
                      created_at: '2022-11-28T15:59:00.471Z'
                      updated_at: '2022-11-28T15:59:00.471Z'
                      custom_data: {}
                      url: http://www.example.com/api/lists/39
                      board_url: http://www.example.com/api/boards/76
                    author:
                      id: 144
                      name: Brianne Abshire DDS
                      avatar_url: https://www.gravatar.com/avatar/4236a83b74f717868d4e34f054f6018e
                      role: guest
                      url: http://www.example.com/api/users/144
                      email: brianne_abshire_dds.1669651140@example.com
                      created_at: '2022-11-28T15:59:00.475Z'
                      updated_at: '2022-11-28T15:59:00.475Z'
                      custom_data: {}
                    users:
                    - id: 145
                      name: Shaquita Altenwerth
                      avatar_url: https://www.gravatar.com/avatar/7c70fa7688eabffa7bc63c0ec0c379aa
                      role: developer
                      url: http://www.example.com/api/users/145
                      email: shaquita_altenwerth.1669651140@example.com
                      created_at: '2022-11-28T15:59:00.481Z'
                      updated_at: '2022-11-28T15:59:00.481Z'
                      custom_data: {}
                    - id: 146
                      name: Long Dickens
                      avatar_url: https://www.gravatar.com/avatar/38ac05296638a3b1049b873c55b8d16d
                      role: guest
                      url: http://www.example.com/api/users/146
                      email: long_dickens.1669651140@example.com
                      created_at: '2022-11-28T15:59:00.485Z'
                      updated_at: '2022-11-28T15:59:00.485Z'
                      custom_data: {}
                    tags:
                    - id: 22
                      name: Design
                      colour: "#441947"
                      url: http://www.example.com/api/tags/22
                      board_id: 77
                      created_at: '2022-11-28T15:59:00.490Z'
                      updated_at: '2022-11-28T15:59:00.490Z'
                      custom_data: {}
                    - id: 23
                      name: Community-Services
                      colour: "#9940ea"
                      url: http://www.example.com/api/tags/23
                      board_id: 78
                      created_at: '2022-11-28T15:59:00.495Z'
                      updated_at: '2022-11-28T15:59:00.495Z'
                      custom_data: {}
                    - id: 24
                      name: Design
                      colour: "#1232cc"
                      url: http://www.example.com/api/tags/24
                      board_id: 79
                      created_at: '2022-11-28T15:59:00.499Z'
                      updated_at: '2022-11-28T15:59:00.499Z'
                      custom_data: {}
                successful:
                  summary: successful
                  value:
                    id: 23
                    name: Abbey Road
                    pos: 65536.0
                    priority: very_low
                    spent_time: 0
                    points: 4
                    due_time: '2022-12-05T15:59:00.524Z'
                    list_id: 40
                    deleted_at:
                    url: http://www.example.com/api/tasks/23
                    list_url: http://www.example.com/api/lists/40
                    description: |-
                      ### Id
                      Cupiditate omnis laboriosam. Ipsa et sed. Nobis labore rerum.
                      ```ruby
                      Expedita.
                      ```
                    created_at: '2022-11-28T15:59:00.532Z'
                    updated_at: '2022-11-28T15:59:00.532Z'
              schema:
                "$ref": "#/components/schemas/task_response"
    put:
      summary: Update Task
      tags:
      - Tasks
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 24
                    name: New Name
                    pos: 65536.0
                    priority: very_low
                    spent_time: 0
                    points: 1
                    due_time: '2022-12-05T15:59:00.551Z'
                    list_id: 41
                    deleted_at:
                    url: http://www.example.com/api/tasks/24
                    list_url: http://www.example.com/api/lists/41
                    description: |-
                      # Error
                      Eligendi omnis ut. Hic quo sint. In debitis dolorem.
                      ## Doloremque
                      Eligendi qui et. Eum commodi voluptas. Quae dolorem qui.
                      velit | enim | dolorem
                      ---- | ---- | ----
                      aliquam | doloribus | hic
                      corporis | inventore | repellendus
                    created_at: '2022-11-28T15:59:00.594Z'
                    updated_at: '2022-11-28T15:59:00.620Z'
              schema:
                "$ref": "#/components/schemas/task_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/task_request"
    delete:
      summary: Delete Task
      tags:
      - Tasks
      responses:
        '204':
          description: successful
  "/api/tasks/{id}/add_time":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Task id
      required: true
      schema:
        type: string
    put:
      summary: Add time
      tags:
      - Tasks
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 26
                    name: 'Titanic: Music from the Motion Picture'
                    pos: 65536.0
                    priority: very_low
                    spent_time: 1200
                    points: 2
                    due_time: '2022-12-05T15:59:00.654Z'
                    list_id: 43
                    deleted_at:
                    url: http://www.example.com/api/tasks/26
                    list_url: http://www.example.com/api/lists/43
                    description: |-
                      # Qui
                      Maiores et rerum. Ea impedit illo. Consequatur explicabo libero.
                      Sed voluptas animi. Omnis at ut. ~Est~ incidunt voluptatem.
                    created_at: '2022-11-28T15:59:00.663Z'
                    updated_at: '2022-11-28T15:59:00.678Z'
        '422':
          description: non integer time
          content:
            application/json:
              examples:
                incorrect unit:
                  summary: incorrect unit
                  value:
                    unit:
                    - is not included in the list
                negative time:
                  summary: negative time
                  value:
                    time:
                    - must be greater than 0
                non integer time:
                  summary: non integer time
                  value:
                    time:
                    - must be greater than 0
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                time:
                  type: integer
                unit:
                  type: string
                  enum: "#<Set: {:day, :hour, :minute, :second}>"
  "/api/tasks/{id}/attach_tag":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Task id
      required: true
      schema:
        type: string
    post:
      summary: Attach Tag
      tags:
      - Tasks
      parameters: []
      responses:
        '204':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                tag_id:
                  type: integer
  "/api/tasks/{id}/detach_tag":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Task id
      required: true
      schema:
        type: string
    post:
      summary: Detach Tag
      tags:
      - Tasks
      parameters: []
      responses:
        '204':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                tag_id:
                  type: integer
  "/api/tasks/{id}/assign_user":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Task id
      required: true
      schema:
        type: string
    post:
      summary: Assign User
      tags:
      - Tasks
      parameters: []
      responses:
        '204':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
  "/api/tasks/{id}/unassign_user":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Task id
      required: true
      schema:
        type: string
    post:
      summary: Unassign User
      tags:
      - Tasks
      parameters: []
      responses:
        '204':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
  "/api/workspaces/{id}/users":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: List users of workspace
      tags:
      - Users
      parameters:
      - name: id
        in: path
        description: Workspace id
        required: true
        schema:
          type: string
      - name: page
        in: query
        required: false
        description: Decides which result page should be returned.
        example: 2
        schema:
          type: integer
      - name: role
        in: query
        required: false
        schema:
          "$ref": "#/components/schemas/user_request/properties/role"
        example: admin
      - name: created_at_from
        in: query
        required: false
        description: Date with format YYYY.MM.DD
        example: 2010.01.25
        schema:
          type: string
      - name: created_at_to
        in: query
        required: false
        description: Date with format YYYY.MM.DD
        example: 2010.01.25
        schema:
          type: string
      - name: search
        in: query
        required: false
        description: Searches for users by name and e-mail.
        example: michael
        schema:
          type: string
      - name: per
        in: query
        required: false
        description: Decides how many entities should be returned per one page. **Works
          only, when `page` param is given.**
        example: 2
        schema:
          type: integer
      - name: limit
        in: query
        required: false
        description: Decides how many entities should be returned.
        example: 3
        schema:
          type: integer
      responses:
        '200':
          description: successful with pages
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    users:
                    - id: 172
                      name: Amb. Kiesha Lang
                      avatar_url: https://www.gravatar.com/avatar/7e885793600a5c406d29f8be81639f4c
                      role: developer
                      url: http://www.example.com/api/users/172
                      email: amb_kiesha_lang.1669651140@example.com
                      created_at: '2022-11-28T15:59:00.878Z'
                      updated_at: '2022-11-28T15:59:00.878Z'
                      custom_data: {}
                    - id: 173
                      name: Elijah Dickinson
                      avatar_url: https://www.gravatar.com/avatar/db5b8be2b9baf534b9396aded81a3255
                      role: guest
                      url: http://www.example.com/api/users/173
                      email: elijah_dickinson.1669651140@example.com
                      created_at: '2022-11-28T15:59:00.889Z'
                      updated_at: '2022-11-28T15:59:00.889Z'
                      custom_data: {}
                    - id: 174
                      name: Lucius Hessel
                      avatar_url: https://www.gravatar.com/avatar/26e168cc2e2afe051264ab0b62297580
                      role: guest
                      url: http://www.example.com/api/users/174
                      email: lucius_hessel.1669651140@example.com
                      created_at: '2022-11-28T15:59:00.894Z'
                      updated_at: '2022-11-28T15:59:00.894Z'
                      custom_data: {}
                successful with pages:
                  summary: successful with pages
                  value:
                    users:
                    - id: 176
                      name: Merlin Bednar
                      avatar_url: https://www.gravatar.com/avatar/5810e9cafa03274b4faf222ed3d75514
                      role: regular
                      url: http://www.example.com/api/users/176
                      email: merlin_bednar.1669651140@example.com
                      created_at: '2022-11-28T15:59:00.920Z'
                      updated_at: '2022-11-28T15:59:00.920Z'
                      custom_data: {}
                    - id: 177
                      name: Shane Baumbach
                      avatar_url: https://www.gravatar.com/avatar/e6395a40a8bf87077945fb9b88051bb9
                      role: regular
                      url: http://www.example.com/api/users/177
                      email: shane_baumbach.1669651140@example.com
                      created_at: '2022-11-28T15:59:00.924Z'
                      updated_at: '2022-11-28T15:59:00.924Z'
                      custom_data: {}
                    - id: 178
                      name: Delmer Ward Esq.
                      avatar_url: https://www.gravatar.com/avatar/2e14b9a7c336ee6bcdb570d07a63d23b
                      role: guest
                      url: http://www.example.com/api/users/178
                      email: delmer_ward_esq.1669651140@example.com
                      created_at: '2022-11-28T15:59:00.929Z'
                      updated_at: '2022-11-28T15:59:00.929Z'
                      custom_data: {}
                    total_pages: 1
              schema:
                "$ref": "#/components/schemas/user_pages_response"
  "/api/users":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: List users
      tags:
      - Users
      parameters:
      - name: role_collection
        in: query
        schema:
          type: array
          items:
            "$ref": "#/components/schemas/user_request/properties/role"
        example:
        - admin
      - name: role
        in: query
        required: false
        schema:
          "$ref": "#/components/schemas/user_request/properties/role"
        example: admin
      - name: created_at_from
        in: query
        required: false
        description: Date with format YYYY.MM.DD
        example: 2010.01.25
        schema:
          type: string
      - name: created_at_to
        in: query
        required: false
        description: Date with format YYYY.MM.DD
        example: 2010.01.25
        schema:
          type: string
      - name: workspace_id
        in: query
        required: false
        example: 1
        schema:
          type: integer
      - name: search
        in: query
        required: false
        description: Searches for users by name and e-mail.
        example: michael
        schema:
          type: string
      - name: page
        in: query
        required: false
        description: Decides which result page should be returned.
        example: 2
        schema:
          type: integer
      - name: per
        in: query
        required: false
        description: Decides how many entities should be returned per one page. **Works
          only, when `page` param is given.**
        example: 2
        schema:
          type: integer
      - name: limit
        in: query
        required: false
        description: Decides how many entities should be returned.
        example: 3
        schema:
          type: integer
      responses:
        '200':
          description: successful with pages
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    users:
                    - id: 180
                      name: Miss Hans Jacobs
                      avatar_url: https://www.gravatar.com/avatar/d4b5d69eef1472c5d36c234b7e44c109
                      role: regular
                      url: http://www.example.com/api/users/180
                      email: miss_hans_jacobs.1669651140@example.com
                      created_at: '2022-11-28T15:59:00.952Z'
                      updated_at: '2022-11-28T15:59:00.952Z'
                      custom_data: {}
                    - id: 181
                      name: Brad Wolf
                      avatar_url: https://www.gravatar.com/avatar/e12634203ff538732b205c61969f80ae
                      role: guest
                      url: http://www.example.com/api/users/181
                      email: brad_wolf.1669651140@example.com
                      created_at: '2022-11-28T15:59:00.955Z'
                      updated_at: '2022-11-28T15:59:00.955Z'
                      custom_data: {}
                    - id: 182
                      name: Theodora McCullough DO
                      avatar_url: https://www.gravatar.com/avatar/1ad2521fb32d9220545634cb04cccfe1
                      role: developer
                      url: http://www.example.com/api/users/182
                      email: theodora_mc_cullough_do.1669651140@example.com
                      created_at: '2022-11-28T15:59:00.963Z'
                      updated_at: '2022-11-28T15:59:00.963Z'
                      custom_data: {}
                    - id: 183
                      name: Brendan Gerhold
                      avatar_url: https://www.gravatar.com/avatar/d097473ba43651811f97c0663d4dc3d5
                      role: regular
                      url: http://www.example.com/api/users/183
                      email: brendan_gerhold.1669651140@example.com
                      created_at: '2022-11-28T15:59:00.966Z'
                      updated_at: '2022-11-28T15:59:00.966Z'
                      custom_data: {}
                    - id: 184
                      name: Charlene Hessel
                      avatar_url: https://www.gravatar.com/avatar/661c7c2ee2f5ffa4ce58024a04633bec
                      role: manager
                      url: http://www.example.com/api/users/184
                      email: charlene_hessel.1669651140@example.com
                      created_at: '2022-11-28T15:59:00.969Z'
                      updated_at: '2022-11-28T15:59:00.969Z'
                      custom_data: {}
                    - id: 185
                      name: Clair Beier
                      avatar_url: https://www.gravatar.com/avatar/5d3108d13df8edbfb1b5104839cb52dd
                      role: admin
                      url: http://www.example.com/api/users/185
                      email: clair_beier.1669651140@example.com
                      created_at: '2022-11-28T15:59:00.973Z'
                      updated_at: '2022-11-28T15:59:00.973Z'
                      custom_data: {}
                successful with pages:
                  summary: successful with pages
                  value:
                    users:
                    - id: 186
                      name: Rosario Herzog
                      avatar_url: https://www.gravatar.com/avatar/285158b8e7638032315c17616f101958
                      role: manager
                      url: http://www.example.com/api/users/186
                      email: rosario_herzog.1669651140@example.com
                      created_at: '2022-11-28T15:59:00.990Z'
                      updated_at: '2022-11-28T15:59:00.990Z'
                      custom_data: {}
                    - id: 187
                      name: Deidra Morar Sr.
                      avatar_url: https://www.gravatar.com/avatar/18af2f296405b937a9d7a099cecd10fc
                      role: regular
                      url: http://www.example.com/api/users/187
                      email: deidra_morar_sr.1669651140@example.com
                      created_at: '2022-11-28T15:59:00.993Z'
                      updated_at: '2022-11-28T15:59:00.993Z'
                      custom_data: {}
                    - id: 188
                      name: Sallie Dooley
                      avatar_url: https://www.gravatar.com/avatar/3eb6b581ebb9ccad739121f449d77311
                      role: regular
                      url: http://www.example.com/api/users/188
                      email: sallie_dooley.1669651140@example.com
                      created_at: '2022-11-28T15:59:00.997Z'
                      updated_at: '2022-11-28T15:59:00.997Z'
                      custom_data: {}
                    - id: 189
                      name: Monroe Breitenberg
                      avatar_url: https://www.gravatar.com/avatar/a59da6f52132f6929a932e850b060a7b
                      role: regular
                      url: http://www.example.com/api/users/189
                      email: monroe_breitenberg.1669651140@example.com
                      created_at: '2022-11-28T15:59:01.000Z'
                      updated_at: '2022-11-28T15:59:01.000Z'
                      custom_data: {}
                    - id: 190
                      name: Arden Reinger
                      avatar_url: https://www.gravatar.com/avatar/2933b2a813a682b2c61e16ceab052b2d
                      role: developer
                      url: http://www.example.com/api/users/190
                      email: arden_reinger.1669651141@example.com
                      created_at: '2022-11-28T15:59:01.003Z'
                      updated_at: '2022-11-28T15:59:01.003Z'
                      custom_data: {}
                    - id: 191
                      name: Waylon Hane
                      avatar_url: https://www.gravatar.com/avatar/0f36e185b7129e9c2d90bd30e24a5457
                      role: admin
                      url: http://www.example.com/api/users/191
                      email: waylon_hane.1669651141@example.com
                      created_at: '2022-11-28T15:59:01.007Z'
                      updated_at: '2022-11-28T15:59:01.007Z'
                      custom_data: {}
                    total_pages: 1
              schema:
                "$ref": "#/components/schemas/user_pages_response"
    post:
      summary: Create a user
      tags:
      - Users
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 193
                    name: New User
                    created_at: '2022-11-28T15:59:01.040Z'
                    updated_at: '2022-11-28T15:59:01.040Z'
                    email: new_user@example.com
                    role: developer
                    deleted_at:
                    recent_boards: []
                    custom_data: {}
              schema:
                "$ref": "#/components/schemas/user_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/user_request"
    put:
      summary: Update current user
      tags:
      - Users
      parameters: []
      responses:
        '204':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/user_update_request"
    delete:
      summary: Delete current user
      tags:
      - Users
      responses:
        '204':
          description: successful
  "/api/users/current":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: Show the currently signed in user
      tags:
      - Users
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 196
                    name: Zachariah McDermott
                    avatar_url: https://www.gravatar.com/avatar/e689072dc09442c88476591189384aa0
                    role: admin
                    url: http://www.example.com/api/users/196
                    email: zachariah_mc_dermott.1669651141@example.com
                    created_at: '2022-11-28T15:59:01.090Z'
                    updated_at: '2022-11-28T15:59:01.090Z'
                    custom_data: {}
              schema:
                "$ref": "#/components/schemas/user_response"
  "/api/users/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show a user
      tags:
      - Users
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 197
                    name: Lorenzo Prohaska I
                    avatar_url: https://www.gravatar.com/avatar/09a0a3d98e9f00c2b46c5dc8730389e7
                    role: developer
                    url: http://www.example.com/api/users/197
                    email: lorenzo_prohaska_i.1669651141@example.com
                    created_at: '2022-11-28T15:59:01.107Z'
                    updated_at: '2022-11-28T15:59:01.107Z'
                    custom_data: {}
              schema:
                "$ref": "#/components/schemas/user_response"
  "/api/users/sign_in":
    post:
      summary: Sign in
      tags:
      - Users
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 199
                    name: The Hon. Scott Muller
                    created_at: '2022-11-28T15:59:01.127Z'
                    updated_at: '2022-11-28T15:59:01.127Z'
                    email: email@example.com
                    role: guest
                    deleted_at:
                    recent_boards: []
                    custom_data: {}
              schema:
                "$ref": "#/components/schemas/user_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/user_sign_in_request"
  "/api/users/sign_out":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    delete:
      summary: Sign out
      tags:
      - Users
      responses:
        '204':
          description: successful
  "/api/workspaces":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: list workspaces
      tags:
      - Workspaces
      security:
      - Bearer: {}
      parameters:
      - name: limit
        in: query
        description: Decides how many entities should be returned
        example: 3
        required: false
        schema:
          type: integer
      - name: boards
        in: query
        type: string
        schema:
          "$ref": "#/components/schemas/include_associated_enum"
        required: false
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful with `boards=all`:
                  summary: successful with `boards=all`
                  value:
                  - id: 95
                    name: Viva
                    created_at: '2022-11-28T15:59:01.168Z'
                    updated_at: '2022-11-28T15:59:01.168Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/workspaces/95
                    boards:
                    - id: 93
                      name: Lutetium
                      colour: "#ccae79"
                      workspace_id: 95
                      created_at: '2022-11-28T15:59:01.171Z'
                      updated_at: '2022-11-28T15:59:01.171Z'
                      deleted_at:
                      custom_data: {}
                      url: http://www.example.com/api/boards/93
                      workspace_url: http://www.example.com/api/workspaces/95
                    - id: 94
                      name: Chromium
                      colour: "#fc40cf"
                      workspace_id: 95
                      created_at: '2022-11-28T15:59:01.172Z'
                      updated_at: '2022-11-28T15:59:01.172Z'
                      deleted_at:
                      custom_data: {}
                      url: http://www.example.com/api/boards/94
                      workspace_url: http://www.example.com/api/workspaces/95
                    - id: 95
                      name: Zinc
                      colour: "#e77f1f"
                      workspace_id: 95
                      created_at: '2022-11-28T15:59:01.173Z'
                      updated_at: '2022-11-28T15:59:01.173Z'
                      deleted_at:
                      custom_data: {}
                      url: http://www.example.com/api/boards/95
                      workspace_url: http://www.example.com/api/workspaces/95
                    - id: 96
                      name: Iridium
                      colour: "#ae0887"
                      workspace_id: 95
                      created_at: '2022-11-28T15:59:01.175Z'
                      updated_at: '2022-11-28T15:59:01.175Z'
                      deleted_at:
                      custom_data: {}
                      url: http://www.example.com/api/boards/96
                      workspace_url: http://www.example.com/api/workspaces/95
                    - id: 97
                      name: Hydrogen
                      colour: "#21575a"
                      workspace_id: 95
                      created_at: '2022-11-28T15:59:01.176Z'
                      updated_at: '2022-11-28T15:59:01.176Z'
                      deleted_at:
                      custom_data: {}
                      url: http://www.example.com/api/boards/97
                      workspace_url: http://www.example.com/api/workspaces/95
                  - id: 96
                    name: Kanlam
                    created_at: '2022-11-28T15:59:01.177Z'
                    updated_at: '2022-11-28T15:59:01.177Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/workspaces/96
                    boards: []
                successful:
                  summary: successful
                  value:
                  - id: 97
                    name: Aerified
                    created_at: '2022-11-28T15:59:01.203Z'
                    updated_at: '2022-11-28T15:59:01.203Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/workspaces/97
                  - id: 98
                    name: Kanlam
                    created_at: '2022-11-28T15:59:01.206Z'
                    updated_at: '2022-11-28T15:59:01.206Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/workspaces/98
                  - id: 99
                    name: Trippledex
                    created_at: '2022-11-28T15:59:01.234Z'
                    updated_at: '2022-11-28T15:59:01.234Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/workspaces/99
                  - id: 100
                    name: Cardguard
                    created_at: '2022-11-28T15:59:01.241Z'
                    updated_at: '2022-11-28T15:59:01.241Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/workspaces/100
                  - id: 101
                    name: Bitchip
                    created_at: '2022-11-28T15:59:01.246Z'
                    updated_at: '2022-11-28T15:59:01.246Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/workspaces/101
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/workspace_response"
    post:
      summary: create workspace
      tags:
      - Workspaces
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 102
                    name: New Workspace
                    created_at: '2022-11-28T15:59:01.286Z'
                    updated_at: '2022-11-28T15:59:01.286Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/workspaces/102
              schema:
                "$ref": "#/components/schemas/workspace_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/workspace_request"
  "/api/workspaces/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show workspace
      parameters:
      - name: boards
        in: query
        type: string
        schema:
          "$ref": "#/components/schemas/include_associated_enum"
        required: false
      tags:
      - Workspaces
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful with `boards=all`:
                  summary: successful with `boards=all`
                  value:
                    id: 103
                    name: Tresom
                    created_at: '2022-11-28T15:59:01.298Z'
                    updated_at: '2022-11-28T15:59:01.298Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/workspaces/103
                    boards:
                    - id: 98
                      name: Krypton
                      colour: "#dbdcf5"
                      workspace_id: 103
                      created_at: '2022-11-28T15:59:01.300Z'
                      updated_at: '2022-11-28T15:59:01.302Z'
                      deleted_at:
                      custom_data: {}
                      url: http://www.example.com/api/boards/98
                      workspace_url: http://www.example.com/api/workspaces/103
                    - id: 99
                      name: Ruthenium
                      colour: "#d45a71"
                      workspace_id: 103
                      created_at: '2022-11-28T15:59:01.304Z'
                      updated_at: '2022-11-28T15:59:01.305Z'
                      deleted_at:
                      custom_data: {}
                      url: http://www.example.com/api/boards/99
                      workspace_url: http://www.example.com/api/workspaces/103
                successful:
                  summary: successful
                  value:
                    id: 106
                    name: Lotlux
                    created_at: '2022-11-28T15:59:01.333Z'
                    updated_at: '2022-11-28T15:59:01.333Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/workspaces/106
              schema:
                "$ref": "#/components/schemas/workspace_response"
    put:
      summary: update workspace
      tags:
      - Workspaces
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 107
                    name: New Name
                    created_at: '2022-11-28T15:59:01.352Z'
                    updated_at: '2022-11-28T15:59:01.366Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/workspaces/107
              schema:
                "$ref": "#/components/schemas/workspace_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/workspace_request"
    delete:
      summary: delete workspace
      tags:
      - Workspaces
      responses:
        '204':
          description: successful
  "/api/workspaces/{id}/assign_user":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Workspace id
      required: true
      schema:
        type: string
    post:
      summary: Assign User
      tags:
      - Workspaces
      parameters: []
      responses:
        '204':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
  "/api/workspaces/{id}/unassign_user":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Workspace id
      required: true
      schema:
        type: string
    post:
      summary: Unassign User
      tags:
      - Workspaces
      parameters: []
      responses:
        '204':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
components:
  schemas:
    authorization:
      name: Authorization
      in: header
      type: string
      description: JWT token
      example: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiZGV2ZWxvcGVyIiwic3ViIjoiMSIsInNjcCI6InVzZXIiLCJhdWQiOm51bGwsImlhdCI6MTY2NjE4MDIzMiwiZXhwIjoxNjY3NDc2MjMyLCJqdGkiOiJhMzdlZTA5MC0zZGJmLTRhMzgtOTFiNy1mZTJlM2FiYjlkY2QifQ.tGGjFHfMszfGCfNZS6I-hQNLSu_2Xfs3W4hI8IT4CW0
      required: true
    include_associated_enum:
      type: string
      enum:
      - visible
      - invisible
      - non-archived
      - archived
      - all
    lambdee_models_enum:
      type: string
      enum:
      - DB::User
      - DB::Workspace
      - DB::Board
      - DB::List
      - DB::Task
      - DB::Comment
      - DB::Tag
      - DB::Sprint
      - DB::UserWorkspace
      - DB::TaskUser
      - DB::TaskTag
      - DB::SprintTask
    user_pages_response:
      type: object
      properties:
        users:
          type: array
          items:
            "$ref": "#components/schemas/user_response"
        total_pages:
          type: integer
      required:
      - users
    user_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        avatar_url:
          type: string
        url:
          type: string
        role:
          type: string
      required:
      - id
      - name
    user_request:
      type: object
      properties:
        user:
          type: object
          properties:
            name:
              type: string
            email:
              type: string
            password:
              type: string
            role:
              type: string
              enum:
              - guest
              - regular
              - developer
              - admin
              - manager
      required:
      - name
      - email
    user_update_request:
      type: object
      properties:
        user:
          type: object
          properties:
            name:
              type: string
            email:
              type: string
            password:
              type: string
            current_password:
              type: string
            role:
              type: string
              enum:
              - guest
              - regular
              - developer
              - admin
              - manager
      required:
      - current_password
    user_sign_in_request:
      type: object
      properties:
        user:
          type: object
          properties:
            email:
              type: string
            password:
              type: string
      required:
      - email
      - password
    comment_response:
      type: object
      properties:
        id:
          type: integer
        body:
          type: string
        deleted_at:
          type:
          - string
          - 'null'
          format: date_time
        author_id:
          type: integer
        task_id:
          type: integer
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        url:
          type: string
        users:
          type: array
          items:
            "$ref": "#/components/schemas/user_response"
          nullable: true
      required:
      - id
      - body
      - deleted_at
      - url
    tag_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        colour:
          type: string
        board_id:
          type: integer
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        url:
          type: string
        board_url:
          type: string
      required:
      - id
    tag_request:
      type: object
      properties:
        name:
          type: string
        colour:
          type: string
        board_id:
          type: integer
        task_id:
          type: integer
      required: []
    sprint_pages_response:
      type: object
      properties:
        sprints:
          type: array
          items:
            "$ref": "#components/schemas/sprint_response"
        total_pages:
          type: integer
      required:
      - sprints
    sprint_response:
      type: object
      properties:
        id:
          type: integer
        board_id:
          type: integer
        name:
          type: string
        description:
          type:
          - string
          - 'null'
        started_at:
          type: string
          format: date_time
        expected_end_at:
          type: string
          format: date_time
        ended_at:
          type:
          - string
          - 'null'
          format: date_time
        final_list_name:
          type: string
        url:
          type: string
        tasks:
          type: array
          items:
            "$ref": "#/components/schemas/task_with_sprint_task_response"
          nullable: true
      required:
      - id
      - name
    task_with_sprint_task_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        priority:
          type: string
        spent_time:
          type: integer
        points:
          type: integer
        added_at:
          type: string
          format: date_time
        completed_at:
          type:
          - string
          - 'null'
          format: date_time
        start_state:
          type: string
        state:
          type: string
      required:
      - id
    sprint_request:
      type: object
      properties:
        board_id:
          type: integer
        name:
          type: string
        description:
          type: string
        started_at:
          type: string
          format: date_time
          example: '2025-12-11T23:00:00'
        expected_end_at:
          type: string
          format: date_time
          example: '2025-12-18T23:00:00'
      required:
      - name
      - expected_end_at
    task_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type:
          - string
          - 'null'
        due_time:
          type:
          - string
          - 'null'
          format: date_time
        pos:
          type:
          - number
          - 'null'
          format: float
        priority:
          type:
          - string
          - 'null'
        points:
          type:
          - number
          - 'null'
          format: float
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        deleted_at:
          type:
          - string
          - 'null'
          format: date_time
        list_id:
          type: integer
        list_url:
          type: string
        url:
          type: string
        users:
          type: array
          items:
            "$ref": "#/components/schemas/user_response"
          nullable: true
        tags:
          type: array
          items:
            "$ref": "#/components/schemas/tag_response"
          nullable: true
        author:
          type: object
          schema:
            "$ref": "#/components/schemas/user_response"
          nullable: true
      required:
      - id
      - name
      - pos
      - priority
      - points
      - list_id
      - deleted_at
    task_request:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        due_time:
          type: string
          format: date_time
          example: '2025-12-18T23:00:00'
        pos:
          type: number
          format: float
          description: If not given, value will be set as for the last item in the
            list.
        priority:
          type: string
          enum:
          - very_low
          - low
          - medium
          - high
          - very_high
        points:
          type: number
          format: float
        list_id:
          type: integer
        author_id:
          type: integer
      required:
      - name
      - list_id
      - author_id
    list_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        pos:
          type: number
          format: float
        visible:
          type:
          - boolean
          - 'null'
        deleted_at:
          type:
          - string
          - 'null'
          format: date_time
        board_id:
          type: integer
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        url:
          type: string
        board_url:
          type: string
        tasks:
          type: array
          items:
            "$ref": "#/components/schemas/task_response"
          nullable: true
      required:
      - id
      - name
      - pos
      - visible
      - board_id
      - created_at
      - updated_at
      - deleted_at
    list_request:
      type: object
      properties:
        name:
          type: string
        pos:
          type: number
          format: float
        visible:
          type: boolean
        board_id:
          type: integer
      required:
      - name
      - board_id
    board_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        workspace_id:
          type: integer
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        deleted_at:
          type:
          - string
          - 'null'
          format: date_time
        url:
          type: string
        workspace_url:
          type: string
        lists:
          type: array
          items:
            "$ref": "#/components/schemas/list_response"
          nullable: true
      required:
      - id
      - name
      - workspace_id
      - created_at
      - updated_at
      - deleted_at
    board_request:
      type: object
      properties:
        name:
          type: string
        workspace_id:
          type: integer
      required:
      - name
      - workspace_id
    workspace_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        deleted_at:
          type:
          - string
          - 'null'
          format: date_time
        url:
          type: string
        boards:
          type: array
          items:
            "$ref": "#/components/schemas/board_response"
          nullable: true
      required:
      - id
      - name
      - created_at
      - updated_at
      - deleted_at
    workspace_request:
      type: object
      properties:
        name:
          type: string
      required:
      - name
    script_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        content:
          type: string
        url:
          type: string
        script_triggers:
          type: array
          items:
            "$ref": "#/components/schemas/nested_script_trigger_response"
      required: []
    script_request:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        content:
          type: string
        script_triggers_attributes:
          type: array
          items:
            "$ref": "#/components/schemas/nested_script_trigger_request"
      required:
      - name
    nested_script_trigger_response:
      type: object
      properties:
        id:
          type: integer
        script_id:
          type:
          - integer
          - 'null'
        subject_type:
          type:
          - string
          - 'null'
        subject_id:
          type:
          - integer
          - 'null'
        action:
          type: string
        url:
          type: string
      required: []
    nested_script_trigger_request:
      type: object
      properties:
        id:
          type: integer
          description: Needed only for updates and destroys.
        script_id:
          type: integer
        subject_type:
          "$ref": "#/components/schemas/lambdee_models_enum"
        subject_id:
          type: integer
        action:
          type: string
          enum:
          - create
          - update
          - destroy
        _destroy:
          type: boolean
          description: If `true` callback for given `id` will be destroyed. Works
            only nested in sprint.
      required:
      - action
    script_trigger_response:
      type: object
      properties:
        id:
          type: integer
        script_id:
          type: integer
        subject_type:
          type:
          - string
          - 'null'
        subject_id:
          type:
          - integer
          - 'null'
        action:
          type: string
        url:
          type: string
      required: []
    script_trigger_request:
      type: object
      properties:
        script_id:
          type: integer
        subject_type:
          "$ref": "#/components/schemas/lambdee_models_enum"
        subject_id:
          type: integer
        action:
          type: string
      required:
      - script_id
      - action
    script_run_response:
      type: object
      properties:
        id:
          type: integer
        script_id:
          type: integer
        initiator_id:
          type: integer
        input:
          type:
          - string
          - 'null'
        output:
          type: string
        state:
          type: string
        url:
          type: string
      required: []
    script_run_request:
      type: object
      properties:
        output:
          type: string
        state:
          type: string
          enum:
          - running
          - executed
          - failed
          - timed_out
      required: []
servers:
- url: "{defaultProtocol}://{defaultHost}"
  variables:
    defaultProtocol:
      default: http
    defaultHost:
      default: localhost:3000
