---
openapi: 3.0.1
info:
  title: Lambdee API V1
  version: v1
paths:
  "/api/boards":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: list boards
      tags:
      - Boards
      parameters:
      - name: limit
        in: query
        required: false
        description: Decides how many entities should be returned
        example: 3
        schema:
          type: integer
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - id: 1
                    name: Seaborgium
                    colour: "#b97f67"
                    workspace_id: 1
                    created_at: '2022-11-15T22:27:47.822Z'
                    updated_at: '2022-11-15T22:27:47.822Z'
                    deleted_at:
                    url: http://www.example.com/api/boards/1
                    workspace_url: http://www.example.com/api/workspaces/1
                  - id: 2
                    name: Neon
                    colour: "#2a473d"
                    workspace_id: 2
                    created_at: '2022-11-15T22:27:47.824Z'
                    updated_at: '2022-11-15T22:27:47.824Z'
                    deleted_at:
                    url: http://www.example.com/api/boards/2
                    workspace_url: http://www.example.com/api/workspaces/2
                  - id: 3
                    name: Cobalt
                    colour: "#c70031"
                    workspace_id: 3
                    created_at: '2022-11-15T22:27:47.827Z'
                    updated_at: '2022-11-15T22:27:47.827Z'
                    deleted_at:
                    url: http://www.example.com/api/boards/3
                    workspace_url: http://www.example.com/api/workspaces/3
                  - id: 4
                    name: Ruthenium
                    colour: "#3c20e2"
                    workspace_id: 4
                    created_at: '2022-11-15T22:27:47.829Z'
                    updated_at: '2022-11-15T22:27:47.829Z'
                    deleted_at:
                    url: http://www.example.com/api/boards/4
                    workspace_url: http://www.example.com/api/workspaces/4
                  - id: 5
                    name: Mercury
                    colour: "#349777"
                    workspace_id: 5
                    created_at: '2022-11-15T22:27:47.831Z'
                    updated_at: '2022-11-15T22:27:47.831Z'
                    deleted_at:
                    url: http://www.example.com/api/boards/5
                    workspace_url: http://www.example.com/api/workspaces/5
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/board_response"
    post:
      summary: create board
      tags:
      - Boards
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 6
                    name: New Board
                    colour:
                    workspace_id: 6
                    created_at: '2022-11-15T22:27:47.906Z'
                    updated_at: '2022-11-15T22:27:47.906Z'
                    deleted_at:
                    url: http://www.example.com/api/boards/6
                    workspace_url: http://www.example.com/api/workspaces/6
              schema:
                "$ref": "#/components/schemas/board_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/board_request"
  "/api/boards/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show board
      tags:
      - Boards
      parameters:
      - name: tasks
        in: query
        type: string
        schema:
          "$ref": "#/components/schemas/include_associated_enum"
        required: false
      - name: lists
        in: query
        type: string
        schema:
          "$ref": "#/components/schemas/include_associated_enum"
        required: false
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful with `lists=all`:
                  summary: successful with `lists=all`
                  value:
                    id: 7
                    name: Nitrogen
                    colour: "#8dc5fa"
                    workspace_id: 7
                    created_at: '2022-11-15T22:27:47.918Z'
                    updated_at: '2022-11-15T22:27:47.918Z'
                    deleted_at:
                    url: http://www.example.com/api/boards/7
                    workspace_url: http://www.example.com/api/workspaces/7
                    lists:
                    - id: 1
                      name: peach
                      pos: 65536.0
                      visible: false
                      deleted_at: '2022-11-15T22:27:47.936Z'
                      board_id: 7
                      created_at: '2022-11-15T22:27:47.929Z'
                      updated_at: '2022-11-15T22:27:47.932Z'
                      url: http://www.example.com/api/lists/1
                      board_url: http://www.example.com/api/boards/7
                    - id: 2
                      name: viridian
                      pos: 65536.0
                      visible: false
                      deleted_at:
                      board_id: 7
                      created_at: '2022-11-15T22:27:47.940Z'
                      updated_at: '2022-11-15T22:27:47.942Z'
                      url: http://www.example.com/api/lists/2
                      board_url: http://www.example.com/api/boards/7
                successful with `lists=visible`:
                  summary: successful with `lists=visible`
                  value:
                    id: 10
                    name: Cobalt
                    colour: "#857ef2"
                    workspace_id: 10
                    created_at: '2022-11-15T22:27:47.972Z'
                    updated_at: '2022-11-15T22:27:47.972Z'
                    deleted_at:
                    url: http://www.example.com/api/boards/10
                    workspace_url: http://www.example.com/api/workspaces/10
                    lists: []
                successful with `lists=archived`:
                  summary: successful with `lists=archived`
                  value:
                    id: 12
                    name: Fluorine
                    colour: "#8174cc"
                    workspace_id: 12
                    created_at: '2022-11-15T22:27:48.003Z'
                    updated_at: '2022-11-15T22:27:48.003Z'
                    deleted_at:
                    url: http://www.example.com/api/boards/12
                    workspace_url: http://www.example.com/api/workspaces/12
                    lists:
                    - id: 4
                      name: apricot
                      pos: 65536.0
                      visible: false
                      deleted_at: '2022-11-15T22:27:48.011Z'
                      board_id: 12
                      created_at: '2022-11-15T22:27:48.007Z'
                      updated_at: '2022-11-15T22:27:48.009Z'
                      url: http://www.example.com/api/lists/4
                      board_url: http://www.example.com/api/boards/12
                    - id: 5
                      name: indigo
                      pos: 65536.0
                      visible: false
                      deleted_at: '2022-11-15T22:27:48.018Z'
                      board_id: 12
                      created_at: '2022-11-15T22:27:48.015Z'
                      updated_at: '2022-11-15T22:27:48.016Z'
                      url: http://www.example.com/api/lists/5
                      board_url: http://www.example.com/api/boards/12
                successful:
                  summary: successful
                  value:
                    id: 15
                    name: Lithium
                    colour: "#c5657d"
                    workspace_id: 15
                    created_at: '2022-11-15T22:27:48.046Z'
                    updated_at: '2022-11-15T22:27:48.046Z'
                    deleted_at:
                    url: http://www.example.com/api/boards/15
                    workspace_url: http://www.example.com/api/workspaces/15
              schema:
                "$ref": "#/components/schemas/board_response"
    put:
      summary: update board
      tags:
      - Boards
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 16
                    name: New Name
                    colour: "#39d43f"
                    workspace_id: 16
                    created_at: '2022-11-15T22:27:48.071Z'
                    updated_at: '2022-11-15T22:27:48.085Z'
                    deleted_at:
                    url: http://www.example.com/api/boards/16
                    workspace_url: http://www.example.com/api/workspaces/16
              schema:
                "$ref": "#/components/schemas/board_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/board_request"
    delete:
      summary: delete board
      tags:
      - Boards
      responses:
        '204':
          description: successful
  "/api/boards/{id}/user_tasks":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: list current user tasks including board, lists, tags, users and author
      tags:
      - Boards
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 18
                    name: Aluminum
                    colour: "#1c9451"
                    workspace_id: 18
                    created_at: '2022-11-15T22:27:48.133Z'
                    updated_at: '2022-11-15T22:27:48.133Z'
                    deleted_at:
                    url: http://www.example.com/api/boards/18
                    workspace_url: http://www.example.com/api/workspaces/18
                    lists: []
              schema:
                "$ref": "#/components/schemas/board_response"
  "/api/boards/recently_viewed":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: list current user recently viewed boards (max 6)
      tags:
      - Boards
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value: []
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/board_response"
  "/api/tasks/{id}/comments":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Task id
      required: true
      schema:
        type: string
    get:
      summary: List task's comments
      tags:
      - Comments
      parameters:
      - name: with_author
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful with `with_author=true`:
                  summary: successful with `with_author=true`
                  value:
                  - id: 5
                    body: |-
                      ## Reiciendis
                      Est velit quod. Reiciendis velit cumque. Tenetur voluptatem ea.
                      **Laboriosam** deserunt inventore. Assumenda ut iure. Consequatur qui dolorem.
                    deleted_at:
                    author_id: 22
                    task_id: 2
                    created_at: '2022-11-15T22:27:48.278Z'
                    updated_at: '2022-11-15T22:27:48.278Z'
                    url: http://www.example.com/api/comments/5
                    author:
                      id: 22
                      name: Maryalice Bogisich CPA
                      avatar_url: https://www.gravatar.com/avatar/6d716ed22453cf740fd8bca328b61b10
                      role: developer
                      url: http://www.example.com/api/users/22
                      email: maryalice_bogisich_cpa.1668551268@example.com
                      created_at: '2022-11-15T22:27:48.262Z'
                      updated_at: '2022-11-15T22:27:48.262Z'
                  - id: 4
                    body: |-
                      ###### Tenetur
                      Est nihil aut.
                      ```ruby
                      Dignissimos.
                      ```
                    deleted_at:
                    author_id: 22
                    task_id: 2
                    created_at: '2022-11-15T22:27:48.276Z'
                    updated_at: '2022-11-15T22:27:48.276Z'
                    url: http://www.example.com/api/comments/4
                    author:
                      id: 22
                      name: Maryalice Bogisich CPA
                      avatar_url: https://www.gravatar.com/avatar/6d716ed22453cf740fd8bca328b61b10
                      role: developer
                      url: http://www.example.com/api/users/22
                      email: maryalice_bogisich_cpa.1668551268@example.com
                      created_at: '2022-11-15T22:27:48.262Z'
                      updated_at: '2022-11-15T22:27:48.262Z'
                  - id: 3
                    body: |-
                      ### Magni
                      Accusamus inventore voluptas.
                      `Dolor.`
                    deleted_at:
                    author_id: 22
                    task_id: 2
                    created_at: '2022-11-15T22:27:48.274Z'
                    updated_at: '2022-11-15T22:27:48.274Z'
                    url: http://www.example.com/api/comments/3
                    author:
                      id: 22
                      name: Maryalice Bogisich CPA
                      avatar_url: https://www.gravatar.com/avatar/6d716ed22453cf740fd8bca328b61b10
                      role: developer
                      url: http://www.example.com/api/users/22
                      email: maryalice_bogisich_cpa.1668551268@example.com
                      created_at: '2022-11-15T22:27:48.262Z'
                      updated_at: '2022-11-15T22:27:48.262Z'
                  - id: 2
                    body: |-
                      # Vel
                      Et fuga adipisci. Et dolorem ducimus.
                      exercitationem | atque | architecto
                      ---- | ---- | ----
                      tenetur | in | consequatur
                      recusandae | corrupti | magni
                    deleted_at:
                    author_id: 22
                    task_id: 2
                    created_at: '2022-11-15T22:27:48.273Z'
                    updated_at: '2022-11-15T22:27:48.273Z'
                    url: http://www.example.com/api/comments/2
                    author:
                      id: 22
                      name: Maryalice Bogisich CPA
                      avatar_url: https://www.gravatar.com/avatar/6d716ed22453cf740fd8bca328b61b10
                      role: developer
                      url: http://www.example.com/api/users/22
                      email: maryalice_bogisich_cpa.1668551268@example.com
                      created_at: '2022-11-15T22:27:48.262Z'
                      updated_at: '2022-11-15T22:27:48.262Z'
                  - id: 1
                    body: |-
                      # Nostrum
                      Non sit vel.
                      ```ruby
                      Alias.
                      ```
                    deleted_at:
                    author_id: 22
                    task_id: 2
                    created_at: '2022-11-15T22:27:48.271Z'
                    updated_at: '2022-11-15T22:27:48.271Z'
                    url: http://www.example.com/api/comments/1
                    author:
                      id: 22
                      name: Maryalice Bogisich CPA
                      avatar_url: https://www.gravatar.com/avatar/6d716ed22453cf740fd8bca328b61b10
                      role: developer
                      url: http://www.example.com/api/users/22
                      email: maryalice_bogisich_cpa.1668551268@example.com
                      created_at: '2022-11-15T22:27:48.262Z'
                      updated_at: '2022-11-15T22:27:48.262Z'
                successful:
                  summary: successful
                  value:
                  - id: 10
                    body: |-
                      ## Vel
                      Numquam in voluptas.
                      `Aut.`
                    deleted_at:
                    author_id: 25
                    task_id: 3
                    created_at: '2022-11-15T22:27:48.324Z'
                    updated_at: '2022-11-15T22:27:48.324Z'
                    url: http://www.example.com/api/comments/10
                  - id: 9
                    body: |-
                      ##### Nobis
                      Expedita sint molestiae. Nihil qui cupiditate.
                      ```ruby
                      Consequatur.
                      ```
                    deleted_at:
                    author_id: 25
                    task_id: 3
                    created_at: '2022-11-15T22:27:48.322Z'
                    updated_at: '2022-11-15T22:27:48.322Z'
                    url: http://www.example.com/api/comments/9
                  - id: 8
                    body: |-
                      ## Voluptate
                      Aperiam dolore id. Aut atque cupiditate.
                      ```ruby
                      Quo.
                      ```
                    deleted_at:
                    author_id: 25
                    task_id: 3
                    created_at: '2022-11-15T22:27:48.321Z'
                    updated_at: '2022-11-15T22:27:48.321Z'
                    url: http://www.example.com/api/comments/8
                  - id: 7
                    body: |-
                      # Adipisci
                      Architecto voluptas enim.
                      ullam | repellat | dolor
                      ---- | ---- | ----
                      inventore | ea | nam
                      ab | sequi | laboriosam
                    deleted_at:
                    author_id: 25
                    task_id: 3
                    created_at: '2022-11-15T22:27:48.319Z'
                    updated_at: '2022-11-15T22:27:48.319Z'
                    url: http://www.example.com/api/comments/7
                  - id: 6
                    body: |-
                      #### Id
                      Id qui reprehenderit. Voluptate qui quis.
                      Magnam porro architecto. Distinctio ea id. Commodi _id_ et.
                    deleted_at:
                    author_id: 25
                    task_id: 3
                    created_at: '2022-11-15T22:27:48.318Z'
                    updated_at: '2022-11-15T22:27:48.318Z'
                    url: http://www.example.com/api/comments/6
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/comment_response"
  "/api/lists":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: List lists
      tags:
      - Lists
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - id: 9
                    name: copper
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 28
                    created_at: '2022-11-15T22:27:48.345Z'
                    updated_at: '2022-11-15T22:27:48.345Z'
                    url: http://www.example.com/api/lists/9
                    board_url: http://www.example.com/api/boards/28
                  - id: 10
                    name: violet
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 29
                    created_at: '2022-11-15T22:27:48.349Z'
                    updated_at: '2022-11-15T22:27:48.349Z'
                    url: http://www.example.com/api/lists/10
                    board_url: http://www.example.com/api/boards/29
                  - id: 11
                    name: mauve
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 30
                    created_at: '2022-11-15T22:27:48.353Z'
                    updated_at: '2022-11-15T22:27:48.353Z'
                    url: http://www.example.com/api/lists/11
                    board_url: http://www.example.com/api/boards/30
                  - id: 12
                    name: lilac
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 31
                    created_at: '2022-11-15T22:27:48.357Z'
                    updated_at: '2022-11-15T22:27:48.357Z'
                    url: http://www.example.com/api/lists/12
                    board_url: http://www.example.com/api/boards/31
                  - id: 13
                    name: ivory
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 32
                    created_at: '2022-11-15T22:27:48.361Z'
                    updated_at: '2022-11-15T22:27:48.361Z'
                    url: http://www.example.com/api/lists/13
                    board_url: http://www.example.com/api/boards/32
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/list_response"
    post:
      summary: Create List
      tags:
      - Lists
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 14
                    name: New List
                    pos: 1212.0
                    visible: false
                    deleted_at:
                    board_id: 33
                    created_at: '2022-11-15T22:27:48.400Z'
                    updated_at: '2022-11-15T22:27:48.400Z'
                    url: http://www.example.com/api/lists/14
                    board_url: http://www.example.com/api/boards/33
              schema:
                "$ref": "#/components/schemas/list_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/list_request"
  "/api/lists/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show List
      tags:
      - Lists
      parameters:
      - name: tasks
        in: query
        type: string
        schema:
          "$ref": "#/components/schemas/include_associated_enum"
        required: false
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful with `tasks=all`:
                  summary: successful with `tasks=all`
                  value:
                    id: 15
                    name: yellow
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 34
                    created_at: '2022-11-15T22:27:48.414Z'
                    updated_at: '2022-11-15T22:27:48.414Z'
                    url: http://www.example.com/api/lists/15
                    board_url: http://www.example.com/api/boards/34
                    tasks:
                    - id: 4
                      name: Daydream
                      pos: 65536.0
                      priority: low
                      spent_time: 0
                      points: 4
                      list_id: 15
                      deleted_at:
                      url: http://www.example.com/api/tasks/4
                      list_url: http://www.example.com/api/lists/15
                      users:
                      - id: 30
                        name: Amb. Wanita Roberts
                        avatar_url: https://www.gravatar.com/avatar/23dbce528cd634d7b92224da3b7cbff6
                        role: regular
                        url: http://www.example.com/api/users/30
                      - id: 31
                        name: Doyle Kirlin I
                        avatar_url: https://www.gravatar.com/avatar/8ae2f3df7a5a0b06d332398ddd0a92b9
                        role: guest
                        url: http://www.example.com/api/users/31
                      tags:
                      - id: 2
                        name: Mining
                        colour: "#0ea408"
                        url: http://www.example.com/api/tags/2
                      - id: 3
                        name: Real-Estate
                        colour: "#e09a49"
                        url: http://www.example.com/api/tags/3
                    - id: 5
                      name: Faith
                      pos: 65536.0
                      priority: medium
                      spent_time: 0
                      points: 1
                      list_id: 15
                      deleted_at: '2022-11-15T22:27:48.459Z'
                      url: http://www.example.com/api/tasks/5
                      list_url: http://www.example.com/api/lists/15
                      users: []
                      tags: []
                successful with `tasks=visible`:
                  summary: successful with `tasks=visible`
                  value:
                    id: 18
                    name: blue
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 39
                    created_at: '2022-11-15T22:27:48.490Z'
                    updated_at: '2022-11-15T22:27:48.490Z'
                    url: http://www.example.com/api/lists/18
                    board_url: http://www.example.com/api/boards/39
                    tasks:
                    - id: 6
                      name: Songs About Jane
                      pos: 65536.0
                      priority: very_low
                      spent_time: 0
                      points: 5
                      list_id: 18
                      deleted_at:
                      url: http://www.example.com/api/tasks/6
                      list_url: http://www.example.com/api/lists/18
                      users:
                      - id: 35
                        name: Carissa Johnston
                        avatar_url: https://www.gravatar.com/avatar/2b2c1f4896609603dcce464561d4f752
                        role: regular
                        url: http://www.example.com/api/users/35
                      - id: 36
                        name: Caroline Koelpin
                        avatar_url: https://www.gravatar.com/avatar/4ec9fac8f636148b14d2c7609a711134
                        role: developer
                        url: http://www.example.com/api/users/36
                      tags:
                      - id: 4
                        name: Community-Services
                        colour: "#b4abec"
                        url: http://www.example.com/api/tags/4
                    - id: 7
                      name: Whitney
                      pos: 65536.0
                      priority: medium
                      spent_time: 0
                      points: 5
                      list_id: 18
                      deleted_at:
                      url: http://www.example.com/api/tasks/7
                      list_url: http://www.example.com/api/lists/18
                      users: []
                      tags: []
                successful with `tasks=archived`:
                  summary: successful with `tasks=archived`
                  value:
                    id: 21
                    name: lavender
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 43
                    created_at: '2022-11-15T22:27:48.555Z'
                    updated_at: '2022-11-15T22:27:48.555Z'
                    url: http://www.example.com/api/lists/21
                    board_url: http://www.example.com/api/boards/43
                    tasks:
                    - id: 8
                      name: Metallica
                      pos: 65536.0
                      priority: medium
                      spent_time: 0
                      points: 4
                      list_id: 21
                      deleted_at: '2022-11-15T22:27:48.569Z'
                      url: http://www.example.com/api/tasks/8
                      list_url: http://www.example.com/api/lists/21
                      users: []
                      tags: []
                    - id: 9
                      name: Sgt. Pepper's Lonely Hearts Club Band
                      pos: 65536.0
                      priority: very_high
                      spent_time: 0
                      points: 5
                      list_id: 21
                      deleted_at: '2022-11-15T22:27:48.582Z'
                      url: http://www.example.com/api/tasks/9
                      list_url: http://www.example.com/api/lists/21
                      users:
                      - id: 41
                        name: Leon Lindgren
                        avatar_url: https://www.gravatar.com/avatar/8e69a75c1b1546b74a860117a6bb66a5
                        role: regular
                        url: http://www.example.com/api/users/41
                      tags:
                      - id: 5
                        name: Design
                        colour: "#312460"
                        url: http://www.example.com/api/tags/5
                successful:
                  summary: successful
                  value:
                    id: 24
                    name: sapphire
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 47
                    created_at: '2022-11-15T22:27:48.620Z'
                    updated_at: '2022-11-15T22:27:48.620Z'
                    url: http://www.example.com/api/lists/24
                    board_url: http://www.example.com/api/boards/47
              schema:
                "$ref": "#/components/schemas/list_response"
    put:
      summary: Update list
      tags:
      - Lists
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 25
                    name: New Name
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 48
                    created_at: '2022-11-15T22:27:48.640Z'
                    updated_at: '2022-11-15T22:27:48.658Z'
                    url: http://www.example.com/api/lists/25
                    board_url: http://www.example.com/api/boards/48
              schema:
                "$ref": "#/components/schemas/list_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/list_request"
    delete:
      summary: Delete list
      tags:
      - Lists
      responses:
        '204':
          description: successful
  "/api/script_runs":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: List script runs
      tags:
      - ScriptRuns
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - id: 1
                    script_id: 1
                    input: puts 'Hello world'
                    output: Hello world
                    initiator_id: 48
                    state: running
                    url: http://www.example.com/api/script_runs/1
                  - id: 2
                    script_id: 2
                    input: puts 'Hello world'
                    output: Hello world
                    initiator_id: 50
                    state: running
                    url: http://www.example.com/api/script_runs/2
                  - id: 3
                    script_id: 3
                    input: puts 'Hello world'
                    output: Hello world
                    initiator_id: 52
                    state: running
                    url: http://www.example.com/api/script_runs/3
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/script_run_response"
  "/api/scripts/{id}/script_runs":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Script id
      required: true
      schema:
        type: string
    get:
      summary: List script's script runs
      tags:
      - ScriptRuns
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - id: 4
                    script_id: 4
                    input: puts 'Hello world'
                    output: Hello world
                    initiator_id: 56
                    state: running
                    url: http://www.example.com/api/script_runs/4
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/script_run_response"
  "/api/script_runs/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show script run
      tags:
      - ScriptRuns
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 5
                    script_id: 5
                    input: puts 'Hello world'
                    output: Hello world
                    initiator_id: 60
                    state: running
                    url: http://www.example.com/api/script_runs/5
              schema:
                "$ref": "#/components/schemas/script_run_response"
    put:
      summary: Update script run
      tags:
      - ScriptRuns
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 6
                    script_id: 6
                    input: puts 'Hello world'
                    output: example output
                    initiator_id: 64
                    state: executed
                    url: http://www.example.com/api/script_runs/6
              schema:
                "$ref": "#/components/schemas/script_run_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/script_run_request"
  "/api/script_triggers":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    post:
      summary: Create script trigger
      tags:
      - Script triggers
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 1
                    script_id: 7
                    subject_type: DB::Task
                    subject_id: 10
                    action: destroy
                    url: http://www.example.com/api/script_triggers/1
              schema:
                "$ref": "#/components/schemas/script_trigger_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/script_trigger_request"
  "/api/script_triggers/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show script trigger
      tags:
      - Script triggers
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 2
                    script_id: 8
                    subject_type:
                    subject_id:
                    action: create
                    url: http://www.example.com/api/script_triggers/2
              schema:
                "$ref": "#/components/schemas/script_trigger_response"
    put:
      summary: Update script trigger
      tags:
      - Script triggers
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 3
                    script_id: 9
                    subject_type:
                    subject_id:
                    action: destroy
                    url: http://www.example.com/api/script_triggers/3
              schema:
                "$ref": "#/components/schemas/script_trigger_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/script_trigger_request"
    delete:
      summary: Delete script_trigger
      tags:
      - Script triggers
      responses:
        '204':
          description: successful
  "/api/scripts":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: List scripts
      tags:
      - Scripts
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - id: 11
                    content: puts 'hello world'
                    name: My first Lambdee Script
                    description: Description of the script
                    author_id: 80
                    url: http://www.example.com/api/scripts/11
                  - id: 12
                    content: puts 'hello world'
                    name: My first Lambdee Script
                    description: Description of the script
                    author_id: 81
                    url: http://www.example.com/api/scripts/12
                  - id: 13
                    content: puts 'hello world'
                    name: My first Lambdee Script
                    description: Description of the script
                    author_id: 82
                    url: http://www.example.com/api/scripts/13
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/script_response"
    post:
      summary: Create Script
      tags:
      - Scripts
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 14
                    content: puts 'Hello world!'
                    name: New Script
                    description: What script does
                    author_id: 85
                    url: http://www.example.com/api/scripts/14
                    script_triggers:
                    - id: 5
                      script_id: 14
                      subject_type:
                      subject_id:
                      action: create
                      url: http://www.example.com/api/script_triggers/5
                    - id: 6
                      script_id: 14
                      subject_type: DB::Task
                      subject_id:
                      action: update
                      url: http://www.example.com/api/script_triggers/6
                    - id: 7
                      script_id: 14
                      subject_type: DB::Task
                      subject_id: 11
                      action: destroy
                      url: http://www.example.com/api/script_triggers/7
              schema:
                "$ref": "#/components/schemas/script_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/script_request"
  "/api/scripts/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show Script
      tags:
      - Scripts
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 15
                    content: puts 'hello world'
                    name: My first Lambdee Script
                    description: Description of the script
                    author_id: 88
                    url: http://www.example.com/api/scripts/15
                    script_triggers: []
              schema:
                "$ref": "#/components/schemas/script_response"
    put:
      summary: Update Script
      tags:
      - Scripts
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 16
                    content: puts 'hello world'
                    name: New Name
                    description: Description of the script
                    author_id: 91
                    url: http://www.example.com/api/scripts/16
                    script_triggers:
                    - id: 9
                      script_id: 16
                      subject_type:
                      subject_id:
                      action: create
                      url: http://www.example.com/api/script_triggers/9
              schema:
                "$ref": "#/components/schemas/script_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/script_request"
    delete:
      summary: Delete script
      tags:
      - Scripts
      responses:
        '204':
          description: successful
  "/api/boards/{id}/sprints":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Board id
      required: true
      schema:
        type: string
    get:
      summary: List board's sprints
      tags:
      - Sprints
      parameters:
      - name: page
        in: query
        required: false
        description: Decides which result page should be returned.
        example: 2
        schema:
          type: integer
      - name: per
        in: query
        required: false
        description: Decides how many entities should be returned per one page. **Works
          only, when `page` param is given.**
        example: 2
        schema:
          type: integer
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    sprints:
                    - id: 1
                      board_id: 52
                      name: Shepparton – Mooroopna
                      description: Libero id ex. Adipisci laborum perferendis. Voluptas
                        sint iusto.
                      started_at: '2022-11-15T22:27:50.241Z'
                      expected_end_at: '2022-11-22T22:27:50.241Z'
                      ended_at:
                      final_list_name: Done
                      url: http://www.example.com/api/sprints/1
                    - id: 2
                      board_id: 52
                      name: Lismore
                      description: Ut autem quia. Sint repellat similique. Voluptas
                        officia consequatur.
                      started_at: '2022-11-15T22:27:50.245Z'
                      expected_end_at: '2022-11-22T22:27:50.245Z'
                      ended_at:
                      final_list_name: Done
                      url: http://www.example.com/api/sprints/2
                    - id: 3
                      board_id: 52
                      name: Ballarat
                      description: Debitis aliquid assumenda. Ea id est. Laboriosam
                        quas dolores.
                      started_at: '2022-11-15T22:27:50.248Z'
                      expected_end_at: '2022-11-22T22:27:50.248Z'
                      ended_at:
                      final_list_name: Done
                      url: http://www.example.com/api/sprints/3
              schema:
                "$ref": "#/components/schemas/sprint_pages_response"
  "/api/sprints":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: List sprints
      tags:
      - Sprints
      parameters:
      - name: page
        in: query
        required: false
        description: Decides which result page should be returned.
        example: 2
        schema:
          type: integer
      - name: per
        in: query
        required: false
        description: Decides how many entities should be returned per one page. **Works
          only, when `page` param is given.**
        example: 2
        schema:
          type: integer
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    sprints: []
              schema:
                "$ref": "#/components/schemas/sprint_pages_response"
    post:
      summary: Create sprint
      tags:
      - Sprints
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 4
                    board_id: 53
                    name: New Sprint
                    description: Example description of new sprint
                    started_at: '2022-11-15T22:27:50.320Z'
                    expected_end_at: '2025-12-11T23:00:00.000Z'
                    ended_at:
                    final_list_name: Done
                    url: http://www.example.com/api/sprints/4
              schema:
                "$ref": "#/components/schemas/sprint_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/sprint_request"
  "/api/sprints/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    - name: tasks
      in: query
      example: all
      required: false
      schema:
        type: string
    get:
      summary: Show Sprint
      tags:
      - Sprints
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful with `tasks=all`:
                  summary: successful with `tasks=all`
                  value:
                    id: 5
                    board_id: 54
                    name: Bendigo
                    description: Suscipit qui voluptatem. Ut animi necessitatibus.
                      Culpa est ipsam.
                    started_at: '2022-11-15T22:27:50.334Z'
                    expected_end_at: '2022-11-22T22:27:50.334Z'
                    ended_at:
                    final_list_name: Done
                    url: http://www.example.com/api/sprints/5
                    tasks:
                    - id: 12
                      name: The Wall
                      priority: high
                      spent_time: 0
                      points: 3
                      added_at: '2022-11-15T22:27:50.356Z'
                      completed_at:
                      start_state: To Do
                      state: Doing
                successful:
                  summary: successful
                  value:
                    id: 6
                    board_id: 56
                    name: Central Coast
                    description: Aliquam ut et. Iure quae repellendus. Rem eius doloremque.
                    started_at: '2022-11-15T22:27:50.383Z'
                    expected_end_at: '2022-11-22T22:27:50.383Z'
                    ended_at:
                    final_list_name: Done
                    url: http://www.example.com/api/sprints/6
              schema:
                "$ref": "#/components/schemas/sprint_response"
    put:
      summary: Update Sprint
      tags:
      - Sprints
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 7
                    board_id: 57
                    name: New Name
                    description: Neque ipsam sit. Distinctio dolores sint. Ipsum id
                      et.
                    started_at: '2022-11-15T22:27:50.408Z'
                    expected_end_at: '2022-11-22T22:27:50.408Z'
                    ended_at:
                    final_list_name: Done
                    url: http://www.example.com/api/sprints/7
              schema:
                "$ref": "#/components/schemas/sprint_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/sprint_request"
    delete:
      summary: Delete sprint
      tags:
      - Sprints
      responses:
        '204':
          description: successful
  "/api/sprints/{id}/end":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    put:
      summary: End sprint
      tags:
      - Sprints
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 9
                    board_id: 59
                    name: Kalgoorlie
                    description: Facere ratione atque. Qui alias perspiciatis. Qui
                      reiciendis quasi.
                    started_at: '2022-11-15T22:27:50.460Z'
                    expected_end_at: '2022-11-22T22:27:50.460Z'
                    ended_at: '2022-11-15T22:27:50.478Z'
                    final_list_name: Done
                    url: http://www.example.com/api/sprints/9
              schema:
                "$ref": "#/components/schemas/sprint_response"
  "/api/boards/{id}/active_sprint":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show active sprint
      tags:
      - Sprints
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 10
                    board_id: 60
                    name: Bathurst
                    description: Aut porro sint. Unde quae vero. Eaque quae nihil.
                    started_at: '2022-11-15T22:27:50.487Z'
                    expected_end_at: '2022-11-22T22:27:50.487Z'
                    ended_at:
                    final_list_name: Done
                    url: http://www.example.com/api/sprints/10
              schema:
                "$ref": "#/components/schemas/sprint_response"
  "/api/sprints/{id}/burn_up_chart":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show data for burn up chart
      tags:
      - Sprints
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - name: Work Scope
                    data:
                      '2022-11-22': 0
                  - name: Completed work
                    data: {}
  "/api/boards/{id}/tags":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Board id
      required: true
      schema:
        type: string
    get:
      summary: List board's tags
      tags:
      - Tags
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - id: 6
                    name: Sales
                    colour: "#a9ef23"
                    url: http://www.example.com/api/tags/6
                    board_id: 62
                    created_at: '2022-11-15T22:27:50.540Z'
                    updated_at: '2022-11-15T22:27:50.540Z'
                  - id: 7
                    name: Retail
                    colour: "#19ea29"
                    url: http://www.example.com/api/tags/7
                    board_id: 62
                    created_at: '2022-11-15T22:27:50.541Z'
                    updated_at: '2022-11-15T22:27:50.541Z'
                  - id: 8
                    name: Government
                    colour: "#1a67cd"
                    url: http://www.example.com/api/tags/8
                    board_id: 62
                    created_at: '2022-11-15T22:27:50.542Z'
                    updated_at: '2022-11-15T22:27:50.542Z'
                  - id: 9
                    name: Accounting
                    colour: "#8be19c"
                    url: http://www.example.com/api/tags/9
                    board_id: 62
                    created_at: '2022-11-15T22:27:50.547Z'
                    updated_at: '2022-11-15T22:27:50.547Z'
                  - id: 10
                    name: Marketing
                    colour: "#a95736"
                    url: http://www.example.com/api/tags/10
                    board_id: 62
                    created_at: '2022-11-15T22:27:50.548Z'
                    updated_at: '2022-11-15T22:27:50.548Z'
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/tag_response"
    post:
      summary: Create tag
      tags:
      - Tags
      parameters:
      - name: id
        in: path
        description: Board id
        required: true
        schema:
          type: string
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 11
                    name: New Tag
                    colour: "#fff000"
                    url: http://www.example.com/api/tags/11
                    board_id: 63
                    created_at: '2022-11-15T22:27:50.586Z'
                    updated_at: '2022-11-15T22:27:50.586Z'
              schema:
                "$ref": "#/components/schemas/tag_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/tag_request"
  "/api/tags":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    post:
      summary: Create tag
      tags:
      - Tags
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 12
                    name: New Tag
                    colour: "#fff000"
                    url: http://www.example.com/api/tags/12
                    board_id: 64
                    created_at: '2022-11-15T22:27:50.619Z'
                    updated_at: '2022-11-15T22:27:50.619Z'
              schema:
                "$ref": "#/components/schemas/tag_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/tag_request"
  "/api/tasks/{id}/tags":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Task id
      required: true
      schema:
        type: string
    get:
      summary: List task's tags
      tags:
      - Tags
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - id: 13
                    name: Mining
                    colour: "#376e9b"
                    url: http://www.example.com/api/tags/13
                    board_id: 65
                    created_at: '2022-11-15T22:27:50.638Z'
                    updated_at: '2022-11-15T22:27:50.638Z'
                  - id: 14
                    name: IT
                    colour: "#a36826"
                    url: http://www.example.com/api/tags/14
                    board_id: 65
                    created_at: '2022-11-15T22:27:50.641Z'
                    updated_at: '2022-11-15T22:27:50.641Z'
                  - id: 15
                    name: Retail
                    colour: "#a88b03"
                    url: http://www.example.com/api/tags/15
                    board_id: 65
                    created_at: '2022-11-15T22:27:50.643Z'
                    updated_at: '2022-11-15T22:27:50.643Z'
                  - id: 16
                    name: Design
                    colour: "#80e447"
                    url: http://www.example.com/api/tags/16
                    board_id: 65
                    created_at: '2022-11-15T22:27:50.645Z'
                    updated_at: '2022-11-15T22:27:50.645Z'
                  - id: 17
                    name: Marketing
                    colour: "#39fafd"
                    url: http://www.example.com/api/tags/17
                    board_id: 65
                    created_at: '2022-11-15T22:27:50.648Z'
                    updated_at: '2022-11-15T22:27:50.648Z'
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/tag_response"
    post:
      summary: Create tag (associated with given task and task's board)
      tags:
      - Tags
      parameters:
      - name: id
        in: path
        description: Task id
        required: true
        schema:
          type: string
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 18
                    name: New Tag
                    colour: "#fff000"
                    url: http://www.example.com/api/tags/18
                    board_id: 66
                    created_at: '2022-11-15T22:27:50.695Z'
                    updated_at: '2022-11-15T22:27:50.695Z'
              schema:
                "$ref": "#/components/schemas/tag_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/tag_request"
  "/api/tags/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show Tags
      tags:
      - Tags
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 19
                    name: Real-Estate
                    colour: "#83999a"
                    url: http://www.example.com/api/tags/19
                    board_id: 67
                    created_at: '2022-11-15T22:27:50.707Z'
                    updated_at: '2022-11-15T22:27:50.707Z'
              schema:
                "$ref": "#/components/schemas/tag_response"
    put:
      summary: Update Tag
      tags:
      - Tags
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 20
                    name: New Name
                    colour: "#a891a1"
                    url: http://www.example.com/api/tags/20
                    board_id: 68
                    created_at: '2022-11-15T22:27:50.739Z'
                    updated_at: '2022-11-15T22:27:50.770Z'
              schema:
                "$ref": "#/components/schemas/tag_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/tag_request"
    delete:
      summary: Delete tag
      tags:
      - Tags
      responses:
        '204':
          description: successful
  "/api/tasks":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: List tasks
      tags:
      - Tasks
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - id: 16
                    name: 'Gold: Greatest Hits'
                    pos: 65536.0
                    priority: very_low
                    spent_time: 0
                    points: 1
                    list_id: 33
                    deleted_at:
                    url: http://www.example.com/api/tasks/16
                    list_url: http://www.example.com/api/lists/33
                    description: "###### Aliquid\nIpsum quidem voluptas. Vero ratione
                      pariatur. Voluptatem omnis quaerat. Dolorem ut quos.\n0. Deleniti.
                      \n"
                    created_at: '2022-11-15T22:27:50.848Z'
                    updated_at: '2022-11-15T22:27:50.848Z'
                  - id: 17
                    name: Brothers in Arms
                    pos: 65536.0
                    priority: very_high
                    spent_time: 0
                    points: 4
                    list_id: 34
                    deleted_at:
                    url: http://www.example.com/api/tasks/17
                    list_url: http://www.example.com/api/lists/34
                    description: |-
                      ## Dolorum
                      Qui hic tempora. Quas nam ut. Reprehenderit minima maiores. Non quisquam voluptatem. Sint sequi aut.
                      `Illo.`
                    created_at: '2022-11-15T22:27:50.858Z'
                    updated_at: '2022-11-15T22:27:50.858Z'
                  - id: 18
                    name: All We Know Is Falling
                    pos: 65536.0
                    priority: high
                    spent_time: 0
                    points: 3
                    list_id: 35
                    deleted_at:
                    url: http://www.example.com/api/tasks/18
                    list_url: http://www.example.com/api/lists/35
                    description: |-
                      #### In
                      Explicabo consequatur veniam. Aut cumque nihil. Vel in nisi.
                      Incidunt ~qui~ rem. Voluptas inventore aut. Ut quibusdam et.
                    created_at: '2022-11-15T22:27:50.868Z'
                    updated_at: '2022-11-15T22:27:50.868Z'
                  - id: 19
                    name: Nevermind
                    pos: 65536.0
                    priority: very_low
                    spent_time: 0
                    points: 2
                    list_id: 36
                    deleted_at:
                    url: http://www.example.com/api/tasks/19
                    list_url: http://www.example.com/api/lists/36
                    description: |-
                      ### Reiciendis
                      Assumenda fugit autem. Delectus molestias amet. Aspernatur quia earum.
                      `Ut.`
                    created_at: '2022-11-15T22:27:50.878Z'
                    updated_at: '2022-11-15T22:27:50.878Z'
                  - id: 20
                    name: Music Box
                    pos: 65536.0
                    priority: very_low
                    spent_time: 0
                    points: 5
                    list_id: 37
                    deleted_at:
                    url: http://www.example.com/api/tasks/20
                    list_url: http://www.example.com/api/lists/37
                    description: "### Debitis\nVoluptatem eveniet architecto. Atque
                      in distinctio. Modi omnis quia.\n* Ab. \n* Aut. \n* Quaerat.
                      \n"
                    created_at: '2022-11-15T22:27:50.892Z'
                    updated_at: '2022-11-15T22:27:50.892Z'
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/task_response"
    post:
      summary: Create Task
      tags:
      - Tasks
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 21
                    name: New Task
                    pos: 65536.0
                    priority:
                    spent_time: 0
                    points:
                    list_id: 38
                    deleted_at:
                    url: http://www.example.com/api/tasks/21
                    list_url: http://www.example.com/api/lists/38
                    description:
                    created_at: '2022-11-15T22:27:50.949Z'
                    updated_at: '2022-11-15T22:27:50.949Z'
              schema:
                "$ref": "#/components/schemas/task_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/task_request"
  "/api/tasks/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Task id
      required: true
      schema:
        type: string
    get:
      summary: Show Taks
      parameters:
      - name: include_associations
        in: query
        required: false
        description: If true, extended object with all associations is returned.
        schema:
          type: string
      tags:
      - Tasks
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful with `include_associations=true`:
                  summary: successful with `include_associations=true`
                  value:
                    id: 22
                    name: Breakfast in America
                    pos: 65536.0
                    priority: low
                    spent_time: 0
                    points: 1
                    list_id: 39
                    deleted_at:
                    url: http://www.example.com/api/tasks/22
                    list_url: http://www.example.com/api/lists/39
                    description: "## Laudantium\nMolestiae et aperiam. Vel et quod.
                      Laudantium ea et. Sit odit consequatur.\n* Est. \n* Optio. \n*
                      Facilis. \n* Harum. \n* Molestias. \n* At. \n* Nisi. \n* Maiores.
                      \n"
                    created_at: '2022-11-15T22:27:50.967Z'
                    updated_at: '2022-11-15T22:27:50.967Z'
                    list:
                      id: 39
                      name: azure
                      pos: 65536.0
                      visible: false
                      deleted_at:
                      board_id: 76
                      created_at: '2022-11-15T22:27:50.961Z'
                      updated_at: '2022-11-15T22:27:50.961Z'
                      url: http://www.example.com/api/lists/39
                      board_url: http://www.example.com/api/boards/76
                    author:
                      id: 144
                      name: Georgetta Beatty
                      avatar_url: https://www.gravatar.com/avatar/aebeecfac0c25033e533e6b1c304656a
                      role: developer
                      url: http://www.example.com/api/users/144
                      email: georgetta_beatty.1668551270@example.com
                      created_at: '2022-11-15T22:27:50.965Z'
                      updated_at: '2022-11-15T22:27:50.965Z'
                    users:
                    - id: 145
                      name: Hiram Langworth
                      avatar_url: https://www.gravatar.com/avatar/2ae38fccef4ccb48424879fb7f170079
                      role: regular
                      url: http://www.example.com/api/users/145
                      email: hiram_langworth.1668551270@example.com
                      created_at: '2022-11-15T22:27:50.970Z'
                      updated_at: '2022-11-15T22:27:50.970Z'
                    - id: 146
                      name: Dino Lebsack Sr.
                      avatar_url: https://www.gravatar.com/avatar/46c7052335508b009b4b301986ca1976
                      role: regular
                      url: http://www.example.com/api/users/146
                      email: dino_lebsack_sr.1668551270@example.com
                      created_at: '2022-11-15T22:27:50.975Z'
                      updated_at: '2022-11-15T22:27:50.975Z'
                    tags:
                    - id: 22
                      name: Legal
                      colour: "#06831e"
                      url: http://www.example.com/api/tags/22
                      board_id: 77
                      created_at: '2022-11-15T22:27:50.980Z'
                      updated_at: '2022-11-15T22:27:50.980Z'
                    - id: 23
                      name: Government
                      colour: "#1dbf40"
                      url: http://www.example.com/api/tags/23
                      board_id: 78
                      created_at: '2022-11-15T22:27:50.984Z'
                      updated_at: '2022-11-15T22:27:50.984Z'
                    - id: 24
                      name: Community-Services
                      colour: "#276352"
                      url: http://www.example.com/api/tags/24
                      board_id: 79
                      created_at: '2022-11-15T22:27:50.989Z'
                      updated_at: '2022-11-15T22:27:50.989Z'
                successful:
                  summary: successful
                  value:
                    id: 23
                    name: No Jacket Required
                    pos: 65536.0
                    priority: high
                    spent_time: 0
                    points: 5
                    list_id: 40
                    deleted_at:
                    url: http://www.example.com/api/tasks/23
                    list_url: http://www.example.com/api/lists/40
                    description: |-
                      #### Ipsum
                      Labore deleniti facere. Et et ipsa. Distinctio sunt commodi. Voluptatum minima maxime.
                      Voluptatum saepe dolores. Nam ex consequatur. Atque *sed* provident.
                    created_at: '2022-11-15T22:27:51.022Z'
                    updated_at: '2022-11-15T22:27:51.022Z'
              schema:
                "$ref": "#/components/schemas/task_response"
    put:
      summary: Update Task
      tags:
      - Tasks
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 24
                    name: New Name
                    pos: 65536.0
                    priority: very_low
                    spent_time: 0
                    points: 1
                    list_id: 41
                    deleted_at:
                    url: http://www.example.com/api/tasks/24
                    list_url: http://www.example.com/api/lists/41
                    description: |-
                      #### Consequatur
                      Officiis a aut. Ut quas quia. Est libero doloribus. Nulla quis expedita.
                      `Sed.`
                    created_at: '2022-11-15T22:27:51.048Z'
                    updated_at: '2022-11-15T22:27:51.063Z'
              schema:
                "$ref": "#/components/schemas/task_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/task_request"
    delete:
      summary: Delete Task
      tags:
      - Tasks
      responses:
        '204':
          description: successful
  "/api/tasks/{id}/add_time":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Task id
      required: true
      schema:
        type: string
    put:
      summary: Add time
      tags:
      - Tasks
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 26
                    name: Rumours
                    pos: 65536.0
                    priority: very_low
                    spent_time: 1200
                    points: 2
                    list_id: 43
                    deleted_at:
                    url: http://www.example.com/api/tasks/26
                    list_url: http://www.example.com/api/lists/43
                    description: |-
                      ### Sit
                      Veritatis harum debitis. Quasi est qui. Dolor ipsum assumenda.
                      *Quam* ea saepe. Fugit reiciendis expedita. Totam tenetur expedita.
                    created_at: '2022-11-15T22:27:51.108Z'
                    updated_at: '2022-11-15T22:27:51.123Z'
        '422':
          description: non integer time
          content:
            application/json:
              examples:
                incorrect unit:
                  summary: incorrect unit
                  value:
                    unit:
                    - is not included in the list
                negative time:
                  summary: negative time
                  value:
                    time:
                    - must be greater than 0
                non integer time:
                  summary: non integer time
                  value:
                    time:
                    - must be greater than 0
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                time:
                  type: integer
                unit:
                  type: string
                  enum: "#<Set: {:day, :hour, :minute, :second}>"
  "/api/tasks/{id}/attach_tag":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Task id
      required: true
      schema:
        type: string
    post:
      summary: Attach Tag
      tags:
      - Tasks
      parameters: []
      responses:
        '204':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                tag_id:
                  type: integer
  "/api/tasks/{id}/detach_tag":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Task id
      required: true
      schema:
        type: string
    post:
      summary: Detach Tag
      tags:
      - Tasks
      parameters: []
      responses:
        '204':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                tag_id:
                  type: integer
  "/api/tasks/{id}/assign_user":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Task id
      required: true
      schema:
        type: string
    post:
      summary: Assign User
      tags:
      - Tasks
      parameters: []
      responses:
        '204':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
  "/api/tasks/{id}/unassign_user":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Task id
      required: true
      schema:
        type: string
    post:
      summary: Unassign User
      tags:
      - Tasks
      parameters: []
      responses:
        '204':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
  "/api/workspaces/{id}/users":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: List users of workspace
      tags:
      - Users
      parameters:
      - name: id
        in: path
        description: Workspace id
        required: true
        schema:
          type: string
      - name: page
        in: query
        required: false
        description: Decides which result page should be returned.
        example: 2
        schema:
          type: integer
      - name: role
        in: query
        required: false
        schema:
          "$ref": "#/components/schemas/user_request/properties/role"
        example: admin
      - name: created_at_from
        in: query
        required: false
        description: Date with format YYYY.MM.DD
        example: 2010.01.25
        schema:
          type: string
      - name: created_at_to
        in: query
        required: false
        description: Date with format YYYY.MM.DD
        example: 2010.01.25
        schema:
          type: string
      - name: search
        in: query
        required: false
        description: Searches for users by name and e-mail.
        example: michael
        schema:
          type: string
      - name: per
        in: query
        required: false
        description: Decides how many entities should be returned per one page. **Works
          only, when `page` param is given.**
        example: 2
        schema:
          type: integer
      - name: limit
        in: query
        required: false
        description: Decides how many entities should be returned.
        example: 3
        schema:
          type: integer
      responses:
        '200':
          description: successful with pages
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    users:
                    - id: 172
                      name: Miles Cormier
                      avatar_url: https://www.gravatar.com/avatar/4f0eb04813ee7f6cb581dfef0f4486fc
                      role: regular
                      url: http://www.example.com/api/users/172
                      email: miles_cormier.1668551271@example.com
                      created_at: '2022-11-15T22:27:51.322Z'
                      updated_at: '2022-11-15T22:27:51.322Z'
                    - id: 173
                      name: Maureen Champlin
                      avatar_url: https://www.gravatar.com/avatar/4c8277db497f16c2ec33d99c371c8e3b
                      role: regular
                      url: http://www.example.com/api/users/173
                      email: maureen_champlin.1668551271@example.com
                      created_at: '2022-11-15T22:27:51.333Z'
                      updated_at: '2022-11-15T22:27:51.333Z'
                    - id: 174
                      name: Rev. Candance Ullrich
                      avatar_url: https://www.gravatar.com/avatar/4bbce766021fcc14f865d48a81bd259f
                      role: manager
                      url: http://www.example.com/api/users/174
                      email: rev_candance_ullrich.1668551271@example.com
                      created_at: '2022-11-15T22:27:51.338Z'
                      updated_at: '2022-11-15T22:27:51.338Z'
                successful with pages:
                  summary: successful with pages
                  value:
                    users:
                    - id: 176
                      name: Martin Kuhic
                      avatar_url: https://www.gravatar.com/avatar/4442e2946b89b848ed37489b256afe62
                      role: developer
                      url: http://www.example.com/api/users/176
                      email: martin_kuhic.1668551271@example.com
                      created_at: '2022-11-15T22:27:51.370Z'
                      updated_at: '2022-11-15T22:27:51.370Z'
                    - id: 177
                      name: Harold Lakin
                      avatar_url: https://www.gravatar.com/avatar/a04f02075087a669b46ec1d9438c8005
                      role: guest
                      url: http://www.example.com/api/users/177
                      email: harold_lakin.1668551271@example.com
                      created_at: '2022-11-15T22:27:51.375Z'
                      updated_at: '2022-11-15T22:27:51.375Z'
                    - id: 178
                      name: Selma Okuneva
                      avatar_url: https://www.gravatar.com/avatar/31779d3cfb6d4431eb22dfb43bb73331
                      role: guest
                      url: http://www.example.com/api/users/178
                      email: selma_okuneva.1668551271@example.com
                      created_at: '2022-11-15T22:27:51.380Z'
                      updated_at: '2022-11-15T22:27:51.380Z'
                    total_pages: 1
              schema:
                "$ref": "#/components/schemas/user_pages_response"
  "/api/users":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: List users
      tags:
      - Users
      parameters:
      - name: role_collection
        in: query
        schema:
          type: array
          items:
            "$ref": "#/components/schemas/user_request/properties/role"
        example:
        - admin
      - name: role
        in: query
        required: false
        schema:
          "$ref": "#/components/schemas/user_request/properties/role"
        example: admin
      - name: created_at_from
        in: query
        required: false
        description: Date with format YYYY.MM.DD
        example: 2010.01.25
        schema:
          type: string
      - name: created_at_to
        in: query
        required: false
        description: Date with format YYYY.MM.DD
        example: 2010.01.25
        schema:
          type: string
      - name: workspace_id
        in: query
        required: false
        example: 1
        schema:
          type: integer
      - name: search
        in: query
        required: false
        description: Searches for users by name and e-mail.
        example: michael
        schema:
          type: string
      - name: page
        in: query
        required: false
        description: Decides which result page should be returned.
        example: 2
        schema:
          type: integer
      - name: per
        in: query
        required: false
        description: Decides how many entities should be returned per one page. **Works
          only, when `page` param is given.**
        example: 2
        schema:
          type: integer
      - name: limit
        in: query
        required: false
        description: Decides how many entities should be returned.
        example: 3
        schema:
          type: integer
      responses:
        '200':
          description: successful with pages
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    users:
                    - id: 180
                      name: Bradly Jenkins
                      avatar_url: https://www.gravatar.com/avatar/9d4c2d21eec2cf8d79a0a60a143739de
                      role: developer
                      url: http://www.example.com/api/users/180
                      email: bradly_jenkins.1668551271@example.com
                      created_at: '2022-11-15T22:27:51.405Z'
                      updated_at: '2022-11-15T22:27:51.405Z'
                    - id: 181
                      name: Ernesto Hyatt
                      avatar_url: https://www.gravatar.com/avatar/91b35494f08161cff6241f4ae45b353b
                      role: manager
                      url: http://www.example.com/api/users/181
                      email: ernesto_hyatt.1668551271@example.com
                      created_at: '2022-11-15T22:27:51.409Z'
                      updated_at: '2022-11-15T22:27:51.409Z'
                    - id: 182
                      name: Demarcus Larkin
                      avatar_url: https://www.gravatar.com/avatar/ff9d8515c8c6615079a7f1e3d1969974
                      role: regular
                      url: http://www.example.com/api/users/182
                      email: demarcus_larkin.1668551271@example.com
                      created_at: '2022-11-15T22:27:51.412Z'
                      updated_at: '2022-11-15T22:27:51.412Z'
                    - id: 183
                      name: Pandora Bergstrom Esq.
                      avatar_url: https://www.gravatar.com/avatar/bbd296edeadd24f82ffd4b6d03d2d722
                      role: developer
                      url: http://www.example.com/api/users/183
                      email: pandora_bergstrom_esq.1668551271@example.com
                      created_at: '2022-11-15T22:27:51.415Z'
                      updated_at: '2022-11-15T22:27:51.415Z'
                    - id: 184
                      name: Wendi West
                      avatar_url: https://www.gravatar.com/avatar/bf1124f32339cbe4d5be01e497cd82e6
                      role: regular
                      url: http://www.example.com/api/users/184
                      email: wendi_west.1668551271@example.com
                      created_at: '2022-11-15T22:27:51.418Z'
                      updated_at: '2022-11-15T22:27:51.418Z'
                    - id: 185
                      name: Richard Walsh
                      avatar_url: https://www.gravatar.com/avatar/bba024f77814a69e0b0eeba3337305e5
                      role: admin
                      url: http://www.example.com/api/users/185
                      email: richard_walsh.1668551271@example.com
                      created_at: '2022-11-15T22:27:51.421Z'
                      updated_at: '2022-11-15T22:27:51.421Z'
                successful with pages:
                  summary: successful with pages
                  value:
                    users:
                    - id: 186
                      name: Prof. Silas Roberts
                      avatar_url: https://www.gravatar.com/avatar/72e4dc7e096ef260f936366b05efa942
                      role: regular
                      url: http://www.example.com/api/users/186
                      email: prof_silas_roberts.1668551271@example.com
                      created_at: '2022-11-15T22:27:51.439Z'
                      updated_at: '2022-11-15T22:27:51.439Z'
                    - id: 187
                      name: Thea Leuschke
                      avatar_url: https://www.gravatar.com/avatar/a5e7b45bd3419eea6304bf07d95461ef
                      role: regular
                      url: http://www.example.com/api/users/187
                      email: thea_leuschke.1668551271@example.com
                      created_at: '2022-11-15T22:27:51.443Z'
                      updated_at: '2022-11-15T22:27:51.443Z'
                    - id: 188
                      name: Amb. Jared Halvorson
                      avatar_url: https://www.gravatar.com/avatar/b3e812b41a100b25a3d67324f7e5a8df
                      role: developer
                      url: http://www.example.com/api/users/188
                      email: amb_jared_halvorson.1668551271@example.com
                      created_at: '2022-11-15T22:27:51.446Z'
                      updated_at: '2022-11-15T22:27:51.446Z'
                    - id: 189
                      name: Harris Hahn
                      avatar_url: https://www.gravatar.com/avatar/cac23ca29053646c1f5df63057a32ef1
                      role: regular
                      url: http://www.example.com/api/users/189
                      email: harris_hahn.1668551271@example.com
                      created_at: '2022-11-15T22:27:51.449Z'
                      updated_at: '2022-11-15T22:27:51.449Z'
                    - id: 190
                      name: Amb. Leah Reilly
                      avatar_url: https://www.gravatar.com/avatar/724e791784b3ac775fc7ccb7e1e702fa
                      role: manager
                      url: http://www.example.com/api/users/190
                      email: amb_leah_reilly.1668551271@example.com
                      created_at: '2022-11-15T22:27:51.452Z'
                      updated_at: '2022-11-15T22:27:51.452Z'
                    - id: 191
                      name: Bradly Cole
                      avatar_url: https://www.gravatar.com/avatar/499cb282cce618e11c1308beb928633d
                      role: admin
                      url: http://www.example.com/api/users/191
                      email: bradly_cole.1668551271@example.com
                      created_at: '2022-11-15T22:27:51.455Z'
                      updated_at: '2022-11-15T22:27:51.455Z'
                    total_pages: 1
              schema:
                "$ref": "#/components/schemas/user_pages_response"
    post:
      summary: Create a user
      tags:
      - Users
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 193
                    name: New User
                    created_at: '2022-11-15T22:27:51.489Z'
                    updated_at: '2022-11-15T22:27:51.489Z'
                    email: new_user@example.com
                    role: developer
                    deleted_at:
                    recent_boards: []
              schema:
                "$ref": "#/components/schemas/user_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/user_request"
    put:
      summary: Update current user
      tags:
      - Users
      parameters: []
      responses:
        '204':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/user_update_request"
    delete:
      summary: Delete current user
      tags:
      - Users
      responses:
        '204':
          description: successful
  "/api/users/current":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: Show the currently signed in user
      tags:
      - Users
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 196
                    name: Debra Goyette VM
                    avatar_url: https://www.gravatar.com/avatar/6bc48a18f862316e7ebdbf805ea658aa
                    role: admin
                    url: http://www.example.com/api/users/196
                    email: debra_goyette_vm.1668551271@example.com
                    created_at: '2022-11-15T22:27:51.534Z'
                    updated_at: '2022-11-15T22:27:51.534Z'
              schema:
                "$ref": "#/components/schemas/user_response"
  "/api/users/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show a user
      tags:
      - Users
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 197
                    name: Edgar Bruen
                    avatar_url: https://www.gravatar.com/avatar/08d808ab4c0096a9ad479035318b2cef
                    role: manager
                    url: http://www.example.com/api/users/197
                    email: edgar_bruen.1668551271@example.com
                    created_at: '2022-11-15T22:27:51.549Z'
                    updated_at: '2022-11-15T22:27:51.549Z'
              schema:
                "$ref": "#/components/schemas/user_response"
  "/api/users/sign_in":
    post:
      summary: Sign in
      tags:
      - Users
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 199
                    name: Amie Jenkins
                    created_at: '2022-11-15T22:27:51.568Z'
                    updated_at: '2022-11-15T22:27:51.568Z'
                    email: email@example.com
                    role: manager
                    deleted_at:
                    recent_boards: []
              schema:
                "$ref": "#/components/schemas/user_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/user_sign_in_request"
  "/api/users/sign_out":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    delete:
      summary: Sign out
      tags:
      - Users
      responses:
        '204':
          description: successful
  "/api/workspaces":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: list workspaces
      tags:
      - Workspaces
      security:
      - Bearer: {}
      parameters:
      - name: limit
        in: query
        description: Decides how many entities should be returned
        example: 3
        required: false
        schema:
          type: integer
      - name: boards
        in: query
        type: string
        schema:
          "$ref": "#/components/schemas/include_associated_enum"
        required: false
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful with `boards=all`:
                  summary: successful with `boards=all`
                  value:
                  - id: 95
                    name: Sonsing
                    created_at: '2022-11-15T22:27:51.612Z'
                    updated_at: '2022-11-15T22:27:51.612Z'
                    deleted_at:
                    url: http://www.example.com/api/workspaces/95
                    boards:
                    - id: 93
                      name: Manganese
                      colour: "#3e2eaf"
                      workspace_id: 95
                      created_at: '2022-11-15T22:27:51.615Z'
                      updated_at: '2022-11-15T22:27:51.615Z'
                      deleted_at:
                      url: http://www.example.com/api/boards/93
                      workspace_url: http://www.example.com/api/workspaces/95
                    - id: 94
                      name: Gold
                      colour: "#b5a09e"
                      workspace_id: 95
                      created_at: '2022-11-15T22:27:51.616Z'
                      updated_at: '2022-11-15T22:27:51.616Z'
                      deleted_at:
                      url: http://www.example.com/api/boards/94
                      workspace_url: http://www.example.com/api/workspaces/95
                    - id: 95
                      name: Niobium
                      colour: "#f4fa70"
                      workspace_id: 95
                      created_at: '2022-11-15T22:27:51.617Z'
                      updated_at: '2022-11-15T22:27:51.617Z'
                      deleted_at:
                      url: http://www.example.com/api/boards/95
                      workspace_url: http://www.example.com/api/workspaces/95
                    - id: 96
                      name: Astatine
                      colour: "#3b42ec"
                      workspace_id: 95
                      created_at: '2022-11-15T22:27:51.619Z'
                      updated_at: '2022-11-15T22:27:51.619Z'
                      deleted_at:
                      url: http://www.example.com/api/boards/96
                      workspace_url: http://www.example.com/api/workspaces/95
                    - id: 97
                      name: Mendelevium
                      colour: "#95802b"
                      workspace_id: 95
                      created_at: '2022-11-15T22:27:51.620Z'
                      updated_at: '2022-11-15T22:27:51.620Z'
                      deleted_at:
                      url: http://www.example.com/api/boards/97
                      workspace_url: http://www.example.com/api/workspaces/95
                  - id: 96
                    name: Sonair
                    created_at: '2022-11-15T22:27:51.621Z'
                    updated_at: '2022-11-15T22:27:51.621Z'
                    deleted_at:
                    url: http://www.example.com/api/workspaces/96
                    boards: []
                successful:
                  summary: successful
                  value:
                  - id: 97
                    name: Stronghold
                    created_at: '2022-11-15T22:27:51.652Z'
                    updated_at: '2022-11-15T22:27:51.652Z'
                    deleted_at:
                    url: http://www.example.com/api/workspaces/97
                  - id: 98
                    name: Hatity
                    created_at: '2022-11-15T22:27:51.655Z'
                    updated_at: '2022-11-15T22:27:51.655Z'
                    deleted_at:
                    url: http://www.example.com/api/workspaces/98
                  - id: 99
                    name: Flowdesk
                    created_at: '2022-11-15T22:27:51.658Z'
                    updated_at: '2022-11-15T22:27:51.658Z'
                    deleted_at:
                    url: http://www.example.com/api/workspaces/99
                  - id: 100
                    name: Namfix
                    created_at: '2022-11-15T22:27:51.660Z'
                    updated_at: '2022-11-15T22:27:51.660Z'
                    deleted_at:
                    url: http://www.example.com/api/workspaces/100
                  - id: 101
                    name: Hatity
                    created_at: '2022-11-15T22:27:51.663Z'
                    updated_at: '2022-11-15T22:27:51.663Z'
                    deleted_at:
                    url: http://www.example.com/api/workspaces/101
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/workspace_response"
    post:
      summary: create workspace
      tags:
      - Workspaces
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 102
                    name: New Workspace
                    created_at: '2022-11-15T22:27:51.699Z'
                    updated_at: '2022-11-15T22:27:51.699Z'
                    deleted_at:
                    url: http://www.example.com/api/workspaces/102
              schema:
                "$ref": "#/components/schemas/workspace_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/workspace_request"
  "/api/workspaces/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show workspace
      parameters:
      - name: boards
        in: query
        type: string
        schema:
          "$ref": "#/components/schemas/include_associated_enum"
        required: false
      tags:
      - Workspaces
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful with `boards=all`:
                  summary: successful with `boards=all`
                  value:
                    id: 103
                    name: Rank
                    created_at: '2022-11-15T22:27:51.712Z'
                    updated_at: '2022-11-15T22:27:51.712Z'
                    deleted_at:
                    url: http://www.example.com/api/workspaces/103
                    boards:
                    - id: 98
                      name: Hydrogen
                      colour: "#141027"
                      workspace_id: 103
                      created_at: '2022-11-15T22:27:51.714Z'
                      updated_at: '2022-11-15T22:27:51.715Z'
                      deleted_at:
                      url: http://www.example.com/api/boards/98
                      workspace_url: http://www.example.com/api/workspaces/103
                    - id: 99
                      name: Indium
                      colour: "#83924c"
                      workspace_id: 103
                      created_at: '2022-11-15T22:27:51.718Z'
                      updated_at: '2022-11-15T22:27:51.719Z'
                      deleted_at:
                      url: http://www.example.com/api/boards/99
                      workspace_url: http://www.example.com/api/workspaces/103
                successful:
                  summary: successful
                  value:
                    id: 106
                    name: Daltfresh
                    created_at: '2022-11-15T22:27:51.742Z'
                    updated_at: '2022-11-15T22:27:51.742Z'
                    deleted_at:
                    url: http://www.example.com/api/workspaces/106
              schema:
                "$ref": "#/components/schemas/workspace_response"
    put:
      summary: update workspace
      tags:
      - Workspaces
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 107
                    name: New Name
                    created_at: '2022-11-15T22:27:51.763Z'
                    updated_at: '2022-11-15T22:27:51.777Z'
                    deleted_at:
                    url: http://www.example.com/api/workspaces/107
              schema:
                "$ref": "#/components/schemas/workspace_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/workspace_request"
    delete:
      summary: delete workspace
      tags:
      - Workspaces
      responses:
        '204':
          description: successful
  "/api/workspaces/{id}/assign_user":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Workspace id
      required: true
      schema:
        type: string
    post:
      summary: Assign User
      tags:
      - Workspaces
      parameters: []
      responses:
        '204':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
  "/api/workspaces/{id}/unassign_user":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Workspace id
      required: true
      schema:
        type: string
    post:
      summary: Unassign User
      tags:
      - Workspaces
      parameters: []
      responses:
        '204':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
components:
  schemas:
    authorization:
      name: Authorization
      in: header
      type: string
      description: JWT token
      example: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiZGV2ZWxvcGVyIiwic3ViIjoiMSIsInNjcCI6InVzZXIiLCJhdWQiOm51bGwsImlhdCI6MTY2NjE4MDIzMiwiZXhwIjoxNjY3NDc2MjMyLCJqdGkiOiJhMzdlZTA5MC0zZGJmLTRhMzgtOTFiNy1mZTJlM2FiYjlkY2QifQ.tGGjFHfMszfGCfNZS6I-hQNLSu_2Xfs3W4hI8IT4CW0
      required: true
    include_associated_enum:
      type: string
      enum:
      - visible
      - invisible
      - non-archived
      - archived
      - all
    lambdee_models_enum:
      type: string
      enum:
      - DB::User
      - DB::Workspace
      - DB::Board
      - DB::List
      - DB::Task
      - DB::Comment
      - DB::Tag
      - DB::Sprint
      - DB::UserWorkspace
      - DB::TaskUser
      - DB::TaskTag
      - DB::SprintTask
    user_pages_response:
      type: object
      properties:
        users:
          type: array
          items:
            "$ref": "#components/schemas/user_response"
        total_pages:
          type: integer
      required:
      - users
    user_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        avatar_url:
          type: string
        url:
          type: string
        role:
          type: string
      required:
      - id
      - name
    user_request:
      type: object
      properties:
        user:
          type: object
          properties:
            name:
              type: string
            email:
              type: string
            password:
              type: string
            role:
              type: string
              enum:
              - guest
              - regular
              - developer
              - admin
              - manager
      required:
      - name
      - email
    user_update_request:
      type: object
      properties:
        user:
          type: object
          properties:
            name:
              type: string
            email:
              type: string
            password:
              type: string
            current_password:
              type: string
            role:
              type: string
              enum:
              - guest
              - regular
              - developer
              - admin
              - manager
      required:
      - current_password
    user_sign_in_request:
      type: object
      properties:
        user:
          type: object
          properties:
            email:
              type: string
            password:
              type: string
      required:
      - email
      - password
    comment_response:
      type: object
      properties:
        id:
          type: integer
        body:
          type: string
        deleted_at:
          type:
          - string
          - 'null'
          format: date_time
        author_id:
          type: integer
        task_id:
          type: integer
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        url:
          type: string
        users:
          type: array
          items:
            "$ref": "#/components/schemas/user_response"
          nullable: true
      required:
      - id
      - body
      - deleted_at
      - url
    tag_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        colour:
          type: string
        board_id:
          type: integer
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        url:
          type: string
        board_url:
          type: string
      required:
      - id
    tag_request:
      type: object
      properties:
        name:
          type: string
        colour:
          type: string
        board_id:
          type: integer
        task_id:
          type: integer
      required: []
    sprint_pages_response:
      type: object
      properties:
        sprints:
          type: array
          items:
            "$ref": "#components/schemas/sprint_response"
        total_pages:
          type: integer
      required:
      - sprints
    sprint_response:
      type: object
      properties:
        id:
          type: integer
        board_id:
          type: integer
        name:
          type: string
        description:
          type:
          - string
          - 'null'
        started_at:
          type: string
          format: date_time
        expected_end_at:
          type: string
          format: date_time
        ended_at:
          type:
          - string
          - 'null'
          format: date_time
        final_list_name:
          type: string
        url:
          type: string
        tasks:
          type: array
          items:
            "$ref": "#/components/schemas/task_with_sprint_task_response"
          nullable: true
      required:
      - id
      - name
    task_with_sprint_task_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        priority:
          type: string
        spent_time:
          type: integer
        points:
          type: integer
        added_at:
          type: string
          format: date_time
        completed_at:
          type:
          - string
          - 'null'
          format: date_time
        start_state:
          type: string
        state:
          type: string
      required:
      - id
    sprint_request:
      type: object
      properties:
        board_id:
          type: integer
        name:
          type: string
        description:
          type: string
        started_at:
          type: string
          format: date_time
          example: '2025-12-11T23:00:00'
        expected_end_at:
          type: string
          format: date_time
          example: '2025-12-18T23:00:00'
      required:
      - name
      - expected_end_at
    task_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type:
          - string
          - 'null'
        pos:
          type:
          - number
          - 'null'
          format: float
        priority:
          type:
          - string
          - 'null'
        points:
          type:
          - number
          - 'null'
          format: float
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        deleted_at:
          type:
          - string
          - 'null'
          format: date_time
        list_id:
          type: integer
        list_url:
          type: string
        url:
          type: string
        users:
          type: array
          items:
            "$ref": "#/components/schemas/user_response"
          nullable: true
        tags:
          type: array
          items:
            "$ref": "#/components/schemas/tag_response"
          nullable: true
        author:
          type: object
          schema:
            "$ref": "#/components/schemas/user_response"
          nullable: true
      required:
      - id
      - name
      - pos
      - priority
      - points
      - list_id
      - deleted_at
    task_request:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        pos:
          type: number
          format: float
          description: If not given, value will be set as for the last item in the
            list.
        priority:
          type: string
          enum:
          - very_low
          - low
          - medium
          - high
          - very_high
        points:
          type: number
          format: float
        list_id:
          type: integer
        author_id:
          type: integer
      required:
      - name
      - list_id
      - author_id
    list_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        pos:
          type: number
          format: float
        visible:
          type:
          - boolean
          - 'null'
        deleted_at:
          type:
          - string
          - 'null'
          format: date_time
        board_id:
          type: integer
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        url:
          type: string
        board_url:
          type: string
        tasks:
          type: array
          items:
            "$ref": "#/components/schemas/task_response"
          nullable: true
      required:
      - id
      - name
      - pos
      - visible
      - board_id
      - created_at
      - updated_at
      - deleted_at
    list_request:
      type: object
      properties:
        name:
          type: string
        pos:
          type: number
          format: float
        visible:
          type: boolean
        board_id:
          type: integer
      required:
      - name
      - board_id
    board_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        workspace_id:
          type: integer
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        deleted_at:
          type:
          - string
          - 'null'
          format: date_time
        url:
          type: string
        workspace_url:
          type: string
        lists:
          type: array
          items:
            "$ref": "#/components/schemas/list_response"
          nullable: true
      required:
      - id
      - name
      - workspace_id
      - created_at
      - updated_at
      - deleted_at
    board_request:
      type: object
      properties:
        name:
          type: string
        workspace_id:
          type: integer
      required:
      - name
      - workspace_id
    workspace_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        deleted_at:
          type:
          - string
          - 'null'
          format: date_time
        url:
          type: string
        boards:
          type: array
          items:
            "$ref": "#/components/schemas/board_response"
          nullable: true
      required:
      - id
      - name
      - created_at
      - updated_at
      - deleted_at
    workspace_request:
      type: object
      properties:
        name:
          type: string
      required:
      - name
    script_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        content:
          type: string
        url:
          type: string
        script_triggers:
          type: array
          items:
            "$ref": "#/components/schemas/nested_script_trigger_response"
      required: []
    script_request:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        content:
          type: string
        script_triggers_attributes:
          type: array
          items:
            "$ref": "#/components/schemas/nested_script_trigger_request"
      required:
      - name
    nested_script_trigger_response:
      type: object
      properties:
        id:
          type: integer
        script_id:
          type:
          - integer
          - 'null'
        subject_type:
          type:
          - string
          - 'null'
        subject_id:
          type:
          - integer
          - 'null'
        action:
          type: string
        url:
          type: string
      required: []
    nested_script_trigger_request:
      type: object
      properties:
        id:
          type: integer
          description: Needed only for updates and destroys.
        script_id:
          type: integer
        subject_type:
          "$ref": "#/components/schemas/lambdee_models_enum"
        subject_id:
          type: integer
        action:
          type: string
          enum:
          - create
          - update
          - destroy
        _destroy:
          type: boolean
          description: If `true` callback for given `id` will be destroyed. Works
            only nested in sprint.
      required:
      - action
    script_trigger_response:
      type: object
      properties:
        id:
          type: integer
        script_id:
          type: integer
        subject_type:
          type:
          - string
          - 'null'
        subject_id:
          type:
          - integer
          - 'null'
        action:
          type: string
        url:
          type: string
      required: []
    script_trigger_request:
      type: object
      properties:
        script_id:
          type: integer
        subject_type:
          "$ref": "#/components/schemas/lambdee_models_enum"
        subject_id:
          type: integer
        action:
          type: string
      required:
      - script_id
      - action
    script_run_response:
      type: object
      properties:
        id:
          type: integer
        script_id:
          type: integer
        initiator_id:
          type: integer
        input:
          type:
          - string
          - 'null'
        output:
          type: string
        state:
          type: string
        url:
          type: string
      required: []
    script_run_request:
      type: object
      properties:
        output:
          type: string
        state:
          type: string
          enum:
          - running
          - executed
          - failed
          - timed_out
      required: []
servers:
- url: "{defaultProtocol}://{defaultHost}"
  variables:
    defaultProtocol:
      default: http
    defaultHost:
      default: localhost:3000
