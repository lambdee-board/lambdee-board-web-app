---
openapi: 3.0.1
info:
  title: Lambdee API V1
  version: v1
paths:
  "/api/boards":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: list boards
      tags:
      - Boards
      parameters:
      - name: limit
        in: query
        required: false
        description: Decides how many entities should be returned
        example: 3
        schema:
          type: integer
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - id: 1
                    name: Nitrogen
                    colour: "#ed2607"
                    workspace_id: 1
                    created_at: '2022-12-10T14:20:34.442Z'
                    updated_at: '2022-12-10T14:20:34.442Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/boards/1
                    workspace_url: http://www.example.com/api/workspaces/1
                  - id: 2
                    name: Germanium
                    colour: "#fb2d2b"
                    workspace_id: 2
                    created_at: '2022-12-10T14:20:34.444Z'
                    updated_at: '2022-12-10T14:20:34.444Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/boards/2
                    workspace_url: http://www.example.com/api/workspaces/2
                  - id: 3
                    name: Cesium
                    colour: "#d94a3f"
                    workspace_id: 3
                    created_at: '2022-12-10T14:20:34.447Z'
                    updated_at: '2022-12-10T14:20:34.447Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/boards/3
                    workspace_url: http://www.example.com/api/workspaces/3
                  - id: 4
                    name: Calcium
                    colour: "#5b3405"
                    workspace_id: 4
                    created_at: '2022-12-10T14:20:34.449Z'
                    updated_at: '2022-12-10T14:20:34.449Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/boards/4
                    workspace_url: http://www.example.com/api/workspaces/4
                  - id: 5
                    name: Zinc
                    colour: "#8896c7"
                    workspace_id: 5
                    created_at: '2022-12-10T14:20:34.451Z'
                    updated_at: '2022-12-10T14:20:34.451Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/boards/5
                    workspace_url: http://www.example.com/api/workspaces/5
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/board_response"
    post:
      summary: create board
      tags:
      - Boards
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 6
                    name: New Board
                    colour:
                    workspace_id: 6
                    created_at: '2022-12-10T14:20:34.521Z'
                    updated_at: '2022-12-10T14:20:34.521Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/boards/6
                    workspace_url: http://www.example.com/api/workspaces/6
              schema:
                "$ref": "#/components/schemas/board_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/board_request"
  "/api/boards/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show board
      tags:
      - Boards
      parameters:
      - name: tasks
        in: query
        type: string
        schema:
          "$ref": "#/components/schemas/include_associated_enum"
        required: false
      - name: lists
        in: query
        type: string
        schema:
          "$ref": "#/components/schemas/include_associated_enum"
        required: false
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful with `lists=all`:
                  summary: successful with `lists=all`
                  value:
                    id: 7
                    name: Rubidium
                    colour: "#a288ad"
                    workspace_id: 7
                    created_at: '2022-12-10T14:20:34.532Z'
                    updated_at: '2022-12-10T14:20:34.532Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/boards/7
                    workspace_url: http://www.example.com/api/workspaces/7
                    lists:
                    - id: 1
                      name: fuchsia
                      pos: 65536.0
                      visible: false
                      deleted_at: '2022-12-10T14:20:34.552Z'
                      board_id: 7
                      created_at: '2022-12-10T14:20:34.544Z'
                      updated_at: '2022-12-10T14:20:34.547Z'
                      custom_data: {}
                      url: http://www.example.com/api/lists/1
                      board_url: http://www.example.com/api/boards/7
                    - id: 2
                      name: black
                      pos: 65536.0
                      visible: false
                      deleted_at:
                      board_id: 7
                      created_at: '2022-12-10T14:20:34.557Z'
                      updated_at: '2022-12-10T14:20:34.558Z'
                      custom_data: {}
                      url: http://www.example.com/api/lists/2
                      board_url: http://www.example.com/api/boards/7
                successful with `lists=visible`:
                  summary: successful with `lists=visible`
                  value:
                    id: 10
                    name: Hassium
                    colour: "#ca8985"
                    workspace_id: 10
                    created_at: '2022-12-10T14:20:34.585Z'
                    updated_at: '2022-12-10T14:20:34.585Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/boards/10
                    workspace_url: http://www.example.com/api/workspaces/10
                    lists: []
                successful with `lists=archived`:
                  summary: successful with `lists=archived`
                  value:
                    id: 12
                    name: Lead
                    colour: "#4d82ad"
                    workspace_id: 12
                    created_at: '2022-12-10T14:20:34.615Z'
                    updated_at: '2022-12-10T14:20:34.615Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/boards/12
                    workspace_url: http://www.example.com/api/workspaces/12
                    lists:
                    - id: 4
                      name: jade
                      pos: 65536.0
                      visible: false
                      deleted_at: '2022-12-10T14:20:34.622Z'
                      board_id: 12
                      created_at: '2022-12-10T14:20:34.619Z'
                      updated_at: '2022-12-10T14:20:34.621Z'
                      custom_data: {}
                      url: http://www.example.com/api/lists/4
                      board_url: http://www.example.com/api/boards/12
                    - id: 5
                      name: ivory
                      pos: 65536.0
                      visible: false
                      deleted_at: '2022-12-10T14:20:34.629Z'
                      board_id: 12
                      created_at: '2022-12-10T14:20:34.626Z'
                      updated_at: '2022-12-10T14:20:34.628Z'
                      custom_data: {}
                      url: http://www.example.com/api/lists/5
                      board_url: http://www.example.com/api/boards/12
                successful:
                  summary: successful
                  value:
                    id: 15
                    name: Barium
                    colour: "#8520da"
                    workspace_id: 15
                    created_at: '2022-12-10T14:20:34.655Z'
                    updated_at: '2022-12-10T14:20:34.655Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/boards/15
                    workspace_url: http://www.example.com/api/workspaces/15
              schema:
                "$ref": "#/components/schemas/board_response"
    put:
      summary: update board
      tags:
      - Boards
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 16
                    name: New Name
                    colour: "#816cf3"
                    workspace_id: 16
                    created_at: '2022-12-10T14:20:34.678Z'
                    updated_at: '2022-12-10T14:20:34.696Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/boards/16
                    workspace_url: http://www.example.com/api/workspaces/16
              schema:
                "$ref": "#/components/schemas/board_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/board_request"
    delete:
      summary: delete board
      tags:
      - Boards
      responses:
        '204':
          description: successful
  "/api/boards/{id}/user_tasks":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: list current user tasks including board, lists, tags, users and author
      tags:
      - Boards
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 18
                    name: Lead
                    colour: "#8da318"
                    workspace_id: 18
                    created_at: '2022-12-10T14:20:34.733Z'
                    updated_at: '2022-12-10T14:20:34.733Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/boards/18
                    workspace_url: http://www.example.com/api/workspaces/18
                    lists: []
              schema:
                "$ref": "#/components/schemas/board_response"
  "/api/boards/recently_viewed":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: list current user recently viewed boards (max 6)
      tags:
      - Boards
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value: []
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/board_response"
  "/api/tasks/{id}/comments":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Task id
      required: true
      schema:
        type: string
    get:
      summary: List task's comments
      tags:
      - Comments
      parameters:
      - name: with_author
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful with `with_author=true`:
                  summary: successful with `with_author=true`
                  value:
                  - id: 5
                    body: |-
                      # Et
                      Dolores ipsam dolorem. Culpa quas aut.
                      ```ruby
                      Quis.
                      ```
                    deleted_at:
                    author_id: 22
                    task_id: 2
                    created_at: '2022-12-10T14:20:34.874Z'
                    updated_at: '2022-12-10T14:20:34.874Z'
                    url: http://www.example.com/api/comments/5
                    author:
                      id: 22
                      name: Brian Pfannerstill PhD
                      avatar_url: https://www.gravatar.com/avatar/ddf9f1665af4c5776ee1e1748540cce6
                      role: developer
                      url: http://www.example.com/api/users/22
                      email: brian_pfannerstill_ph_d.1670682034@example.com
                      created_at: '2022-12-10T14:20:34.857Z'
                      updated_at: '2022-12-10T14:20:34.857Z'
                      custom_data: {}
                  - id: 4
                    body: "## Minus\nVoluptatibus magni laborum.\n0. Est. \n1. Sit.
                      \n2. Atque. \n3. Quisquam. \n"
                    deleted_at:
                    author_id: 22
                    task_id: 2
                    created_at: '2022-12-10T14:20:34.872Z'
                    updated_at: '2022-12-10T14:20:34.872Z'
                    url: http://www.example.com/api/comments/4
                    author:
                      id: 22
                      name: Brian Pfannerstill PhD
                      avatar_url: https://www.gravatar.com/avatar/ddf9f1665af4c5776ee1e1748540cce6
                      role: developer
                      url: http://www.example.com/api/users/22
                      email: brian_pfannerstill_ph_d.1670682034@example.com
                      created_at: '2022-12-10T14:20:34.857Z'
                      updated_at: '2022-12-10T14:20:34.857Z'
                      custom_data: {}
                  - id: 3
                    body: "#### Numquam\nEt magni architecto.\n# Omnis\nDeleniti ea
                      voluptatem. Cum repellat placeat. Suscipit dignissimos magnam.\n0.
                      Iure. \n1. Reprehenderit. \n2. Facere. \n3. Odio. \n4. Qui.
                      \n"
                    deleted_at:
                    author_id: 22
                    task_id: 2
                    created_at: '2022-12-10T14:20:34.871Z'
                    updated_at: '2022-12-10T14:20:34.871Z'
                    url: http://www.example.com/api/comments/3
                    author:
                      id: 22
                      name: Brian Pfannerstill PhD
                      avatar_url: https://www.gravatar.com/avatar/ddf9f1665af4c5776ee1e1748540cce6
                      role: developer
                      url: http://www.example.com/api/users/22
                      email: brian_pfannerstill_ph_d.1670682034@example.com
                      created_at: '2022-12-10T14:20:34.857Z'
                      updated_at: '2022-12-10T14:20:34.857Z'
                      custom_data: {}
                  - id: 2
                    body: |-
                      ##### Et
                      Corporis voluptas tempore.
                      ```ruby
                      Illum.
                      ```
                    deleted_at:
                    author_id: 22
                    task_id: 2
                    created_at: '2022-12-10T14:20:34.869Z'
                    updated_at: '2022-12-10T14:20:34.869Z'
                    url: http://www.example.com/api/comments/2
                    author:
                      id: 22
                      name: Brian Pfannerstill PhD
                      avatar_url: https://www.gravatar.com/avatar/ddf9f1665af4c5776ee1e1748540cce6
                      role: developer
                      url: http://www.example.com/api/users/22
                      email: brian_pfannerstill_ph_d.1670682034@example.com
                      created_at: '2022-12-10T14:20:34.857Z'
                      updated_at: '2022-12-10T14:20:34.857Z'
                      custom_data: {}
                  - id: 1
                    body: |-
                      ###### Sint
                      Molestiae qui suscipit. Nam quidem ut. Doloremque aut ea.
                      Non ducimus eos. Pariatur in sit. Fugit laudantium _consequuntur._
                    deleted_at:
                    author_id: 22
                    task_id: 2
                    created_at: '2022-12-10T14:20:34.867Z'
                    updated_at: '2022-12-10T14:20:34.867Z'
                    url: http://www.example.com/api/comments/1
                    author:
                      id: 22
                      name: Brian Pfannerstill PhD
                      avatar_url: https://www.gravatar.com/avatar/ddf9f1665af4c5776ee1e1748540cce6
                      role: developer
                      url: http://www.example.com/api/users/22
                      email: brian_pfannerstill_ph_d.1670682034@example.com
                      created_at: '2022-12-10T14:20:34.857Z'
                      updated_at: '2022-12-10T14:20:34.857Z'
                      custom_data: {}
                successful:
                  summary: successful
                  value:
                  - id: 10
                    body: |-
                      ###### Voluptatem
                      Officiis unde sed. Error tempora blanditiis. Culpa fugit aperiam.
                      ### Assumenda
                      Eligendi voluptatem sed. Voluptas quis expedita. Aut ut natus.
                      ## Dignissimos
                      Aut sapiente et. Sit ab animi. Non dolorem aut.
                      ##### Tempora
                    deleted_at:
                    author_id: 25
                    task_id: 3
                    created_at: '2022-12-10T14:20:34.922Z'
                    updated_at: '2022-12-10T14:20:34.922Z'
                    url: http://www.example.com/api/comments/10
                  - id: 9
                    body: "# Iste\nQuidem velit officiis.\n0. Sapiente. \n1. Vero.
                      \n2. Et. \n3. Consequatur. \n4. Doloremque. \n5. Odit. \n"
                    deleted_at:
                    author_id: 25
                    task_id: 3
                    created_at: '2022-12-10T14:20:34.920Z'
                    updated_at: '2022-12-10T14:20:34.920Z'
                    url: http://www.example.com/api/comments/9
                  - id: 8
                    body: |-
                      ### Commodi
                      Possimus molestiae reiciendis.
                      #### Numquam
                    deleted_at:
                    author_id: 25
                    task_id: 3
                    created_at: '2022-12-10T14:20:34.918Z'
                    updated_at: '2022-12-10T14:20:34.918Z'
                    url: http://www.example.com/api/comments/8
                  - id: 7
                    body: "### Aperiam\nRerum eum debitis.\n* Placeat. \n* Beatae.
                      \n* Ut. \n* Vitae. \n* Quidem. \n"
                    deleted_at:
                    author_id: 25
                    task_id: 3
                    created_at: '2022-12-10T14:20:34.917Z'
                    updated_at: '2022-12-10T14:20:34.917Z'
                    url: http://www.example.com/api/comments/7
                  - id: 6
                    body: "##### Consectetur\nRatione pariatur in.\n* Amet. \n* Necessitatibus.
                      \n* A. \n* Ullam. \n* Voluptate. \n* Asperiores. \n* Animi.
                      \n* Reprehenderit. \n* Incidunt. \n* Molestiae. \n"
                    deleted_at:
                    author_id: 25
                    task_id: 3
                    created_at: '2022-12-10T14:20:34.915Z'
                    updated_at: '2022-12-10T14:20:34.915Z'
                    url: http://www.example.com/api/comments/6
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/comment_response"
  "/api/lists":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: List lists
      tags:
      - Lists
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - id: 9
                    name: fuchsia
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 28
                    created_at: '2022-12-10T14:20:34.944Z'
                    updated_at: '2022-12-10T14:20:34.944Z'
                    custom_data: {}
                    url: http://www.example.com/api/lists/9
                    board_url: http://www.example.com/api/boards/28
                  - id: 10
                    name: sky
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 29
                    created_at: '2022-12-10T14:20:34.948Z'
                    updated_at: '2022-12-10T14:20:34.948Z'
                    custom_data: {}
                    url: http://www.example.com/api/lists/10
                    board_url: http://www.example.com/api/boards/29
                  - id: 11
                    name: viridian
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 30
                    created_at: '2022-12-10T14:20:34.952Z'
                    updated_at: '2022-12-10T14:20:34.952Z'
                    custom_data: {}
                    url: http://www.example.com/api/lists/11
                    board_url: http://www.example.com/api/boards/30
                  - id: 12
                    name: carmine
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 31
                    created_at: '2022-12-10T14:20:34.956Z'
                    updated_at: '2022-12-10T14:20:34.956Z'
                    custom_data: {}
                    url: http://www.example.com/api/lists/12
                    board_url: http://www.example.com/api/boards/31
                  - id: 13
                    name: lilac
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 32
                    created_at: '2022-12-10T14:20:34.960Z'
                    updated_at: '2022-12-10T14:20:34.960Z'
                    custom_data: {}
                    url: http://www.example.com/api/lists/13
                    board_url: http://www.example.com/api/boards/32
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/list_response"
    post:
      summary: Create List
      tags:
      - Lists
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 14
                    name: New List
                    pos: 1212.0
                    visible: false
                    deleted_at:
                    board_id: 33
                    created_at: '2022-12-10T14:20:35.000Z'
                    updated_at: '2022-12-10T14:20:35.000Z'
                    custom_data: {}
                    url: http://www.example.com/api/lists/14
                    board_url: http://www.example.com/api/boards/33
              schema:
                "$ref": "#/components/schemas/list_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/list_request"
  "/api/lists/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show List
      tags:
      - Lists
      parameters:
      - name: tasks
        in: query
        type: string
        schema:
          "$ref": "#/components/schemas/include_associated_enum"
        required: false
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful with `tasks=all`:
                  summary: successful with `tasks=all`
                  value:
                    id: 15
                    name: bronze
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 34
                    created_at: '2022-12-10T14:20:35.018Z'
                    updated_at: '2022-12-10T14:20:35.018Z'
                    custom_data: {}
                    url: http://www.example.com/api/lists/15
                    board_url: http://www.example.com/api/boards/34
                    tasks:
                    - id: 4
                      name: Dookie
                      pos: 65536.0
                      priority: very_high
                      spent_time: 0
                      points: 3
                      due_time: '2022-12-17T14:20:35.020Z'
                      list_id: 15
                      deleted_at:
                      url: http://www.example.com/api/tasks/4
                      list_url: http://www.example.com/api/lists/15
                      users:
                      - id: 30
                        name: Bradley Beer
                        avatar_url: https://www.gravatar.com/avatar/e41047b6f7e2a7da72646624731a6c7d
                        role: regular
                        url: http://www.example.com/api/users/30
                      - id: 31
                        name: Terence Hartmann
                        avatar_url: https://www.gravatar.com/avatar/c73c0aa3828b9d62da272b7a0d127b94
                        role: guest
                        url: http://www.example.com/api/users/31
                      tags:
                      - id: 2
                        name: Technology
                        colour: "#72dccb"
                        url: http://www.example.com/api/tags/2
                      - id: 3
                        name: Technology
                        colour: "#0a5309"
                        url: http://www.example.com/api/tags/3
                    - id: 5
                      name: Whitney Houston
                      pos: 65536.0
                      priority: low
                      spent_time: 0
                      points: 2
                      due_time: '2022-12-17T14:20:35.053Z'
                      list_id: 15
                      deleted_at: '2022-12-10T14:20:35.066Z'
                      url: http://www.example.com/api/tasks/5
                      list_url: http://www.example.com/api/lists/15
                      users: []
                      tags: []
                successful with `tasks=visible`:
                  summary: successful with `tasks=visible`
                  value:
                    id: 18
                    name: chocolate
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 39
                    created_at: '2022-12-10T14:20:35.097Z'
                    updated_at: '2022-12-10T14:20:35.097Z'
                    custom_data: {}
                    url: http://www.example.com/api/lists/18
                    board_url: http://www.example.com/api/boards/39
                    tasks:
                    - id: 6
                      name: No Jacket Required
                      pos: 65536.0
                      priority: very_low
                      spent_time: 0
                      points: 3
                      due_time: '2022-12-17T14:20:35.099Z'
                      list_id: 18
                      deleted_at:
                      url: http://www.example.com/api/tasks/6
                      list_url: http://www.example.com/api/lists/18
                      users:
                      - id: 35
                        name: Bobbie Raynor
                        avatar_url: https://www.gravatar.com/avatar/78ed42aa43b94233fa6facb56818813d
                        role: manager
                        url: http://www.example.com/api/users/35
                      - id: 36
                        name: Kermit Maggio DO
                        avatar_url: https://www.gravatar.com/avatar/7a787dc3e65986f0207a5a0ac383762a
                        role: regular
                        url: http://www.example.com/api/users/36
                      tags:
                      - id: 4
                        name: Technology
                        colour: "#36e39e"
                        url: http://www.example.com/api/tags/4
                    - id: 7
                      name: Breakfast in America
                      pos: 65536.0
                      priority: medium
                      spent_time: 0
                      points: 1
                      due_time: '2022-12-17T14:20:35.125Z'
                      list_id: 18
                      deleted_at:
                      url: http://www.example.com/api/tasks/7
                      list_url: http://www.example.com/api/lists/18
                      users: []
                      tags: []
                successful with `tasks=archived`:
                  summary: successful with `tasks=archived`
                  value:
                    id: 21
                    name: plum
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 43
                    created_at: '2022-12-10T14:20:35.162Z'
                    updated_at: '2022-12-10T14:20:35.162Z'
                    custom_data: {}
                    url: http://www.example.com/api/lists/21
                    board_url: http://www.example.com/api/boards/43
                    tasks:
                    - id: 8
                      name: Slippery When Wet
                      pos: 65536.0
                      priority: medium
                      spent_time: 0
                      points: 1
                      due_time: '2022-12-17T14:20:35.165Z'
                      list_id: 21
                      deleted_at: '2022-12-10T14:20:35.177Z'
                      url: http://www.example.com/api/tasks/8
                      list_url: http://www.example.com/api/lists/21
                      users: []
                      tags: []
                    - id: 9
                      name: Rumours
                      pos: 65536.0
                      priority: low
                      spent_time: 0
                      points: 1
                      due_time: '2022-12-17T14:20:35.179Z'
                      list_id: 21
                      deleted_at: '2022-12-10T14:20:35.191Z'
                      url: http://www.example.com/api/tasks/9
                      list_url: http://www.example.com/api/lists/21
                      users:
                      - id: 41
                        name: Enrique Shanahan
                        avatar_url: https://www.gravatar.com/avatar/820e4d2a7f517de2b3dc0364f7712e7f
                        role: regular
                        url: http://www.example.com/api/users/41
                      tags:
                      - id: 5
                        name: Government
                        colour: "#e7229d"
                        url: http://www.example.com/api/tags/5
                successful:
                  summary: successful
                  value:
                    id: 24
                    name: salmon
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 47
                    created_at: '2022-12-10T14:20:35.228Z'
                    updated_at: '2022-12-10T14:20:35.228Z'
                    custom_data: {}
                    url: http://www.example.com/api/lists/24
                    board_url: http://www.example.com/api/boards/47
              schema:
                "$ref": "#/components/schemas/list_response"
    put:
      summary: Update list
      tags:
      - Lists
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 25
                    name: New Name
                    pos: 65536.0
                    visible: false
                    deleted_at:
                    board_id: 48
                    created_at: '2022-12-10T14:20:35.248Z'
                    updated_at: '2022-12-10T14:20:35.263Z'
                    custom_data: {}
                    url: http://www.example.com/api/lists/25
                    board_url: http://www.example.com/api/boards/48
              schema:
                "$ref": "#/components/schemas/list_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/list_request"
    delete:
      summary: Delete list
      tags:
      - Lists
      responses:
        '204':
          description: successful
  "/api/script_runs":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: List script runs
      tags:
      - ScriptRuns
      parameters:
      - name: limit
        in: query
        required: false
        description: Decides how many entities should be returned
        example: 3
        schema:
          type: integer
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - id: 1
                    script_id: 1
                    input: puts 'Hello world'
                    output: Hello world
                    initiator_id: 48
                    state: running
                    triggered_at: '2022-12-10T14:20:35.301Z'
                    delay: 60
                    executed_at: '2022-12-10T14:21:35.301Z'
                    script_name: My first Lambdee Script
                    url: http://www.example.com/api/script_runs/1
                  - id: 2
                    script_id: 2
                    input: puts 'Hello world'
                    output: Hello world
                    initiator_id: 50
                    state: running
                    triggered_at: '2022-12-10T14:20:35.315Z'
                    delay: 60
                    executed_at: '2022-12-10T14:21:35.315Z'
                    script_name: My first Lambdee Script
                    url: http://www.example.com/api/script_runs/2
                  - id: 3
                    script_id: 3
                    input: puts 'Hello world'
                    output: Hello world
                    initiator_id: 52
                    state: running
                    triggered_at: '2022-12-10T14:20:35.323Z'
                    delay: 60
                    executed_at: '2022-12-10T14:21:35.323Z'
                    script_name: My first Lambdee Script
                    url: http://www.example.com/api/script_runs/3
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/script_run_response"
  "/api/scripts/{id}/script_runs":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Script id
      required: true
      schema:
        type: string
    - name: limit
      in: query
      required: false
      description: Decides how many entities should be returned
      example: 3
      schema:
        type: integer
    get:
      summary: List script's script runs
      tags:
      - ScriptRuns
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - id: 4
                    script_id: 4
                    input: puts 'Hello world'
                    output: Hello world
                    initiator_id: 56
                    state: running
                    triggered_at: '2022-12-10T14:20:35.358Z'
                    delay: 60
                    executed_at: '2022-12-10T14:21:35.358Z'
                    script_name: My first Lambdee Script
                    url: http://www.example.com/api/script_runs/4
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/script_run_response"
  "/api/script_runs/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show script run
      tags:
      - ScriptRuns
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 5
                    script_id: 5
                    input: puts 'Hello world'
                    output: Hello world
                    initiator_id: 60
                    state: running
                    triggered_at: '2022-12-10T14:20:35.382Z'
                    delay: 60
                    executed_at: '2022-12-10T14:21:35.382Z'
                    script_name: My first Lambdee Script
                    url: http://www.example.com/api/script_runs/5
              schema:
                "$ref": "#/components/schemas/script_run_response"
    put:
      summary: Update script run
      tags:
      - ScriptRuns
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 6
                    script_id: 6
                    input: puts 'Hello world'
                    output: example output
                    initiator_id: 64
                    state: executed
                    triggered_at: '2022-12-10T14:20:35.409Z'
                    delay: 60
                    executed_at: '2022-12-10T14:21:35.409Z'
                    script_name: My first Lambdee Script
                    url: http://www.example.com/api/script_runs/6
              schema:
                "$ref": "#/components/schemas/script_run_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/script_run_request"
  "/api/script_triggers":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    post:
      summary: Create script trigger
      tags:
      - Script triggers
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 1
                    script_id: 7
                    subject_type: DB::Task
                    subject_id: 10
                    action: destroy
                    delay: 60
                    url: http://www.example.com/api/script_triggers/1
              schema:
                "$ref": "#/components/schemas/script_trigger_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/script_trigger_request"
  "/api/script_triggers/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show script trigger
      tags:
      - Script triggers
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 2
                    script_id: 8
                    subject_type:
                    subject_id:
                    action: create
                    delay: 60
                    url: http://www.example.com/api/script_triggers/2
              schema:
                "$ref": "#/components/schemas/script_trigger_response"
    put:
      summary: Update script trigger
      tags:
      - Script triggers
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 3
                    script_id: 9
                    subject_type:
                    subject_id:
                    action: destroy
                    delay: 60
                    url: http://www.example.com/api/script_triggers/3
              schema:
                "$ref": "#/components/schemas/script_trigger_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/script_trigger_request"
    delete:
      summary: Delete script_trigger
      tags:
      - Script triggers
      responses:
        '204':
          description: successful
  "/api/scripts":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: List scripts
      tags:
      - Scripts
      parameters:
      - name: limit
        in: query
        required: false
        description: Decides how many entities should be returned
        example: 3
        schema:
          type: integer
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - id: 11
                    content: puts 'hello world'
                    name: My first Lambdee Script
                    description: Description of the script
                    author_id: 80
                    url: http://www.example.com/api/scripts/11
                  - id: 12
                    content: puts 'hello world'
                    name: My first Lambdee Script
                    description: Description of the script
                    author_id: 81
                    url: http://www.example.com/api/scripts/12
                  - id: 13
                    content: puts 'hello world'
                    name: My first Lambdee Script
                    description: Description of the script
                    author_id: 82
                    url: http://www.example.com/api/scripts/13
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/script_response"
    post:
      summary: Create Script
      tags:
      - Scripts
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 14
                    content: puts 'Hello world!'
                    name: New Script
                    description: What script does
                    author_id: 85
                    url: http://www.example.com/api/scripts/14
                    script_triggers:
                    - id: 5
                      script_id: 14
                      subject_type:
                      subject_id:
                      action: create
                      delay: 60
                      url: http://www.example.com/api/script_triggers/5
                    - id: 6
                      script_id: 14
                      subject_type: DB::Task
                      subject_id:
                      action: update
                      delay: 60
                      url: http://www.example.com/api/script_triggers/6
                    - id: 7
                      script_id: 14
                      subject_type: DB::Task
                      subject_id: 11
                      action: destroy
                      delay: 60
                      url: http://www.example.com/api/script_triggers/7
              schema:
                "$ref": "#/components/schemas/script_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/script_request"
  "/api/scripts/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show Script
      tags:
      - Scripts
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 15
                    content: puts 'hello world'
                    name: My first Lambdee Script
                    description: Description of the script
                    author_id: 88
                    url: http://www.example.com/api/scripts/15
                    script_triggers: []
              schema:
                "$ref": "#/components/schemas/script_response"
    put:
      summary: Update Script
      tags:
      - Scripts
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 16
                    content: puts 'hello world'
                    name: New Name
                    description: Description of the script
                    author_id: 91
                    url: http://www.example.com/api/scripts/16
                    script_triggers:
                    - id: 9
                      script_id: 16
                      subject_type:
                      subject_id:
                      action: create
                      delay: 60
                      url: http://www.example.com/api/script_triggers/9
              schema:
                "$ref": "#/components/schemas/script_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/script_request"
    delete:
      summary: Delete script
      tags:
      - Scripts
      responses:
        '204':
          description: successful
  "/api/boards/{id}/sprints":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Board id
      required: true
      schema:
        type: string
    get:
      summary: List board's sprints
      tags:
      - Sprints
      parameters:
      - name: page
        in: query
        required: false
        description: Decides which result page should be returned.
        example: 2
        schema:
          type: integer
      - name: per
        in: query
        required: false
        description: Decides how many entities should be returned per one page. **Works
          only, when `page` param is given.**
        example: 2
        schema:
          type: integer
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    sprints:
                    - id: 1
                      board_id: 52
                      name: Sydney
                      description: Magnam est similique. Quisquam quaerat ad. Deleniti
                        pariatur eos.
                      started_at: '2022-12-10T14:20:35.788Z'
                      expected_end_at: '2022-12-17T14:20:35.788Z'
                      ended_at:
                      final_list_name: Done
                      custom_data: {}
                      url: http://www.example.com/api/sprints/1
                    - id: 2
                      board_id: 52
                      name: Adelaide
                      description: Porro deserunt earum. Quia inventore sit. Modi
                        atque ut.
                      started_at: '2022-12-10T14:20:35.793Z'
                      expected_end_at: '2022-12-17T14:20:35.793Z'
                      ended_at:
                      final_list_name: Done
                      custom_data: {}
                      url: http://www.example.com/api/sprints/2
                    - id: 3
                      board_id: 52
                      name: Warragul – Drouin
                      description: Qui itaque ex. Et earum sunt. Sunt voluptatum temporibus.
                      started_at: '2022-12-10T14:20:35.795Z'
                      expected_end_at: '2022-12-17T14:20:35.795Z'
                      ended_at:
                      final_list_name: Done
                      custom_data: {}
                      url: http://www.example.com/api/sprints/3
              schema:
                "$ref": "#/components/schemas/sprint_pages_response"
  "/api/sprints":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: List sprints
      tags:
      - Sprints
      parameters:
      - name: page
        in: query
        required: false
        description: Decides which result page should be returned.
        example: 2
        schema:
          type: integer
      - name: per
        in: query
        required: false
        description: Decides how many entities should be returned per one page. **Works
          only, when `page` param is given.**
        example: 2
        schema:
          type: integer
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    sprints: []
              schema:
                "$ref": "#/components/schemas/sprint_pages_response"
    post:
      summary: Create sprint
      tags:
      - Sprints
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 4
                    board_id: 53
                    name: New Sprint
                    description: Example description of new sprint
                    started_at: '2022-12-10T14:20:35.858Z'
                    expected_end_at: '2025-12-11T23:00:00.000Z'
                    ended_at:
                    final_list_name: Done
                    custom_data: {}
                    url: http://www.example.com/api/sprints/4
              schema:
                "$ref": "#/components/schemas/sprint_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/sprint_request"
  "/api/sprints/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    - name: tasks
      in: query
      example: all
      required: false
      schema:
        type: string
    get:
      summary: Show Sprint
      tags:
      - Sprints
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful with `tasks=all`:
                  summary: successful with `tasks=all`
                  value:
                    id: 5
                    board_id: 54
                    name: Nelson Bay
                    description: In sint corrupti. Laborum beatae qui. Molestiae molestiae
                      aspernatur.
                    started_at: '2022-12-10T14:20:35.867Z'
                    expected_end_at: '2022-12-17T14:20:35.867Z'
                    ended_at:
                    final_list_name: Done
                    custom_data: {}
                    url: http://www.example.com/api/sprints/5
                    tasks:
                    - id: 12
                      name: All We Know Is Falling
                      priority: very_low
                      spent_time: 0
                      points: 5
                      added_at: '2022-12-10T14:20:35.888Z'
                      completed_at:
                      start_state: To Do
                      state: Doing
                successful:
                  summary: successful
                  value:
                    id: 6
                    board_id: 56
                    name: Melbourne
                    description: Nam nemo nihil. Modi similique sed. Quo officiis
                      qui.
                    started_at: '2022-12-10T14:20:35.914Z'
                    expected_end_at: '2022-12-17T14:20:35.914Z'
                    ended_at:
                    final_list_name: Done
                    custom_data: {}
                    url: http://www.example.com/api/sprints/6
              schema:
                "$ref": "#/components/schemas/sprint_response"
    put:
      summary: Update Sprint
      tags:
      - Sprints
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 7
                    board_id: 57
                    name: New Name
                    description: At unde alias. Ut libero harum. Similique libero
                      repudiandae.
                    started_at: '2022-12-10T14:20:35.938Z'
                    expected_end_at: '2022-12-17T14:20:35.938Z'
                    ended_at:
                    final_list_name: Done
                    custom_data: {}
                    url: http://www.example.com/api/sprints/7
              schema:
                "$ref": "#/components/schemas/sprint_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/sprint_request"
    delete:
      summary: Delete sprint
      tags:
      - Sprints
      responses:
        '204':
          description: successful
  "/api/sprints/{id}/end":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    put:
      summary: End sprint
      tags:
      - Sprints
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 9
                    board_id: 59
                    name: Gold Coast
                    description: Nihil vero cupiditate. Tempora vel illo. Deserunt
                      tempore aperiam.
                    started_at: '2022-12-10T14:20:35.991Z'
                    expected_end_at: '2022-12-17T14:20:35.991Z'
                    ended_at: '2022-12-10T14:20:36.011Z'
                    final_list_name: Done
                    custom_data: {}
                    url: http://www.example.com/api/sprints/9
              schema:
                "$ref": "#/components/schemas/sprint_response"
  "/api/boards/{id}/active_sprint":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show active sprint
      tags:
      - Sprints
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 10
                    board_id: 60
                    name: Bundaberg
                    description: Commodi voluptatibus alias. Tenetur perspiciatis
                      non. Velit voluptas soluta.
                    started_at: '2022-12-10T14:20:36.019Z'
                    expected_end_at: '2022-12-17T14:20:36.019Z'
                    ended_at:
                    final_list_name: Done
                    custom_data: {}
                    url: http://www.example.com/api/sprints/10
              schema:
                "$ref": "#/components/schemas/sprint_response"
  "/api/sprints/{id}/burn_up_chart":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show data for burn up chart
      tags:
      - Sprints
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - name: Work Scope
                    data:
                      '2022-12-10': 0
                      '2022-12-17': 0
                  - name: Completed Work
                    data:
                      '2022-12-10': 0
                      '2022-12-17':
  "/api/boards/{id}/tags":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Board id
      required: true
      schema:
        type: string
    get:
      summary: List board's tags
      tags:
      - Tags
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - id: 6
                    name: Government
                    colour: "#9a3289"
                    url: http://www.example.com/api/tags/6
                    board_id: 62
                    created_at: '2022-12-10T14:20:36.074Z'
                    updated_at: '2022-12-10T14:20:36.074Z'
                    custom_data: {}
                  - id: 7
                    name: Mining
                    colour: "#11c24b"
                    url: http://www.example.com/api/tags/7
                    board_id: 62
                    created_at: '2022-12-10T14:20:36.075Z'
                    updated_at: '2022-12-10T14:20:36.075Z'
                    custom_data: {}
                  - id: 8
                    name: Banking
                    colour: "#86b4cc"
                    url: http://www.example.com/api/tags/8
                    board_id: 62
                    created_at: '2022-12-10T14:20:36.076Z'
                    updated_at: '2022-12-10T14:20:36.076Z'
                    custom_data: {}
                  - id: 9
                    name: Marketing
                    colour: "#deb69b"
                    url: http://www.example.com/api/tags/9
                    board_id: 62
                    created_at: '2022-12-10T14:20:36.078Z'
                    updated_at: '2022-12-10T14:20:36.078Z'
                    custom_data: {}
                  - id: 10
                    name: Banking
                    colour: "#6e8d8c"
                    url: http://www.example.com/api/tags/10
                    board_id: 62
                    created_at: '2022-12-10T14:20:36.079Z'
                    updated_at: '2022-12-10T14:20:36.079Z'
                    custom_data: {}
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/tag_response"
    post:
      summary: Create tag
      tags:
      - Tags
      parameters:
      - name: id
        in: path
        description: Board id
        required: true
        schema:
          type: string
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 11
                    name: New Tag
                    colour: "#fff000"
                    url: http://www.example.com/api/tags/11
                    board_id: 63
                    created_at: '2022-12-10T14:20:36.117Z'
                    updated_at: '2022-12-10T14:20:36.117Z'
                    custom_data: {}
              schema:
                "$ref": "#/components/schemas/tag_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/tag_request"
  "/api/tags":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    post:
      summary: Create tag
      tags:
      - Tags
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 12
                    name: New Tag
                    colour: "#fff000"
                    url: http://www.example.com/api/tags/12
                    board_id: 64
                    created_at: '2022-12-10T14:20:36.151Z'
                    updated_at: '2022-12-10T14:20:36.151Z'
                    custom_data: {}
              schema:
                "$ref": "#/components/schemas/tag_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/tag_request"
  "/api/tasks/{id}/tags":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Task id
      required: true
      schema:
        type: string
    get:
      summary: List task's tags
      tags:
      - Tags
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - id: 13
                    name: Marketing
                    colour: "#43fd64"
                    url: http://www.example.com/api/tags/13
                    board_id: 65
                    created_at: '2022-12-10T14:20:36.169Z'
                    updated_at: '2022-12-10T14:20:36.169Z'
                    custom_data: {}
                  - id: 14
                    name: Accounting
                    colour: "#08d872"
                    url: http://www.example.com/api/tags/14
                    board_id: 65
                    created_at: '2022-12-10T14:20:36.172Z'
                    updated_at: '2022-12-10T14:20:36.172Z'
                    custom_data: {}
                  - id: 15
                    name: Banking
                    colour: "#0b083d"
                    url: http://www.example.com/api/tags/15
                    board_id: 65
                    created_at: '2022-12-10T14:20:36.174Z'
                    updated_at: '2022-12-10T14:20:36.174Z'
                    custom_data: {}
                  - id: 16
                    name: Hospitality
                    colour: "#53e43e"
                    url: http://www.example.com/api/tags/16
                    board_id: 65
                    created_at: '2022-12-10T14:20:36.177Z'
                    updated_at: '2022-12-10T14:20:36.177Z'
                    custom_data: {}
                  - id: 17
                    name: Legal
                    colour: "#2819da"
                    url: http://www.example.com/api/tags/17
                    board_id: 65
                    created_at: '2022-12-10T14:20:36.179Z'
                    updated_at: '2022-12-10T14:20:36.179Z'
                    custom_data: {}
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/tag_response"
    post:
      summary: Create tag (associated with given task and task's board)
      tags:
      - Tags
      parameters:
      - name: id
        in: path
        description: Task id
        required: true
        schema:
          type: string
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 18
                    name: New Tag
                    colour: "#fff000"
                    url: http://www.example.com/api/tags/18
                    board_id: 66
                    created_at: '2022-12-10T14:20:36.235Z'
                    updated_at: '2022-12-10T14:20:36.235Z'
                    custom_data: {}
              schema:
                "$ref": "#/components/schemas/tag_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/tag_request"
  "/api/tags/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show Tags
      tags:
      - Tags
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 19
                    name: Advertising
                    colour: "#74aad7"
                    url: http://www.example.com/api/tags/19
                    board_id: 67
                    created_at: '2022-12-10T14:20:36.245Z'
                    updated_at: '2022-12-10T14:20:36.245Z'
                    custom_data: {}
              schema:
                "$ref": "#/components/schemas/tag_response"
    put:
      summary: Update Tag
      tags:
      - Tags
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 20
                    name: New Name
                    colour: "#6dd048"
                    url: http://www.example.com/api/tags/20
                    board_id: 68
                    created_at: '2022-12-10T14:20:36.269Z'
                    updated_at: '2022-12-10T14:20:36.283Z'
                    custom_data: {}
              schema:
                "$ref": "#/components/schemas/tag_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/tag_request"
    delete:
      summary: Delete tag
      tags:
      - Tags
      responses:
        '204':
          description: successful
  "/api/tasks":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: List tasks
      tags:
      - Tasks
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                  - id: 16
                    name: Thriller
                    pos: 65536.0
                    priority: very_high
                    spent_time: 0
                    points: 3
                    due_time: '2022-12-17T14:20:36.312Z'
                    list_id: 33
                    deleted_at:
                    url: http://www.example.com/api/tasks/16
                    list_url: http://www.example.com/api/lists/33
                    description: "### Et\nNostrum vel quo. Laboriosam temporibus est.
                      Enim consequuntur cupiditate. Dolor recusandae qui.\n### Iure\nVoluptatibus
                      quia nostrum. Quos quidem beatae. Quibusdam enim quam.\n0. Doloribus.
                      \n1. Ut. \n2. Dolorum. \n3. Iste. \n4. Nulla. \n5. Omnis. \n6.
                      Eos. \n"
                    created_at: '2022-12-10T14:20:36.320Z'
                    updated_at: '2022-12-10T14:20:36.320Z'
                  - id: 17
                    name: All We Know Is Falling
                    pos: 65536.0
                    priority: very_high
                    spent_time: 0
                    points: 1
                    due_time: '2022-12-17T14:20:36.322Z'
                    list_id: 34
                    deleted_at:
                    url: http://www.example.com/api/tasks/17
                    list_url: http://www.example.com/api/lists/34
                    description: |-
                      ##### Ut
                      Aut eum repudiandae. Et velit repellat. Quas praesentium qui. Eos dolore dolorem.
                      `Similique.`
                    created_at: '2022-12-10T14:20:36.330Z'
                    updated_at: '2022-12-10T14:20:36.330Z'
                  - id: 18
                    name: High School Musical 2
                    pos: 65536.0
                    priority: very_low
                    spent_time: 0
                    points: 3
                    due_time: '2022-12-17T14:20:36.332Z'
                    list_id: 35
                    deleted_at:
                    url: http://www.example.com/api/tasks/18
                    list_url: http://www.example.com/api/lists/35
                    description: |-
                      #### Repellendus
                      Mollitia commodi voluptatem. Nemo sapiente cumque. At qui voluptatem.
                      aut | est | vel
                      ---- | ---- | ----
                      ut | est | aut
                      sit | a | optio
                    created_at: '2022-12-10T14:20:36.341Z'
                    updated_at: '2022-12-10T14:20:36.341Z'
                  - id: 19
                    name: Off the Wall
                    pos: 65536.0
                    priority: very_high
                    spent_time: 0
                    points: 4
                    due_time: '2022-12-17T14:20:36.343Z'
                    list_id: 36
                    deleted_at:
                    url: http://www.example.com/api/tasks/19
                    list_url: http://www.example.com/api/lists/36
                    description: |-
                      #### Corrupti
                      Inventore facere tempore. Quam est doloribus. Dicta voluptate dolorum.
                      ## Minus
                      Occaecati distinctio voluptatibus. Possimus suscipit et. Et ipsum ipsa.
                      ```ruby
                      In.
                      ```
                    created_at: '2022-12-10T14:20:36.351Z'
                    updated_at: '2022-12-10T14:20:36.351Z'
                  - id: 20
                    name: True Blue
                    pos: 65536.0
                    priority: high
                    spent_time: 0
                    points: 4
                    due_time: '2022-12-17T14:20:36.353Z'
                    list_id: 37
                    deleted_at:
                    url: http://www.example.com/api/tasks/20
                    list_url: http://www.example.com/api/lists/37
                    description: |-
                      ## Perferendis
                      Nobis fugiat vel. Consectetur maxime deserunt. Enim dolor nulla. Optio perferendis est. Sint aperiam fugit.
                      et | beatae | sed
                      ---- | ---- | ----
                      veniam | odit | maxime
                      consequatur | vero | sit
                    created_at: '2022-12-10T14:20:36.361Z'
                    updated_at: '2022-12-10T14:20:36.361Z'
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/task_response"
    post:
      summary: Create Task
      tags:
      - Tasks
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 21
                    name: New Task
                    pos: 65536.0
                    priority:
                    spent_time: 0
                    points:
                    due_time:
                    list_id: 38
                    deleted_at:
                    url: http://www.example.com/api/tasks/21
                    list_url: http://www.example.com/api/lists/38
                    description:
                    created_at: '2022-12-10T14:20:36.405Z'
                    updated_at: '2022-12-10T14:20:36.405Z'
              schema:
                "$ref": "#/components/schemas/task_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/task_request"
  "/api/tasks/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Task id
      required: true
      schema:
        type: string
    get:
      summary: Show Taks
      parameters:
      - name: include_associations
        in: query
        required: false
        description: If true, extended object with all associations is returned.
        schema:
          type: string
      tags:
      - Tasks
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful with `include_associations=true`:
                  summary: successful with `include_associations=true`
                  value:
                    id: 22
                    name: 'Flashdance: Original Soundtrack from the Motion Picture'
                    pos: 65536.0
                    priority: low
                    spent_time: 0
                    points: 3
                    due_time: '2022-12-17T14:20:36.411Z'
                    list_id: 39
                    deleted_at:
                    url: http://www.example.com/api/tasks/22
                    list_url: http://www.example.com/api/lists/39
                    description: |-
                      ##### Saepe
                      Odit quas aut. Omnis deleniti molestiae. Accusantium sed consequatur. Corporis quidem fugit. Nostrum aliquid et.
                      `Modi.`
                    created_at: '2022-12-10T14:20:36.420Z'
                    updated_at: '2022-12-10T14:20:36.420Z'
                    list:
                      id: 39
                      name: amaranth
                      pos: 65536.0
                      visible: false
                      deleted_at:
                      board_id: 76
                      created_at: '2022-12-10T14:20:36.414Z'
                      updated_at: '2022-12-10T14:20:36.414Z'
                      custom_data: {}
                      url: http://www.example.com/api/lists/39
                      board_url: http://www.example.com/api/boards/76
                    author:
                      id: 144
                      name: Randee Bosco
                      avatar_url: https://www.gravatar.com/avatar/69efea1e3104c4ebf7886877008b9c3c
                      role: developer
                      url: http://www.example.com/api/users/144
                      email: randee_bosco.1670682036@example.com
                      created_at: '2022-12-10T14:20:36.418Z'
                      updated_at: '2022-12-10T14:20:36.418Z'
                      custom_data: {}
                    users:
                    - id: 145
                      name: Virgil Wisoky
                      avatar_url: https://www.gravatar.com/avatar/d964608a3d9a96265dbe68f337fb65f4
                      role: regular
                      url: http://www.example.com/api/users/145
                      email: virgil_wisoky.1670682036@example.com
                      created_at: '2022-12-10T14:20:36.423Z'
                      updated_at: '2022-12-10T14:20:36.423Z'
                      custom_data: {}
                    - id: 146
                      name: Adina Murazik
                      avatar_url: https://www.gravatar.com/avatar/e48c20fdb66f0cd923e119cb05532dfb
                      role: regular
                      url: http://www.example.com/api/users/146
                      email: adina_murazik.1670682036@example.com
                      created_at: '2022-12-10T14:20:36.428Z'
                      updated_at: '2022-12-10T14:20:36.428Z'
                      custom_data: {}
                    tags:
                    - id: 22
                      name: Government
                      colour: "#ec63d8"
                      url: http://www.example.com/api/tags/22
                      board_id: 77
                      created_at: '2022-12-10T14:20:36.433Z'
                      updated_at: '2022-12-10T14:20:36.433Z'
                      custom_data: {}
                    - id: 23
                      name: Mining
                      colour: "#f0a091"
                      url: http://www.example.com/api/tags/23
                      board_id: 78
                      created_at: '2022-12-10T14:20:36.438Z'
                      updated_at: '2022-12-10T14:20:36.438Z'
                      custom_data: {}
                    - id: 24
                      name: Banking
                      colour: "#ed5c2b"
                      url: http://www.example.com/api/tags/24
                      board_id: 79
                      created_at: '2022-12-10T14:20:36.442Z'
                      updated_at: '2022-12-10T14:20:36.442Z'
                      custom_data: {}
                successful:
                  summary: successful
                  value:
                    id: 23
                    name: No Jacket Required
                    pos: 65536.0
                    priority: very_high
                    spent_time: 0
                    points: 5
                    due_time: '2022-12-17T14:20:36.466Z'
                    list_id: 40
                    deleted_at:
                    url: http://www.example.com/api/tasks/23
                    list_url: http://www.example.com/api/lists/40
                    description: |-
                      #### Voluptas
                      Atque quasi totam. Nihil repellat magni. Dolorum est et. Ipsum qui odit.
                      ### Qui
                      Eum pariatur dignissimos. Eum aspernatur autem. Corporis sunt consectetur.
                      Totam et incidunt. Officiis ~iure~ exercitationem. Occaecati non nihil.
                    created_at: '2022-12-10T14:20:36.475Z'
                    updated_at: '2022-12-10T14:20:36.475Z'
              schema:
                "$ref": "#/components/schemas/task_response"
    put:
      summary: Update Task
      tags:
      - Tasks
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 24
                    name: New Name
                    pos: 65536.0
                    priority: medium
                    spent_time: 0
                    points: 1
                    due_time: '2022-12-17T14:20:36.493Z'
                    list_id: 41
                    deleted_at:
                    url: http://www.example.com/api/tasks/24
                    list_url: http://www.example.com/api/lists/41
                    description: "### Cum\nLaudantium atque consequatur. Vero consequatur
                      ut. Rerum dolor voluptatem. Vero ex esse. Laboriosam cum non.
                      Enim aut aut.\n* Voluptatibus. \n* Quia. \n* Et. \n* Cumque.
                      \n* Enim. \n* Quis. \n* Tempore. \n* Harum. \n"
                    created_at: '2022-12-10T14:20:36.502Z'
                    updated_at: '2022-12-10T14:20:36.518Z'
              schema:
                "$ref": "#/components/schemas/task_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/task_request"
    delete:
      summary: Delete Task
      tags:
      - Tasks
      responses:
        '204':
          description: successful
  "/api/tasks/{id}/add_time":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Task id
      required: true
      schema:
        type: string
    put:
      summary: Add time
      tags:
      - Tasks
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 26
                    name: Falling into You
                    pos: 65536.0
                    priority: medium
                    spent_time: 1200
                    points: 4
                    due_time: '2022-12-17T14:20:36.550Z'
                    list_id: 43
                    deleted_at:
                    url: http://www.example.com/api/tasks/26
                    list_url: http://www.example.com/api/lists/43
                    description: |-
                      ##### Ea
                      Eligendi quod totam. Id inventore cum. Non quasi officia. Fugit laboriosam sit. Vel aut culpa.
                      ```ruby
                      Voluptatem.
                      ```
                    created_at: '2022-12-10T14:20:36.559Z'
                    updated_at: '2022-12-10T14:20:36.574Z'
        '422':
          description: non integer time
          content:
            application/json:
              examples:
                incorrect unit:
                  summary: incorrect unit
                  value:
                    unit:
                    - is not included in the list
                negative time:
                  summary: negative time
                  value:
                    time:
                    - must be greater than 0
                non integer time:
                  summary: non integer time
                  value:
                    time:
                    - must be greater than 0
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                time:
                  type: integer
                unit:
                  type: string
                  enum: "#<Set: {:day, :hour, :minute, :second}>"
  "/api/tasks/{id}/attach_tag":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Task id
      required: true
      schema:
        type: string
    post:
      summary: Attach Tag
      tags:
      - Tasks
      parameters: []
      responses:
        '204':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                tag_id:
                  type: integer
  "/api/tasks/{id}/detach_tag":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Task id
      required: true
      schema:
        type: string
    post:
      summary: Detach Tag
      tags:
      - Tasks
      parameters: []
      responses:
        '204':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                tag_id:
                  type: integer
  "/api/tasks/{id}/assign_user":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Task id
      required: true
      schema:
        type: string
    post:
      summary: Assign User
      tags:
      - Tasks
      parameters: []
      responses:
        '204':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
  "/api/tasks/{id}/unassign_user":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Task id
      required: true
      schema:
        type: string
    post:
      summary: Unassign User
      tags:
      - Tasks
      parameters: []
      responses:
        '204':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
  "/api/workspaces/{id}/users":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: List users of workspace
      tags:
      - Users
      parameters:
      - name: id
        in: path
        description: Workspace id
        required: true
        schema:
          type: string
      - name: page
        in: query
        required: false
        description: Decides which result page should be returned.
        example: 2
        schema:
          type: integer
      - name: role
        in: query
        required: false
        schema:
          "$ref": "#/components/schemas/user_request/properties/role"
        example: admin
      - name: created_at_from
        in: query
        required: false
        description: Date with format YYYY.MM.DD
        example: 2010.01.25
        schema:
          type: string
      - name: created_at_to
        in: query
        required: false
        description: Date with format YYYY.MM.DD
        example: 2010.01.25
        schema:
          type: string
      - name: search
        in: query
        required: false
        description: Searches for users by name and e-mail.
        example: michael
        schema:
          type: string
      - name: per
        in: query
        required: false
        description: Decides how many entities should be returned per one page. **Works
          only, when `page` param is given.**
        example: 2
        schema:
          type: integer
      - name: limit
        in: query
        required: false
        description: Decides how many entities should be returned.
        example: 3
        schema:
          type: integer
      responses:
        '200':
          description: successful with pages
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    users:
                    - id: 172
                      name: Kiley Ward CPA
                      avatar_url: https://www.gravatar.com/avatar/5ae379217a143848b5b5da942f388d41
                      role: guest
                      url: http://www.example.com/api/users/172
                      email: kiley_ward_cpa.1670682036@example.com
                      created_at: '2022-12-10T14:20:36.794Z'
                      updated_at: '2022-12-10T14:20:36.794Z'
                      custom_data: {}
                    - id: 173
                      name: Stasia Dicki
                      avatar_url: https://www.gravatar.com/avatar/4bee912537e14ae1b63fa093295949d2
                      role: manager
                      url: http://www.example.com/api/users/173
                      email: stasia_dicki.1670682036@example.com
                      created_at: '2022-12-10T14:20:36.805Z'
                      updated_at: '2022-12-10T14:20:36.805Z'
                      custom_data: {}
                    - id: 174
                      name: Wilber Lynch DO
                      avatar_url: https://www.gravatar.com/avatar/d0dbb2d25872bcb95de5ebcb712eda80
                      role: guest
                      url: http://www.example.com/api/users/174
                      email: wilber_lynch_do.1670682036@example.com
                      created_at: '2022-12-10T14:20:36.810Z'
                      updated_at: '2022-12-10T14:20:36.810Z'
                      custom_data: {}
                successful with pages:
                  summary: successful with pages
                  value:
                    users:
                    - id: 176
                      name: Shaunte Turcotte
                      avatar_url: https://www.gravatar.com/avatar/d52c403a0364f815d3bb007881475c54
                      role: manager
                      url: http://www.example.com/api/users/176
                      email: shaunte_turcotte.1670682036@example.com
                      created_at: '2022-12-10T14:20:36.836Z'
                      updated_at: '2022-12-10T14:20:36.836Z'
                      custom_data: {}
                    - id: 177
                      name: Eugenio Quigley
                      avatar_url: https://www.gravatar.com/avatar/928cd937a0ef1842c439601cfc421a52
                      role: developer
                      url: http://www.example.com/api/users/177
                      email: eugenio_quigley.1670682036@example.com
                      created_at: '2022-12-10T14:20:36.840Z'
                      updated_at: '2022-12-10T14:20:36.840Z'
                      custom_data: {}
                    - id: 178
                      name: Krysten Bogan
                      avatar_url: https://www.gravatar.com/avatar/ed40680f727f1c17785360d556c054b0
                      role: developer
                      url: http://www.example.com/api/users/178
                      email: krysten_bogan.1670682036@example.com
                      created_at: '2022-12-10T14:20:36.845Z'
                      updated_at: '2022-12-10T14:20:36.845Z'
                      custom_data: {}
                    total_pages: 1
              schema:
                "$ref": "#/components/schemas/user_pages_response"
  "/api/users":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: List users
      tags:
      - Users
      parameters:
      - name: role_collection
        in: query
        schema:
          type: array
          items:
            "$ref": "#/components/schemas/user_request/properties/role"
        example:
        - admin
      - name: role
        in: query
        required: false
        schema:
          "$ref": "#/components/schemas/user_request/properties/role"
        example: admin
      - name: created_at_from
        in: query
        required: false
        description: Date with format YYYY.MM.DD
        example: 2010.01.25
        schema:
          type: string
      - name: created_at_to
        in: query
        required: false
        description: Date with format YYYY.MM.DD
        example: 2010.01.25
        schema:
          type: string
      - name: workspace_id
        in: query
        required: false
        example: 1
        schema:
          type: integer
      - name: search
        in: query
        required: false
        description: Searches for users by name and e-mail.
        example: michael
        schema:
          type: string
      - name: page
        in: query
        required: false
        description: Decides which result page should be returned.
        example: 2
        schema:
          type: integer
      - name: per
        in: query
        required: false
        description: Decides how many entities should be returned per one page. **Works
          only, when `page` param is given.**
        example: 2
        schema:
          type: integer
      - name: limit
        in: query
        required: false
        description: Decides how many entities should be returned.
        example: 3
        schema:
          type: integer
      responses:
        '200':
          description: successful with pages
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    users:
                    - id: 180
                      name: Cleo Prohaska
                      avatar_url: https://www.gravatar.com/avatar/ef991183e3a33005e6c6ad172b8711d1
                      role: manager
                      url: http://www.example.com/api/users/180
                      email: cleo_prohaska.1670682036@example.com
                      created_at: '2022-12-10T14:20:36.866Z'
                      updated_at: '2022-12-10T14:20:36.866Z'
                      custom_data: {}
                    - id: 181
                      name: Cinderella Nikolaus
                      avatar_url: https://www.gravatar.com/avatar/ceb09eec35edaa530ed646a517995d79
                      role: guest
                      url: http://www.example.com/api/users/181
                      email: cinderella_nikolaus.1670682036@example.com
                      created_at: '2022-12-10T14:20:36.870Z'
                      updated_at: '2022-12-10T14:20:36.870Z'
                      custom_data: {}
                    - id: 182
                      name: Abe Weber
                      avatar_url: https://www.gravatar.com/avatar/a1fb9545fcc7127a7c1f30a1f9ef05b3
                      role: developer
                      url: http://www.example.com/api/users/182
                      email: abe_weber.1670682036@example.com
                      created_at: '2022-12-10T14:20:36.873Z'
                      updated_at: '2022-12-10T14:20:36.873Z'
                      custom_data: {}
                    - id: 183
                      name: Darrin Steuber
                      avatar_url: https://www.gravatar.com/avatar/4705527d20fc3669bb5a56659f003f51
                      role: developer
                      url: http://www.example.com/api/users/183
                      email: darrin_steuber.1670682036@example.com
                      created_at: '2022-12-10T14:20:36.876Z'
                      updated_at: '2022-12-10T14:20:36.876Z'
                      custom_data: {}
                    - id: 184
                      name: Wyatt Beer Esq.
                      avatar_url: https://www.gravatar.com/avatar/8c7699400a59237fb1ea2778742c8d86
                      role: developer
                      url: http://www.example.com/api/users/184
                      email: wyatt_beer_esq.1670682036@example.com
                      created_at: '2022-12-10T14:20:36.879Z'
                      updated_at: '2022-12-10T14:20:36.879Z'
                      custom_data: {}
                    - id: 185
                      name: Valentine Kertzmann
                      avatar_url: https://www.gravatar.com/avatar/d2ebcf0b9184f675cdeb803670b2494c
                      role: admin
                      url: http://www.example.com/api/users/185
                      email: valentine_kertzmann.1670682036@example.com
                      created_at: '2022-12-10T14:20:36.883Z'
                      updated_at: '2022-12-10T14:20:36.883Z'
                      custom_data: {}
                successful with pages:
                  summary: successful with pages
                  value:
                    users:
                    - id: 186
                      name: Rafaela Kirlin
                      avatar_url: https://www.gravatar.com/avatar/a091df21051aae16d846102001e01427
                      role: regular
                      url: http://www.example.com/api/users/186
                      email: rafaela_kirlin.1670682036@example.com
                      created_at: '2022-12-10T14:20:36.899Z'
                      updated_at: '2022-12-10T14:20:36.899Z'
                      custom_data: {}
                    - id: 187
                      name: Leonel MacGyver
                      avatar_url: https://www.gravatar.com/avatar/cf6d38b9aca8dbdfcce7f1cd91d008b1
                      role: developer
                      url: http://www.example.com/api/users/187
                      email: leonel_mac_gyver.1670682036@example.com
                      created_at: '2022-12-10T14:20:36.903Z'
                      updated_at: '2022-12-10T14:20:36.903Z'
                      custom_data: {}
                    - id: 188
                      name: Robin Conroy
                      avatar_url: https://www.gravatar.com/avatar/2a39652c1f5ffdecf7e38eda4b5685fc
                      role: guest
                      url: http://www.example.com/api/users/188
                      email: robin_conroy.1670682036@example.com
                      created_at: '2022-12-10T14:20:36.906Z'
                      updated_at: '2022-12-10T14:20:36.906Z'
                      custom_data: {}
                    - id: 189
                      name: Kina Hermann VM
                      avatar_url: https://www.gravatar.com/avatar/f5c60220588c94d6672a7598b660d8a3
                      role: developer
                      url: http://www.example.com/api/users/189
                      email: kina_hermann_vm.1670682036@example.com
                      created_at: '2022-12-10T14:20:36.909Z'
                      updated_at: '2022-12-10T14:20:36.909Z'
                      custom_data: {}
                    - id: 190
                      name: Santos Littel DO
                      avatar_url: https://www.gravatar.com/avatar/20437e0b433209b26e86d1e2f0d25517
                      role: developer
                      url: http://www.example.com/api/users/190
                      email: santos_littel_do.1670682036@example.com
                      created_at: '2022-12-10T14:20:36.912Z'
                      updated_at: '2022-12-10T14:20:36.912Z'
                      custom_data: {}
                    - id: 191
                      name: Bobette Wiegand
                      avatar_url: https://www.gravatar.com/avatar/56851d8634532ee227cdb53a5c31f06c
                      role: admin
                      url: http://www.example.com/api/users/191
                      email: bobette_wiegand.1670682036@example.com
                      created_at: '2022-12-10T14:20:36.915Z'
                      updated_at: '2022-12-10T14:20:36.915Z'
                      custom_data: {}
                    total_pages: 1
              schema:
                "$ref": "#/components/schemas/user_pages_response"
    post:
      summary: Create a user
      tags:
      - Users
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 193
                    name: New User
                    created_at: '2022-12-10T14:20:36.947Z'
                    updated_at: '2022-12-10T14:20:36.947Z'
                    email: new_user@example.com
                    role: developer
                    deleted_at:
                    recent_boards: []
                    custom_data: {}
              schema:
                "$ref": "#/components/schemas/user_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/user_request"
    put:
      summary: Update current user
      tags:
      - Users
      parameters: []
      responses:
        '204':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/user_update_request"
    delete:
      summary: Delete current user
      tags:
      - Users
      responses:
        '204':
          description: successful
  "/api/users/current":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: Show the currently signed in user
      tags:
      - Users
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 196
                    name: Mrs. Lori Goyette
                    avatar_url: https://www.gravatar.com/avatar/0b336e85e535de5f64ad4ebb683747d3
                    role: admin
                    url: http://www.example.com/api/users/196
                    email: mrs_lori_goyette.1670682036@example.com
                    created_at: '2022-12-10T14:20:36.991Z'
                    updated_at: '2022-12-10T14:20:36.991Z'
                    custom_data: {}
              schema:
                "$ref": "#/components/schemas/user_response"
  "/api/users/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show a user
      tags:
      - Users
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 197
                    name: Marilyn D'Amore LLD
                    avatar_url: https://www.gravatar.com/avatar/75554939f0cea0047f599000fdc96f28
                    role: manager
                    url: http://www.example.com/api/users/197
                    email: marilyn_d'amore_lld.1670682037@example.com
                    created_at: '2022-12-10T14:20:37.006Z'
                    updated_at: '2022-12-10T14:20:37.006Z'
                    custom_data: {}
              schema:
                "$ref": "#/components/schemas/user_response"
  "/api/users/sign_in":
    post:
      summary: Sign in
      tags:
      - Users
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 199
                    name: Sixta Maggio MD
                    created_at: '2022-12-10T14:20:37.025Z'
                    updated_at: '2022-12-10T14:20:37.025Z'
                    email: email@example.com
                    role: regular
                    deleted_at:
                    recent_boards: []
                    custom_data: {}
              schema:
                "$ref": "#/components/schemas/user_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/user_sign_in_request"
  "/api/users/sign_out":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    delete:
      summary: Sign out
      tags:
      - Users
      responses:
        '204':
          description: successful
  "/api/workspaces":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    get:
      summary: list workspaces
      tags:
      - Workspaces
      security:
      - Bearer: {}
      parameters:
      - name: limit
        in: query
        description: Decides how many entities should be returned
        example: 3
        required: false
        schema:
          type: integer
      - name: boards
        in: query
        type: string
        schema:
          "$ref": "#/components/schemas/include_associated_enum"
        required: false
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful with `boards=all`:
                  summary: successful with `boards=all`
                  value:
                  - id: 95
                    name: Konklux
                    created_at: '2022-12-10T14:20:37.065Z'
                    updated_at: '2022-12-10T14:20:37.065Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/workspaces/95
                    boards:
                    - id: 93
                      name: Cesium
                      colour: "#29c0b3"
                      workspace_id: 95
                      created_at: '2022-12-10T14:20:37.068Z'
                      updated_at: '2022-12-10T14:20:37.068Z'
                      deleted_at:
                      custom_data: {}
                      url: http://www.example.com/api/boards/93
                      workspace_url: http://www.example.com/api/workspaces/95
                    - id: 94
                      name: Californium
                      colour: "#707984"
                      workspace_id: 95
                      created_at: '2022-12-10T14:20:37.069Z'
                      updated_at: '2022-12-10T14:20:37.069Z'
                      deleted_at:
                      custom_data: {}
                      url: http://www.example.com/api/boards/94
                      workspace_url: http://www.example.com/api/workspaces/95
                    - id: 95
                      name: Thulium
                      colour: "#c23e7d"
                      workspace_id: 95
                      created_at: '2022-12-10T14:20:37.070Z'
                      updated_at: '2022-12-10T14:20:37.070Z'
                      deleted_at:
                      custom_data: {}
                      url: http://www.example.com/api/boards/95
                      workspace_url: http://www.example.com/api/workspaces/95
                    - id: 96
                      name: Darmstadtium
                      colour: "#cfc143"
                      workspace_id: 95
                      created_at: '2022-12-10T14:20:37.071Z'
                      updated_at: '2022-12-10T14:20:37.071Z'
                      deleted_at:
                      custom_data: {}
                      url: http://www.example.com/api/boards/96
                      workspace_url: http://www.example.com/api/workspaces/95
                    - id: 97
                      name: Fermium
                      colour: "#49d0eb"
                      workspace_id: 95
                      created_at: '2022-12-10T14:20:37.073Z'
                      updated_at: '2022-12-10T14:20:37.073Z'
                      deleted_at:
                      custom_data: {}
                      url: http://www.example.com/api/boards/97
                      workspace_url: http://www.example.com/api/workspaces/95
                  - id: 96
                    name: Fintone
                    created_at: '2022-12-10T14:20:37.074Z'
                    updated_at: '2022-12-10T14:20:37.074Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/workspaces/96
                    boards: []
                successful:
                  summary: successful
                  value:
                  - id: 97
                    name: Kanlam
                    created_at: '2022-12-10T14:20:37.099Z'
                    updated_at: '2022-12-10T14:20:37.099Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/workspaces/97
                  - id: 98
                    name: Regrant
                    created_at: '2022-12-10T14:20:37.101Z'
                    updated_at: '2022-12-10T14:20:37.101Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/workspaces/98
                  - id: 99
                    name: Opela
                    created_at: '2022-12-10T14:20:37.104Z'
                    updated_at: '2022-12-10T14:20:37.104Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/workspaces/99
                  - id: 100
                    name: Job
                    created_at: '2022-12-10T14:20:37.106Z'
                    updated_at: '2022-12-10T14:20:37.106Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/workspaces/100
                  - id: 101
                    name: Home Ing
                    created_at: '2022-12-10T14:20:37.109Z'
                    updated_at: '2022-12-10T14:20:37.109Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/workspaces/101
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/workspace_response"
    post:
      summary: create workspace
      tags:
      - Workspaces
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 102
                    name: New Workspace
                    created_at: '2022-12-10T14:20:37.143Z'
                    updated_at: '2022-12-10T14:20:37.143Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/workspaces/102
              schema:
                "$ref": "#/components/schemas/workspace_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/workspace_request"
  "/api/workspaces/{id}":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show workspace
      parameters:
      - name: boards
        in: query
        type: string
        schema:
          "$ref": "#/components/schemas/include_associated_enum"
        required: false
      tags:
      - Workspaces
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful with `boards=all`:
                  summary: successful with `boards=all`
                  value:
                    id: 103
                    name: Redhold
                    created_at: '2022-12-10T14:20:37.153Z'
                    updated_at: '2022-12-10T14:20:37.153Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/workspaces/103
                    boards:
                    - id: 98
                      name: Lanthanum
                      colour: "#0860fc"
                      workspace_id: 103
                      created_at: '2022-12-10T14:20:37.156Z'
                      updated_at: '2022-12-10T14:20:37.157Z'
                      deleted_at:
                      custom_data: {}
                      url: http://www.example.com/api/boards/98
                      workspace_url: http://www.example.com/api/workspaces/103
                    - id: 99
                      name: Sodium
                      colour: "#1dc6d9"
                      workspace_id: 103
                      created_at: '2022-12-10T14:20:37.159Z'
                      updated_at: '2022-12-10T14:20:37.161Z'
                      deleted_at:
                      custom_data: {}
                      url: http://www.example.com/api/boards/99
                      workspace_url: http://www.example.com/api/workspaces/103
                successful:
                  summary: successful
                  value:
                    id: 106
                    name: Alpha
                    created_at: '2022-12-10T14:20:37.182Z'
                    updated_at: '2022-12-10T14:20:37.182Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/workspaces/106
              schema:
                "$ref": "#/components/schemas/workspace_response"
    put:
      summary: update workspace
      tags:
      - Workspaces
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  summary: successful
                  value:
                    id: 107
                    name: New Name
                    created_at: '2022-12-10T14:20:37.202Z'
                    updated_at: '2022-12-10T14:20:37.215Z'
                    deleted_at:
                    custom_data: {}
                    url: http://www.example.com/api/workspaces/107
              schema:
                "$ref": "#/components/schemas/workspace_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/workspace_request"
    delete:
      summary: delete workspace
      tags:
      - Workspaces
      responses:
        '204':
          description: successful
  "/api/workspaces/{id}/assign_user":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Workspace id
      required: true
      schema:
        type: string
    post:
      summary: Assign User
      tags:
      - Workspaces
      parameters: []
      responses:
        '204':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
  "/api/workspaces/{id}/unassign_user":
    parameters:
    - name: Authorization
      in: header
      schema:
        "$ref": "#/components/schemas/authorization"
    - name: id
      in: path
      description: Workspace id
      required: true
      schema:
        type: string
    post:
      summary: Unassign User
      tags:
      - Workspaces
      parameters: []
      responses:
        '204':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
components:
  schemas:
    authorization:
      name: Authorization
      in: header
      type: string
      description: JWT token
      example: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiZGV2ZWxvcGVyIiwic3ViIjoiMSIsInNjcCI6InVzZXIiLCJhdWQiOm51bGwsImlhdCI6MTY2NjE4MDIzMiwiZXhwIjoxNjY3NDc2MjMyLCJqdGkiOiJhMzdlZTA5MC0zZGJmLTRhMzgtOTFiNy1mZTJlM2FiYjlkY2QifQ.tGGjFHfMszfGCfNZS6I-hQNLSu_2Xfs3W4hI8IT4CW0
      required: true
    include_associated_enum:
      type: string
      enum:
      - visible
      - invisible
      - non-archived
      - archived
      - all
    lambdee_models_enum:
      type: string
      enum:
      - DB::User
      - DB::Workspace
      - DB::Board
      - DB::List
      - DB::Task
      - DB::Comment
      - DB::Tag
      - DB::Sprint
      - DB::UserWorkspace
      - DB::TaskUser
      - DB::TaskTag
      - DB::SprintTask
    user_pages_response:
      type: object
      properties:
        users:
          type: array
          items:
            "$ref": "#components/schemas/user_response"
        total_pages:
          type: integer
      required:
      - users
    user_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        avatar_url:
          type: string
        url:
          type: string
        role:
          type: string
      required:
      - id
      - name
    user_request:
      type: object
      properties:
        user:
          type: object
          properties:
            name:
              type: string
            email:
              type: string
            password:
              type: string
            role:
              type: string
              enum:
              - guest
              - regular
              - developer
              - admin
              - manager
      required:
      - name
      - email
    user_update_request:
      type: object
      properties:
        user:
          type: object
          properties:
            name:
              type: string
            email:
              type: string
            password:
              type: string
            current_password:
              type: string
            role:
              type: string
              enum:
              - guest
              - regular
              - developer
              - admin
              - manager
      required:
      - current_password
    user_sign_in_request:
      type: object
      properties:
        user:
          type: object
          properties:
            email:
              type: string
            password:
              type: string
      required:
      - email
      - password
    comment_response:
      type: object
      properties:
        id:
          type: integer
        body:
          type: string
        deleted_at:
          type:
          - string
          - 'null'
          format: date_time
        author_id:
          type: integer
        task_id:
          type: integer
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        url:
          type: string
        users:
          type: array
          items:
            "$ref": "#/components/schemas/user_response"
          nullable: true
      required:
      - id
      - body
      - deleted_at
      - url
    tag_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        colour:
          type: string
        board_id:
          type: integer
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        url:
          type: string
        board_url:
          type: string
      required:
      - id
    tag_request:
      type: object
      properties:
        name:
          type: string
        colour:
          type: string
        board_id:
          type: integer
        task_id:
          type: integer
      required: []
    sprint_pages_response:
      type: object
      properties:
        sprints:
          type: array
          items:
            "$ref": "#components/schemas/sprint_response"
        total_pages:
          type: integer
      required:
      - sprints
    sprint_response:
      type: object
      properties:
        id:
          type: integer
        board_id:
          type: integer
        name:
          type: string
        description:
          type:
          - string
          - 'null'
        started_at:
          type: string
          format: date_time
        expected_end_at:
          type: string
          format: date_time
        ended_at:
          type:
          - string
          - 'null'
          format: date_time
        final_list_name:
          type: string
        url:
          type: string
        tasks:
          type: array
          items:
            "$ref": "#/components/schemas/task_with_sprint_task_response"
          nullable: true
      required:
      - id
      - name
    task_with_sprint_task_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        priority:
          type: string
        spent_time:
          type: integer
        points:
          type: integer
        added_at:
          type: string
          format: date_time
        completed_at:
          type:
          - string
          - 'null'
          format: date_time
        start_state:
          type: string
        state:
          type: string
      required:
      - id
    sprint_request:
      type: object
      properties:
        board_id:
          type: integer
        name:
          type: string
        description:
          type: string
        started_at:
          type: string
          format: date_time
          example: '2025-12-11T23:00:00'
        expected_end_at:
          type: string
          format: date_time
          example: '2025-12-18T23:00:00'
      required:
      - name
      - expected_end_at
    task_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type:
          - string
          - 'null'
        due_time:
          type:
          - string
          - 'null'
          format: date_time
        pos:
          type:
          - number
          - 'null'
          format: float
        priority:
          type:
          - string
          - 'null'
        points:
          type:
          - number
          - 'null'
          format: float
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        deleted_at:
          type:
          - string
          - 'null'
          format: date_time
        list_id:
          type: integer
        list_url:
          type: string
        url:
          type: string
        users:
          type: array
          items:
            "$ref": "#/components/schemas/user_response"
          nullable: true
        tags:
          type: array
          items:
            "$ref": "#/components/schemas/tag_response"
          nullable: true
        author:
          type: object
          schema:
            "$ref": "#/components/schemas/user_response"
          nullable: true
      required:
      - id
      - name
      - pos
      - priority
      - points
      - list_id
      - deleted_at
    task_request:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        due_time:
          type: string
          format: date_time
          example: '2025-12-18T23:00:00'
        pos:
          type: number
          format: float
          description: If not given, value will be set as for the last item in the
            list.
        priority:
          type: string
          enum:
          - very_low
          - low
          - medium
          - high
          - very_high
        points:
          type: number
          format: float
        list_id:
          type: integer
        author_id:
          type: integer
      required:
      - name
      - list_id
      - author_id
    list_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        pos:
          type: number
          format: float
        visible:
          type:
          - boolean
          - 'null'
        deleted_at:
          type:
          - string
          - 'null'
          format: date_time
        board_id:
          type: integer
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        url:
          type: string
        board_url:
          type: string
        tasks:
          type: array
          items:
            "$ref": "#/components/schemas/task_response"
          nullable: true
      required:
      - id
      - name
      - pos
      - visible
      - board_id
      - created_at
      - updated_at
      - deleted_at
    list_request:
      type: object
      properties:
        name:
          type: string
        pos:
          type: number
          format: float
        visible:
          type: boolean
        board_id:
          type: integer
      required:
      - name
      - board_id
    board_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        workspace_id:
          type: integer
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        deleted_at:
          type:
          - string
          - 'null'
          format: date_time
        url:
          type: string
        workspace_url:
          type: string
        lists:
          type: array
          items:
            "$ref": "#/components/schemas/list_response"
          nullable: true
      required:
      - id
      - name
      - workspace_id
      - created_at
      - updated_at
      - deleted_at
    board_request:
      type: object
      properties:
        name:
          type: string
        workspace_id:
          type: integer
      required:
      - name
      - workspace_id
    workspace_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        deleted_at:
          type:
          - string
          - 'null'
          format: date_time
        url:
          type: string
        boards:
          type: array
          items:
            "$ref": "#/components/schemas/board_response"
          nullable: true
      required:
      - id
      - name
      - created_at
      - updated_at
      - deleted_at
    workspace_request:
      type: object
      properties:
        name:
          type: string
      required:
      - name
    script_response:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        content:
          type: string
        url:
          type: string
        script_triggers:
          type: array
          items:
            "$ref": "#/components/schemas/nested_script_trigger_response"
      required: []
    script_request:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        content:
          type: string
        script_triggers_attributes:
          type: array
          items:
            "$ref": "#/components/schemas/nested_script_trigger_request"
      required:
      - name
    nested_script_trigger_response:
      type: object
      properties:
        id:
          type: integer
        script_id:
          type:
          - integer
          - 'null'
        subject_type:
          type:
          - string
          - 'null'
        subject_id:
          type:
          - integer
          - 'null'
        action:
          type: string
        delay:
          type: integer
        url:
          type: string
      required: []
    nested_script_trigger_request:
      type: object
      properties:
        id:
          type: integer
          description: Needed only for updates and destroys.
        script_id:
          type: integer
        subject_type:
          "$ref": "#/components/schemas/lambdee_models_enum"
        subject_id:
          type: integer
        action:
          type: string
          enum:
          - create
          - update
          - destroy
        delay:
          type: integer
          description: Number of seconds of script execution delay
        _destroy:
          type: boolean
          description: If `true` callback for given `id` will be destroyed. Works
            only nested in sprint.
      required:
      - action
    script_trigger_response:
      type: object
      properties:
        id:
          type: integer
        script_id:
          type: integer
        subject_type:
          type:
          - string
          - 'null'
        subject_id:
          type:
          - integer
          - 'null'
        action:
          type: string
        delay:
          type: integer
        url:
          type: string
      required: []
    script_trigger_request:
      type: object
      properties:
        script_id:
          type: integer
        subject_type:
          "$ref": "#/components/schemas/lambdee_models_enum"
        subject_id:
          type: integer
        action:
          type: string
        delay:
          type: integer
          description: Number of seconds of script execution delay
      required:
      - script_id
      - action
    script_run_response:
      type: object
      properties:
        id:
          type: integer
        script_id:
          type: integer
        script_name:
          type: string
        initiator_id:
          type: integer
        input:
          type:
          - string
          - 'null'
        triggered_at:
          type: string
          format: date_time
        executed_at:
          type:
          - string
          - 'null'
          format: date_time
        output:
          type: string
        state:
          type: string
        delay:
          type:
          - integer
          - 'null'
        url:
          type: string
      required: []
    script_run_request:
      type: object
      properties:
        output:
          type: string
        state:
          type: string
          enum:
          - running
          - executed
          - failed
          - timed_out
          - connection_failed
      required: []
servers:
- url: "{defaultProtocol}://{defaultHost}"
  variables:
    defaultProtocol:
      default: http
    defaultHost:
      default: localhost:3000
