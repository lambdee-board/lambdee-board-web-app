version: "3.9"
services:

  postgres:
    image: postgres
    # platform: linux/amd64
    environment:
      POSTGRES_USER: ${DB_NAME:-lambdee_board_web_app_production}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-HasloPostgres123}
    expose:
      - '5432'
    volumes:
      - lambdee-postgres:/var/lib/postgresql/data
    networks:
      - db
    restart: always

  script-service:
    image: lambdee-board/script-service
    # platform: linux/amd64
    expose:
      - "3001"
    environment:
      RACK_ENV: production
      LAMBDEE_HOST: rails:3000
      LAMBDEE_PROTOCOL: http
      SCRIPT_SERVICE_SECRET: ${SCRIPT_SERVICE_SECRET:-sikritToken123}
    networks:
      - web
    restart: always

  rails:
    # platform: linux/amd64
    image: lambdee-board/rails
    expose:
      - "3000"
    environment:
      DB_HOST: postgres
      PORT: 3000
      RAILS_ENV: production
      RACK_ENV: production
      NODE_ENV: production
      DB_NAME: ${DB_NAME:-lambdee_board_web_app_production}
      DB_PASSWORD: ${DB_PASSWORD:-HasloPostgres123}
      SECRET_KEY_BASE: ${SECRET_KEY_BASE:-22e0fc31bebdffb37576ed32310e8f3e7a2cf1fa8c2a209d1542b6f54bed4654343a7b870933b88e4647e79e55a3ad25200e5c9242b7b5accec67b16d0aeec0c}
      LAMBDEE_HOST: ${LAMBDEE_HOST:-localhost}
      LAMBDEE_PROTOCOL: ${LAMBDEE_PROTOCOL:-http}
      SCRIPT_SERVICE_API_USER: ${SCRIPT_SERVICE_API_USER:-lambdee}
      SCRIPT_SERVICE_API_PASSWORD: ${SCRIPT_SERVICE_API_PASSWORD:-sikritToken123}
      SCRIPT_SERVICE_EXTERNAL_HOST: ${LAMBDEE_HOST:-localhost}/script-service/
      SCRIPT_SERVICE_INTERNAL_PROTOCOL: http
      SCRIPT_SERVICE_INTERNAL_HOST: script-service:3001
      SCRIPT_SERVICE_SECRET: ${SCRIPT_SERVICE_SECRET:-sikritToken123}
      SCRIPT_SERVICE_WS_PROTOCOL: ${SCRIPT_SERVICE_WS_PROTOCOL:-ws}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY:-22e0fc31bebdffb37576ed32310e8f3e7a2cf1fa8c2a209d1542b6f54b02938rfw8d7f98388ejshdff4647e79e55a3ad25200e5c9242b7b5accec67b16d0aeec0c}
    depends_on:
      - postgres
      - script-service
    networks:
      - web
      - db
    volumes:
      - lambdee-public-assets:/var/www/lambdee-web-app/public/assets
    restart: always

  nginx:
    image: lambdee-board/nginx
    # platform: linux/amd64
    ports:
      - '${NGINX_HTTP_PORT:-80}:80'
      - '${NGINX_HTTPS_PORT:-443}:443'
    depends_on:
      - rails
    networks:
      - web
    volumes:
      - lambdee-public-assets:/var/www/lambdee-web-app/public/assets
    restart: always

volumes:
  lambdee-postgres:
  lambdee-public-assets:

networks:
  web:
  db:
