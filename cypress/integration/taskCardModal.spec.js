describe('TaskCardModal', () => {
  beforeEach(() => {
    // reset the database!
    cy.request('/cypress_rails_reset_state')

    cy.visit('/')
    cy.contains('Workspaces').click()
    cy.get('.Workspace-menu-item').first().click()
    cy.get('body').first().click()
    cy.get('div.Sidebar-wrapper').should('exist')
    cy.get('div.ListItem-board').first().click()
  })
  context('Shows task card modal with task information', () => {
    it('Display and close task card modal', () => {
      cy.get('.TaskCard-label').parent().last()
        .click()
      cy.get('div.TaskCardModal-sidebar').should('exist')
      cy.get('div.TaskCardModal-main').should('exist')
      cy.get('body').click(0, 0)
      cy.get('div.TaskCardModal-wrapper').should('not.exist')
    })
    // TODO add contains('Author name')
    it('Display task Author', () => {
      cy.contains('Add CI tests')
        .click()
      cy.get('div.TaskCardModal-wrapper').should('exist')
      cy.get('div.TaskCardModal-sidebar').should('exist')
      cy.get('div.TaskCardModal-sidebar-card-box').should('exist')
    })
    it('Display task Priority', () => {
      cy.contains('Add CI tests')
        .click()
      cy.get('div.TaskCardModal-wrapper').should('exist')
      cy.get('div.TaskCardModal-sidebar').should('exist')
      cy.get('.svg-inline--fa.fa-angle-down.fa-xl').should('exist').click()
    })
    it('Display task Points', () => {
      cy.contains('Add CI tests')
        .click()
      cy.get('div.TaskCardModal-wrapper').should('exist')
      cy.get('div.TaskCardModal-sidebar').should('exist')
      cy.get('div.TaskPoints').should('exist')
    })
    it('Display task Tags', () => {
      cy.contains('Add CI tests')
        .click()
      cy.get('div.TaskCardModal-wrapper').should('exist')
      cy.get('div.TaskCardModal-sidebar').should('exist')
      cy.get('.TaskCardModal-sidebar-card-box-tags').should('exist')
    })
    // TODO add contains('user name')
    it('Display task Assigned', () => {
      cy.contains('Add CI tests')
        .click()
      cy.get('div.TaskCardModal-wrapper').should('exist')
      cy.get('div.TaskCardModal-sidebar').should('exist')
      cy.get('div.TaskCardModal-sidebar-card-box').should('exist')
    })
    it('Display task Label', () => {
      cy.contains('Add CI tests')
        .click()
      cy.get('div.TaskCardModal-wrapper').should('exist')
      cy.get('div.TaskCardModal-main').should('exist')
      cy.get('div.TaskCardModal-main-label').contains('Add CI tests')
    })
    it('Display task Description', () => {
      cy.contains('Add CI tests')
        .click()
      cy.get('div.TaskCardModal-wrapper').should('exist')
      cy.contains('temporibus')
    })
    it('Display task Comment', () => {
      cy.contains('Add CI tests')
        .click()
      cy.get('div.TaskCardModal-wrapper').should('exist')
      cy.get('div.TaskComments-wrapper').should('exist').contains('Facilis ullam commodi')
    })
  })
  context('Edit task label', () => {
    it('switches between label and edit label input field', () => {
      cy.contains('Add CI tests')
        .click()
      cy.get('div.TaskCardModal-wrapper').should('exist')
      cy.get('.TaskLabel-typography').should('exist').click()
      cy.get('body').click()
      cy.get('.TaskLabel-edit-input-cancel').should('not.exist')
    })
    it('inputs string into edit label input field and cancels', () => {
      cy.contains('Add CI tests')
        .click()
      cy.get('div.TaskCardModal-wrapper').should('exist')
      cy.get('.TaskLabel-typography').should('exist').click()
      cy.get('.TaskLabel-edit-input-text').click().type('New Test Task')
      cy.get('.TaskLabel-edit-input-cancel').click()
      cy.get('.TaskLabel-typography').contains('Add CI tests')
    })
    it('change label of a task', () => {
      cy.contains('Add CI tests')
        .click()
      cy.get('div.TaskCardModal-wrapper').should('exist')
      cy.get('.TaskLabel-typography').should('exist').click()
      cy.get('.TaskLabel-edit-input-text').click()
        .type('{selectAll}New Test Task{enter}')
      cy.wait(500)
      cy.contains('New Test Task')
    })
  })
  context('Edit task priority', () => {
    it('switches between priority and edit priority dropdown list', () => {
      cy.contains('Add CI tests')
        .click()
      cy.get('div.TaskCardModal-wrapper').should('exist')
      cy.get('.svg-inline--fa.fa-angle-down.fa-xl').should('exist').click()
      cy.get('.svg-inline--fa.fa-angle-down.fa-xl').should('not.exist')
    })
    it('changes priority', () => {
      cy.contains('Add CI tests')
        .click()
      cy.get('div.TaskCardModal-wrapper').should('exist')
      cy.get('.svg-inline--fa.fa-angle-down.fa-xl').should('exist').click()
      cy.contains('Very Low').click()
      cy.wait(500)
      cy.get('.svg-inline--fa.fa-angles-down.fa-xl').should('exist').click()
    })
  })
  context('Edit task points', () => {
    it('switches between points and edit points input field', () => {
      cy.contains('Add CI tests')
        .click()
      cy.get('div.TaskCardModal-wrapper').should('exist')
      cy.get('div.TaskPoints .TaskPoints-avatar').should('exist').click()
      cy.get('.TaskPoints-input-text').should('exist')
      cy.get('body').click()
      cy.get('.TaskPoints-input-text').should('not.exist')
    })
    it('changes points', () => {
      cy.contains('Add CI tests')
        .click()
      cy.get('div.TaskCardModal-wrapper').should('exist')
      cy.get('div.TaskPoints .TaskPoints-avatar').should('exist').contains('2')
        .click()
      cy.get('.TaskPoints-input-text').should('exist').click()
        .type('1{enter}')
      cy.get('div.TaskPoints .TaskPoints-avatar').should('exist').contains('1')
    })
  })
  context('Edit task tags', () => {
    it('switches between "Add tag" button and autocomplete input', () => {
      cy.contains('Add CI tests')
        .click()
      cy.get('div.TaskCardModal-wrapper').should('exist')
      cy.get('.TaskCardModal-add-tag-btn').should('exist').click()
      cy.get('#attach-tag-to-task-select').should('exist')
      cy.get('body').click()
      cy.get('.TaskCardModal-add-tag-btn').should('exist')
    })
    it('attaches "Frontend" tag to task', () => {
      cy.contains('Add CI tests')
        .click()
      cy.get('div.TaskCardModal-wrapper').should('exist')
      cy.get('.TaskCardModal-add-tag-btn').should('exist').click()
      cy.get('#attach-tag-to-task-select').should('exist').click()
        .type('Frontend{downArrow}{enter}')
      cy.get('.TaskCardModal-sidebar-card-box-tags').contains('Frontend')
    })
    it('detaches "DevOps" tag from task', () => {
      cy.contains('Add CI tests')
        .click()
      cy.get('div.TaskCardModal-wrapper').should('exist')
      cy.get('.TaskCardModal-sidebar-card-box-tags .Tag svg').first().click()
      cy.get('.TaskCardModal-sidebar-card-box-tags .Tag').should('not.exist')
    })
    it('opens new tag dialog, then closes dialog/autocomplete input', () => {
      cy.contains('Add CI tests')
        .click()
      cy.get('div.TaskCardModal-wrapper').should('exist')
      cy.get('.TaskCardModal-add-tag-btn').should('exist').click()
      cy.get('#attach-tag-to-task-select').should('exist').click()
        .type('New Tag{downArrow}{enter}')
      cy.get('#create-tag-name-input').should('exist')
      cy.get('.create-tag-buttons button').contains('Cancel').click()
      cy.get('#create-tag-name-input').should('not.exist')
      cy.get('.TaskCardModal-add-tag-btn').should('exist')
    })
    it('creates/attaches "New Tag"', () => {
      cy.contains('Add CI tests')
        .click()
      cy.get('div.TaskCardModal-wrapper').should('exist')
      cy.get('.TaskCardModal-add-tag-btn').should('exist').click()
      cy.get('#attach-tag-to-task-select').should('exist').click()
        .type('New Tag{downArrow}{enter}')
      cy.get('#create-tag-name-input').should('have.value', 'New Tag')
      cy.get('.create-tag-buttons button').contains('Create').click()
      cy.wait(500)
      cy.get('.TaskCardModal-sidebar-card-box-tags').contains('New Tag')
    })
  })
})
